{"version": 2, "width": 191, "height": 48, "timestamp": 1676795708, "env": {"SHELL": "/bin/zsh", "TERM": "xterm-256color"}}
[0.042107, "o", "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                                                                                                                                              \r \r"]
[0.043557, "o", "\r\u001b[0m\u001b[27m\u001b[24m\u001b[Jsoasme@soasme-macbook 2023-02-19-lexer % \u001b[K\u001b[?2004h"]
[1.123732, "o", "v"]
[1.26765, "o", "\bvi"]
[1.539862, "o", " "]
[3.507917, "o", "s"]
[3.667826, "o", "r"]
[4.012003, "o", "c\u001b[1m/\u001b[0m"]
[4.227844, "o", "\b\u001b[0m/l"]
[4.387944, "o", "e"]
[4.692002, "o", "x"]
[4.875947, "o", "e"]
[4.99589, "o", "r"]
[5.171747, "o", "_"]
[5.2835, "o", "t"]
[5.363913, "o", "e"]
[5.460521, "o", "st"]
[6.067914, "o", "."]
[6.195974, "o", "c"]
[6.476326, "o", "\u001b[?2004l\r\r\n"]
[6.507542, "o", "\u001b[?1049h\u001b[>4;2m\u001b[?1h\u001b=\u001b[?2004h\u001b[?1004h\u001b[1;48r\u001b[?12h\u001b[?12l\u001b[22;2t\u001b[22;1t"]
[6.509495, "o", "\u001b[27m\u001b[29m\u001b[m\u001b[H\u001b[2J\u001b[?25l\u001b[48;1H\"src/lexer_test.c\""]
[6.509536, "o", " 16L, 303B"]
[6.509814, "o", "\u001b[2;1Hâ–½\u001b[6n\u001b[2;1H  \u001b[3;1H\u001bPzz\u001b\\\u001b[0%m\u001b[6n\u001b[3;1H           \u001b[1;1H\u001b[>c\u001b]10;?\u0007\u001b]11;?\u0007"]
[6.510663, "o", "\u001b[1;1H#include <stdio.h>\r\n#include <assert.h>\u001b[2;20H\u001b[K\u001b[3;1H#include \"lexer.h\"\u001b[3;19H\u001b[K\u001b[5;1Hint main(int argc, char** argv) {\u001b[7;5H{\u001b[8;9HLexer lexer = {0};\u001b[9;9HToken tok = Lexer_NextToken(&lexer);\u001b[10;9Hassert(tok == TOK_ERR);\u001b[11;9Hassert(lexer.error == LEX_EUNKNOWN);\r\n    }\u001b[14;5Hprintf(\"all test passed\");\r\n    return 0;\r\n}\r\n\u001b[94m~                                                                                                                                                                                              \u001b[18;1H~                                                                                                                                                                                              \u001b[19;1H~                                                                                                                                                                                              \u001b[20;1H~                                                                                          "]
[6.510793, "o", "                                                                                                    \u001b[21;1H~                                                                                                                                                                                              \u001b[22;1H~                                                                                                                                                                                              \u001b[23;1H~                                                                                                                                                                                              \u001b[24;1H~                                                                                                                                                                                              \u001b[25;1H~                                                                                                                            "]
[6.510977, "o", "                                                                  \u001b[26;1H~                                                                                                                                                                                              \u001b[27;1H~                                                                                                                                                                                              \u001b[28;1H~                                                                                                                                                                                              \u001b[29;1H~                                                                                                                                                                                              \u001b[30;1H~                                                                                                                                                              "]
[6.51117, "o", "                                \u001b[31;1H~                                                                                                                                                                                              \u001b[32;1H~                                                                                                                                                                                              \u001b[33;1H~                                                                                                                                                                                              \u001b[34;1H~                                                                                                                                                                                              \u001b[35;1H~                                                                                                                                                                                              \u001b["]
[6.511288, "o", "36;1H~                                                                                                                                                                                              \u001b[37;1H~                                                                                                                                                                                              \u001b[38;1H~                                                                                                                                                                                              \u001b[39;1H~                                                                                                                                                                                              \u001b[40;1H~                                                                                                                                                                                              \u001b[41;1H~                            "]
[6.511467, "o", "                                                                                                                                                                  \u001b[42;1H~                                                                                                                                                                                              \u001b[43;1H~                                                                                                                                                                                              \u001b[44;1H~                                                                                                                                                                                              \u001b[45;1H~                                                                                                                                                                                              "]
[6.511657, "o", "\u001b[46;1H~                                                                                                                                                                                              \u001b[47;1H~                                                                                                                                                                                              \u001b[1;1H\u001b[?25h\u001b[?12$p"]
[7.164023, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[7.563896, "o", "v"]
[7.699766, "o", "s"]
[8.052264, "o", "\r"]
[8.05316, "o", "\u001b[?25l\u001b[1;96H\u001b[7m|\u001b[2;96H|\u001b[3;96H|\u001b[4;96H|\u001b[5;96H|\u001b[6;96H|\u001b[7;96H|\u001b[8;96H|\u001b[9;96H|\u001b[10;96H|\u001b[11;96H|\u001b[12;96H|\u001b[13;96H|\u001b[14;96H|\u001b[15;96H|\u001b[16;96H|\u001b[17;96H|\u001b[18;96H|\u001b[19;96H|\u001b[20;96H|\u001b[21;96H|\u001b[22;96H|\u001b[23;96H|\u001b[24;96H|\u001b[25;96H|\u001b[26;96H|\u001b[27;96H|\u001b[28;96H|\u001b[29;96H|\u001b[30;96H|\u001b[31;96H|\u001b[32;96H|\u001b[33;96H|\u001b[34;96H|\u001b[35;96H|\u001b[36;96H|\u001b[37;96H|\u001b[38;96H|\u001b[39;96H|\u001b[40;96H|\u001b[41;96H|\u001b[42;96H|\u001b[43;96H|\u001b[44;96H|\u001b[45;96H|\u001b[46;96H|\u001b[m\r\n\u001b[1m\u001b[7msrc/lexer_test.c                                                                                \u001b[m\u001b[1;97H#include <stdio.h>\u001b[2;97H#include <assert.h>\u001b[3;97H#include \"lexer.h\"\u001b[5;97Hint main(int argc, char** argv) {\u001b[7;101H{\u001b[8;105HLexer lexer = {0};\u001b[9;105HToken tok = Lexer_NextToken(&lexer);\u001b[10;105Hassert(tok == TOK_ERR);\u001b[11;105Hassert(lexer.error == LEX_EUNKNOWN);\u001b[12;101H}\u001b[14;101Hprintf(\"all test passed\");\u001b[15;101Hreturn 0;\u001b[16;97H}\u001b[17;97H\u001b[94m~\u001b[18;97H~\u001b[19;97H~\u001b[20;97H~\u001b[21;97H~\u001b[22;97H~\u001b[23;97H~\u001b[24;97H~\u001b[25;97H~\u001b[26;97H~\u001b[27;97H~\u001b[28;97H~\u001b[29;97H~\u001b[30;97H~\u001b[31;97H~\u001b[32;97H~\u001b[33"]
[8.053418, "o", ";97H~\u001b[34;97H~\u001b[35;97H~\u001b[36;97H~\u001b[37;97H~\u001b[38;97H~\u001b[39;97H~\u001b[40;97H~\u001b[41;97H~\u001b[42;97H~\u001b[43;97H~\u001b[44;97H~\u001b[45;97H~\u001b[46;97H~\u001b[m\u001b[47;97H\u001b[7msrc/lexer_test.c                                                                               \u001b[1;1H\u001b[?25h"]
[8.628097, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[12.884016, "o", "s"]
[13.020091, "o", "p"]
[13.196129, "o", " "]
[13.811836, "o", "s"]
[14.035644, "o", "r"]
[15.172426, "o", "..."]
[15.172664, "o", "\u001b[?25l\b\b\bc/\u001b[48;9H\u001b[K\u001b[48;9H\u001b[?25h"]
[15.547896, "o", "l"]
[15.660129, "o", "e"]
[16.404156, "o", "x"]
[16.708084, "o", "e"]
[16.868025, "o", "r"]
[17.180023, "o", "."]
[17.292256, "o", "c"]
[17.468236, "o", "\r"]
[17.47055, "o", "\u001b[?25l\"src/lexer.c\" \u001b[48;15H\u001b[K"]
[17.470844, "o", "\u001b[48;15H6L, 113B"]
[17.471367, "o", "\u001b[1;10H\"lexer.h\"\r\n                   \r\nToken Lexer_NextToken(Lexer *lexer) {\r\n    lexer->error = LEX_EUNKNOWN;\r\n    return TOK_ERR;              \r\n}\r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                            "]
[17.4716, "o", "  \r\n~                                                                                              \u001b[m\u001b[24;1H\u001b[1m\u001b[7msrc/lexer.c                                                                                    \u001b[m\r\n#include <stdio.h>                                                                             \r\n#include <assert.h>                                                                            \r\n#include \"lexer.h\"                                                                             \r\n                                                                                               \r\nint main(int argc, char** argv) {                                                              \r\n                                                                                               \r\n    {                                                                                          \r\n        Lexer lexer = {0};                                                                     \r\n        Token tok = Lexer_Next"]
[17.471772, "o", "Token(&lexer);                                                   \r\n        assert(tok == TOK_ERR);                                                                \r\n        assert(lexer.error == LEX_EUNKNOWN);                                                   \r\n    }                                                                                          \r\n                                                                                               \r\n    printf(\"all test passed\");                                                                 \r\n    return 0;                                                                                  \r\n}                                                                                              \u001b[47;1H\u001b[7msrc/lexer_test.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                \u001b[1;1H\u001b[?25h"]
[18.477378, "o", "\u001b[24;1Hsrc/lexer.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                    \u001b[m\u001b[47;97H\u001b[1m\u001b[7msrc/lexer_test.c                                                                               \u001b[1;97H"]
[18.972218, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[19.252185, "o", "s"]
[19.323952, "o", "p"]
[21.580385, "o", "\u001b[?25l\u001b[48;1H\u001b[K\u001b[1;97H\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[22.084274, "o", "\u001b[?25l\u001b[48;1H\u001b[K\u001b[1;97H\u001b[?25h\u0007"]
[22.868647, "o", "\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[23.148262, "o", "e"]
[23.508023, "o", " "]
[24.020078, "o", "s"]
[24.516579, "o", "\u001b[?25l\u001b[48;4H\u001b[K\u001b[48;4H\u001b[?25h"]
[26.564468, "o", "M"]
[26.804087, "o", "a"]
[26.876475, "o", "k"]
[27.012691, "o", "..."]
[27.012927, "o", "\u001b[?25l\b\b\befile\u001b[?25h"]
[27.396052, "o", "\r"]
[27.397558, "o", "\u001b[?25l\"Makefile\" "]
[27.397801, "o", "6L, 95B"]
[27.398147, "o", "\u001b[1;97HCC=clang\u001b[1;106H\u001b[K\u001b[2;97H\u001b[K\u001b[3;97Hsrc/lexer_test: src/lexer.o src/lexer_test.o\u001b[5;97Htest: src/lexer_test\u001b[5;117H\u001b[K\u001b[6;101H./src/lexer_test\u001b[7;97H\u001b[94m~                                                                                              \u001b[8;97H~                                                                                              \u001b[9;97H~                                                                                              \u001b[10;97H~                                                                                              \u001b[11;97H~                                                                                              \u001b[12;97H~                                                                                              \u001b[13;97H~                                                                                              \u001b[14;97H~                                                                                              \u001b[15;97H~                                        "]
[27.398281, "o", "                                                      \u001b[16;97H~                                                                                              \u001b[m\u001b[47;97H\u001b[1m\u001b[7mMakefile         \u001b[1;97H\u001b[?25h"]
[28.212419, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[28.395694, "o", "s"]
[28.47654, "o", "p"]
[28.700288, "o", "\r"]
[28.701337, "o", "\u001b[?25l\u001b[24;97H\u001b[1m\u001b[7mMakefile                                                                                       \u001b[m\u001b[25;97HCC=clang\u001b[25;105H\u001b[K\u001b[26;97H\u001b[K\u001b[27;97Hsrc/lexer_test: src/lexer.o src/lexer_test.o\u001b[27;141H\u001b[K\u001b[28;97H\u001b[K\u001b[29;97Htest: src/lexer_test\u001b[29;117H\u001b[K\u001b[30;97H    ./src/lexer_test\u001b[30;117H\u001b[K\u001b[47;97H\u001b[7mMakefile\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                       \u001b[1;97H\u001b[?25h"]
[29.317082, "o", "\u001b[24;97HMakefile\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                       \u001b[m\u001b[47;97H\u001b[1m\u001b[7mMakefile                                                                                       \u001b[25;97H"]
[29.796445, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[30.124262, "o", "e"]
[30.355164, "o", " "]
[31.092551, "o", "s"]
[31.420576, "o", "r"]
[31.580748, "o", "..."]
[31.580979, "o", "\u001b[?25l\b\b\bc/\u001b[48;8H\u001b[K\u001b[48;8H\u001b[?25h"]
[31.708504, "o", "l"]
[31.852434, "o", "e"]
[31.980709, "o", "..."]
[31.981143, "o", "\u001b[?25l\b\b\bxer.c\u0007\u001b[?25h"]
[32.87717, "o", "\u001b[?25l\u001b[48;14H\u001b[K\u001b[48;14H\u001b[?25h"]
[33.22053, "o", "h"]
[33.484462, "o", "\r"]
[33.486637, "o", "\u001b[?25l\"src/lexer.h\" "]
[33.48692, "o", "33L, 556B"]
[33.487376, "o", "\u001b[25;97H#ifndef LEXER_H\u001b[26;97H#define LEXER_H\u001b[27;97H\u001b[K\u001b[28;97H#include <stdlib.h>\u001b[29;97H\u001b[K\u001b[30;97Htypedef enum LexerError {\u001b[31;97H    LEX_EOK,\u001b[31;109H\u001b[K\u001b[32;97H    LEX_EUNKNOWN,\u001b[32;114H\u001b[K\u001b[33;97H} LexerError;\u001b[33;110H\u001b[K\u001b[34;97H\u001b[K\u001b[35;97Htypedef enum Token {\u001b[35;117H\u001b[K\u001b[36;97H    TOK_ERR,\u001b[36;109H\u001b[K\u001b[37;97H    TOK_EOF,\u001b[37;109H\u001b[K\u001b[38;97H    TOK_SEMICOLON,\u001b[38;115H\u001b[K\u001b[39;97H} Token;\u001b[39;105H\u001b[K\u001b[40;97H\u001b[K\u001b[41;97H// The state of the lexer\u001b[41;122H\u001b[K\u001b[42;97Htypedef struct Lexer {\u001b[42;119H\u001b[K\u001b[43;97H    // the source input\u001b[43;120H\u001b[K\u001b[44;97H    const char* source;\u001b[44;120H\u001b[K\u001b[45;97H    // the current parsed input\u001b[45;128H\u001b[K\u001b[46;97H    const char* current;\u001b[46;121H\u001b[K\u001b[47;97H\u001b[1m\u001b[7msrc/lexer.h\u001b[25;97H\u001b[?25h"]
[36.533578, "o", "\u001b[47;1Hsrc/lexer_test.c                                                                                \u001b[m\u001b[7msrc/lexer.h\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                    \u001b[25;1H"]
[39.868865, "o", "\r\n"]
[41.58895, "o", "\u001b[25;1H"]
[44.2376, "o", "\u001b[m\u001b[24;1H\u001b[1m\u001b[7msrc/lexer.c                                                                                    \u001b[m\u001b[47;1H\u001b[7msrc/lexer_test.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                \u001b[1;1H"]
[45.189006, "o", "\r\n"]
[45.812945, "o", "\u001b[1;1H"]
[46.109432, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[48;13H\u001b[K\u001b[2;1H                                                                                               \r\n                                                                                               \r\nToken Lexer_NextToken(Lexer *lexer) {                                                          \r\n    lexer->error = LEX_EUNKNOWN;                                                               \r\n    return TOK_ERR;                                                                            \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                             "]
[46.109744, "o", " \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                  "]
[46.109951, "o", "                                            \r\n~                                                                                              \u001b[m\u001b[24;13H\u001b[1m\u001b[7m[+]\u001b[2;1H\u001b[?25h"]
[46.39765, "o", "\u001b[?25l\u001b[m\r\n                                                                                               \r\n                                                                                               \r\nToken Lexer_NextToken(Lexer *lexer) {                                                          \r\n    lexer->error = LEX_EUNKNOWN;                                                               \r\n    return TOK_ERR;                                                                            \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                     "]
[46.397717, "o", "                                                         \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                          "]
[46.397949, "o", "    \u001b[3;1H\u001b[?25h"]
[46.621301, "o", "\u001b[?25l\u001b[mT\u001b[?25h"]
[46.74107, "o", "\u001b[?25lo\u001b[?25h"]
[46.893284, "o", "\u001b[?25lk\u001b[?25h"]
[46.981212, "o", "\u001b[?25le\u001b[?25h"]
[47.061175, "o", "\u001b[?25ln\u001b[?25h"]
[47.157341, "o", "\u001b[?25l \u001b[?25h"]
[47.301262, "o", "\u001b[?25lL\u001b[?25h"]
[47.41321, "o", "\u001b[?25le\u001b[?25h"]
[47.629294, "o", "\u001b[?25lx\u001b[?25h"]
[47.829247, "o", "\u001b[?25le\u001b[?25h"]
[47.941066, "o", "\u001b[?25lr\u001b[?25h"]
[48.245257, "o", "\u001b[?25l_\u001b[?25h"]
[48.453387, "o", "\u001b[?25lN\u001b[?25h"]
[48.60534, "o", "\u001b[?25le\u001b[?25h"]
[48.828981, "o", "\u001b[?25lx\u001b[?25h"]
[49.149097, "o", "\u001b[?25lt\u001b[?25h"]
[49.693424, "o", "\u001b[?25lO\u001b[?25h"]
[50.517162, "o", "\u001b[?25lp\u001b[?25h"]
[51.261964, "o", "\u001b[?25l(\u001b[?25h"]
[51.461304, "o", "\u001b[?25lL\u001b[?25h"]
[51.662637, "o", "\u001b[?25le\u001b[?25h"]
[51.869425, "o", "\u001b[?25lx\u001b[?25h"]
[52.085705, "o", "\u001b[?25le\u001b[?25h"]
[52.173396, "o", "\u001b[?25lr\u001b[?25h"]
[52.357084, "o", "\u001b[?25l \u001b[?25h"]
[52.549463, "o", "\u001b[?25l*\u001b[?25h"]
[52.765196, "o", "\u001b[?25ll\u001b[?25h"]
[52.797336, "o", "\u001b[?25le\u001b[?25h"]
[53.013334, "o", "\u001b[?25lx\u001b[?25h"]
[53.189381, "o", "\u001b[?25le\u001b[?25h"]
[53.285541, "o", "\u001b[?25lr\u001b[?25h"]
[53.494173, "o", "\u001b[?25l\u001b[3;19H\u001b[46m(\u001b[12C)\u001b[?25h"]
[53.661475, "o", "\u001b[?25l\u001b[m\u001b[3;19H(\u001b[12C) \u001b[?25h"]
[53.758248, "o", "\u001b[?25l{\u001b[?25h"]
[53.974255, "o", "\u001b[?25l\b\u001b[46m{}\u001b[?25h"]
[54.385775, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[3;35H"]
[54.46898, "o", "\u001b[?25l"]
[54.470173, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[3;35H\u001b[?25h"]
[54.71838, "o", "\u001b[?25l\u001b[m\r\n                                                                                               \r\n                                                                                               \r\nToken Lexer_NextToken(Lexer *lexer) {                                                          \r\n    lexer->error = LEX_EUNKNOWN;                                                               \r\n    return TOK_ERR;                                                                            \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                     "]
[54.718449, "o", "                                                         \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \u001b[m\u001b[3;35H  \r\n"]
[54.718806, "o", "\u001b[46m}\b\u001b[?25h"]
[54.954837, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[4;1H"]
[55.148749, "o", "\u001b[?25l"]
[55.149688, "o", "\u001b[?25h\u001b[?25l\u001b[3;34H{\r\n}\u001b[3;1H\u001b[?25h"]
[55.757553, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[4;1H                                                                                               \r\n}                                                                                              \r\n                                                                                               \r\nToken Lexer_NextToken(Lexer *lexer) {                                                          \r\n    lexer->error = LEX_EUNKNOWN;                                                               \r\n    return TOK_ERR;                                                                            \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~          "]
[55.757657, "o", "                                                                                    \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \u001b[4;1H\u001b[?25h"]
[56.389694, "o", "\u001b[?25l\u001b[m    \u001b[?25h"]
[57.34148, "o", "\u001b[?25ls\u001b[?25h"]
[57.557476, "o", "\u001b[?25lw\u001b[?25h"]
[57.629509, "o", "\u001b[?25li\u001b[?25h"]
[57.749611, "o", "\u001b[?25lt\u001b[?25h"]
[57.957382, "o", "\u001b[?25lc\u001b[?25h"]
[58.053585, "o", "\u001b[?25lh\u001b[?25h"]
[58.285524, "o", "\u001b[?25l \u001b[?25h"]
[58.630187, "o", "\u001b[?25l(\u001b[?25h"]
[58.718272, "o", "\u001b[?25l\b\u001b[46m()\u001b[?25h"]
[59.067548, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[4;13H"]
[59.213064, "o", "\u001b[?25l"]
[59.214242, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[4;13H\u001b[?25h"]
[59.71034, "o", "\u001b[?25l\u001b[mc\u001b[46m)\b\u001b[?25h"]
[61.289419, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[4;13H"]
[61.348752, "o", "\u001b[?25l"]
[61.350144, "o", "\b(c)\b\b\u001b[?25h\u001b[?25l\b\u001b[46m(\u001b[mc\u001b[46m)\b\u001b[?25h"]
[61.581901, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[4;15H\u001b[?25h"]
[61.757697, "o", "\u001b[?25l\u001b[m\b\b\b(c) \u001b[?25h"]
[61.950372, "o", "\u001b[?25l\u001b[46m{\r\n}\u001b[4;17H\u001b[?25h"]
[62.166471, "o", "\u001b[?25l}\u001b[m\r\n}\u001b[4;18H\u001b[?25h"]
[62.856373, "o", "\u001b[48;1H\u001b[K\u001b[4;17H"]
[63.029032, "o", "\u001b[?25l"]
[63.03021, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[4;17H\u001b[?25h"]
[63.29473, "o", "\u001b[?25l\u001b[m\r\n                                                                                               \r\n}                                                                                              \r\n                                                                                               \r\nToken Lexer_NextToken(Lexer *lexer) {                                                          \r\n    lexer->error = LEX_EUNKNOWN;                                                               \r\n    return TOK_ERR;                                                                            \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                     "]
[63.29496, "o", "                                                         \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \u001b[m\u001b[4;17H  \r\n    \u001b[46m}\b\u001b[?25h"]
[64.634819, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[5;1H"]
[64.741199, "o", "\u001b[?25l"]
[64.742039, "o", "    \u001b[?25h\u001b[?25l\u001b[4;16H{\r\n    }\u001b[4;5H\u001b[?25h"]
[65.26174, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[5;1H                                                                                               \r\n    }                                                                                          \r\n}                                                                                              \r\n                                                                                               \r\nToken Lexer_NextToken(Lexer *lexer) {                                                          \r\n    lexer->error = LEX_EUNKNOWN;                                                               \r\n    return TOK_ERR;                                                                            \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~          "]
[65.261971, "o", "                                                                                    \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \u001b[5;5H\u001b[?25h"]
[66.123569, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[5;1H"]
[66.205219, "o", "\u001b[?25l"]
[66.205806, "o", "\u001b[?25h\u001b[4;5H"]
[66.3576, "o", "\u001b[3;5H"]
[66.757943, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[4;1H                                                                                               \r\n    switch (c) {                                                                               \r\n                                                                                               \r\n    }                                                                                          \r\n}                                                                                              \r\n                                                                                               \r\nToken Lexer_NextToken(Lexer *lexer) {                                                          \r\n    lexer->error = LEX_EUNKNOWN;                                                               \r\n    return TOK_ERR;                                                                            \r\n}                                                                                              \r\n\u001b[94m~          "]
[66.758173, "o", "                                                                                    \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \u001b[4;1H\u001b[?25h"]
[67.150062, "o", "\u001b[?25l\u001b[m    \u001b[?25h"]
[67.501317, "o", "\u001b[?25lc\u001b[?25h"]
[67.59767, "o", "\u001b[?25lh\u001b[?25h"]
[67.685668, "o", "\u001b[?25la\u001b[?25h"]
[67.765801, "o", "\u001b[?25lr\u001b[?25h"]
[67.909797, "o", "\u001b[?25l \u001b[?25h"]
[68.165767, "o", "\u001b[?25lc\u001b[?25h"]
[68.357862, "o", "\u001b[?25l \u001b[?25h"]
[68.501715, "o", "\u001b[?25l=\u001b[?25h"]
[68.661431, "o", "\u001b[?25l \u001b[?25h"]
[70.133789, "o", "\u001b[?25lL\u001b[?25h"]
[70.349748, "o", "\u001b[?25le\u001b[?25h"]
[70.565788, "o", "\u001b[?25lx\u001b[?25h"]
[70.781817, "o", "\u001b[?25le\u001b[?25h"]
[70.869892, "o", "\u001b[?25lr\u001b[?25h"]
[71.197685, "o", "\u001b[?25l_\u001b[?25h"]
[71.357783, "o", "\u001b[?25lG\u001b[?25h"]
[71.629779, "o", "\u001b[?25le\u001b[?25h"]
[71.725889, "o", "\u001b[?25lt\u001b[?25h"]
[72.149862, "o", "\u001b[?25lC\u001b[?25h"]
[72.381853, "o", "\u001b[?25lh\u001b[?25h"]
[72.437964, "o", "\u001b[?25la\u001b[?25h"]
[72.549641, "o", "\u001b[?25lr\u001b[?25h"]
[73.630634, "o", "\u001b[?25l(\u001b[?25h"]
[73.718684, "o", "\u001b[?25l\b\u001b[46m()\u001b[?25h"]
[74.01993, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[4;28H"]
[74.085532, "o", "\u001b[?25l"]
[74.086696, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[4;28H\u001b[?25h"]
[74.230526, "o", "\u001b[?25l\u001b[ml\u001b[46m)\b\u001b[?25h"]
[74.27837, "o", "\u001b[?25l\u001b[me\u001b[46m)\b\u001b[?25h"]
[74.478891, "o", "\u001b[?25l\u001b[mx\u001b[46m)\b\u001b[?25h"]
[74.662563, "o", "\u001b[?25l\u001b[me\u001b[46m)\b\u001b[?25h"]
[74.774655, "o", "\u001b[?25l\u001b[mr\u001b[46m)\b\u001b[?25h"]
[75.019542, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[4;32H"]
[75.117356, "o", "\u001b[?25l"]
[75.118734, "o", "\b\b\b\b\b(lexer)\b\b\u001b[?25h\u001b[?25l\b\b\b\b\b\u001b[46m(\u001b[mlexer\u001b[46m)\b\u001b[?25h"]
[75.341905, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[4;34H\u001b[?25h"]
[75.445859, "o", "\u001b[?25l\u001b[m\u001b[4;27H(lexer);\u001b[?25h"]
[75.613832, "o", "\u001b[?25l \u001b[?25h"]
[75.813943, "o", "\u001b[?25l/\u001b[?25h"]
[75.958028, "o", "\u001b[?25l/\u001b[?25h"]
[76.069987, "o", "\u001b[?25l \u001b[?25h"]
[76.270042, "o", "\u001b[?25lT\u001b[?25h"]
[76.333932, "o", "\u001b[?25lO\u001b[?25h"]
[76.461858, "o", "\u001b[?25lD\u001b[?25h"]
[76.485494, "o", "\u001b[?25lO\u001b[?25h"]
[76.861887, "o", "\u001b[?25l:\u001b[?25h"]
[77.02208, "o", "\u001b[?25l \u001b[?25h"]
[77.46987, "o", "\u001b[?25li\u001b[?25h"]
[77.573936, "o", "\u001b[?25lm\u001b[?25h"]
[77.733993, "o", "\u001b[?25lp\u001b[?25h"]
[77.95004, "o", "\u001b[?25ll\u001b[?25h"]
[78.038092, "o", "\u001b[?25l \u001b[?25h"]
[78.389882, "o", "\u001b[?25lG\u001b[?25h"]
[78.557972, "o", "\u001b[?25lE\u001b[?25h"]
[78.645798, "o", "\u001b[?25lT\u001b[?25h"]
[79.246222, "o", "\u001b[?25l\b \b\u001b[?25h"]
[79.390306, "o", "\u001b[?25l\b \b\u001b[?25h"]
[79.477998, "o", "\u001b[?25le\u001b[?25h"]
[79.573728, "o", "\u001b[?25lt\u001b[?25h"]
[79.782036, "o", "\u001b[?25lC\u001b[?25h"]
[79.941977, "o", "\u001b[?25lh\u001b[?25h"]
[79.993256, "o", "\u001b[?25la\u001b[?25h"]
[80.070192, "o", "\u001b[?25lr\u001b[?25h"]
[80.295812, "o", "\u001b[48;1H\u001b[K\u001b[4;56H"]
[80.37366, "o", "\u001b[?25l"]
[80.374797, "o", "\u001b[?25h\u001b[?25l\u001b[5;16H\u001b[46m{\u001b[7;5H}\u001b[5;16H\u001b[?25h"]
[80.813532, "o", "\u001b[?25l\u001b[m{\u001b[7;5H}\u001b[6;1H\u001b[?25h"]
[81.253712, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[6;1H\u001b[?25h"]
[81.326025, "o", "\u001b[?25l\u001b[m    \u001b[?25h"]
[81.758425, "o", "\u001b[?25l    \u001b[?25h"]
[83.342252, "o", "\u001b[?25lc\u001b[?25h"]
[83.542129, "o", "\u001b[?25la\u001b[?25h"]
[83.60613, "o", "\u001b[?25ls\u001b[?25h"]
[83.670072, "o", "\u001b[?25le\u001b[?25h"]
[83.846009, "o", "\u001b[?25l \u001b[?25h"]
[84.005949, "o", "\u001b[?25l'\u001b[?25h"]
[84.822162, "o", "\u001b[?25l;\u001b[?25h"]
[85.710029, "o", "\u001b[?25l'\u001b[?25h"]
[86.878208, "o", "\u001b[?25l:\u001b[?25h"]
[89.046349, "o", "\u001b[?25l\r\n                                                                                               \r\n    }                                                                                          \r\n}                                                                                              \r\n                                                                                               \r\nToken Lexer_NextToken(Lexer *lexer) {                                                          \r\n    lexer->error = LEX_EUNKNOWN;                                                               \r\n    return TOK_ERR;                                                                            \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                        "]
[89.046588, "o", "                                                      \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \u001b[7;9H\u001b[?25h"]
[89.614458, "o", "\u001b[?25l\u001b[m    \u001b[?25h"]
[91.990479, "o", "\u001b[?25lr\u001b[?25h"]
[92.078257, "o", "\u001b[?25le\u001b[?25h"]
[92.54219, "o", "\u001b[?25lt\u001b[?25h"]
[92.982372, "o", "\u001b[?25lu\u001b[?25h"]
[93.198359, "o", "\u001b[?25lr\u001b[?25h"]
[93.350267, "o", "\u001b[?25ln\u001b[?25h"]
[93.63035, "o", "\u001b[?25l \u001b[?25h"]
[94.174402, "o", "\u001b[?25lL\u001b[?25h"]
[94.622597, "o", "\u001b[?25l\b \b\u001b[?25h"]
[94.774356, "o", "\u001b[?25lT\u001b[?25h"]
[94.918302, "o", "\u001b[?25lO\u001b[?25h"]
[95.086201, "o", "\u001b[?25lK\u001b[?25h"]
[95.222343, "o", "\u001b[?25lE\u001b[?25h"]
[95.302331, "o", "\u001b[?25lN\u001b[?25h"]
[96.118558, "o", "\u001b[?25l_\u001b[?25h"]
[96.662526, "o", "\u001b[?25lS\u001b[?25h"]
[97.030262, "o", "\u001b[?25lE\u001b[?25h"]
[97.646557, "o", "\u001b[?25lM\u001b[?25h"]
[97.694467, "o", "\u001b[?25lI\u001b[?25h"]
[98.166462, "o", "\u001b[?25lC\u001b[?25h"]
[98.221917, "o", "\u001b[?25lO\u001b[?25h"]
[98.404997, "o", "\u001b[?25lL\u001b[?25h"]
[98.590413, "o", "\u001b[?25lO\u001b[?25h"]
[98.702362, "o", "\u001b[?25lN\u001b[?25h"]
[99.054437, "o", "\u001b[?25l;\u001b[?25h"]
[99.410735, "o", "\u001b[48;1H\u001b[K\u001b[7;35H"]
[99.526051, "o", "\u001b[?25l"]
[99.526638, "o", "\u001b[?25h\u001b[6;17H"]
[103.014734, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[7;1H                                                                                               \r\n            return TOKEN_SEMICOLON;                                                            \r\n    }                                                                                          \r\n}                                                                                              \r\n                                                                                               \r\nToken Lexer_NextToken(Lexer *lexer) {                                                          \r\n    lexer->error = LEX_EUNKNOWN;                                                               \r\n    return TOK_ERR;                                                                            \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~          "]
[103.014961, "o", "                                                                                    \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \u001b[7;9H\u001b[?25h"]
[103.766682, "o", "\u001b[?25l\u001b[m    \u001b[?25h"]
[104.190486, "o", "\u001b[?25ll\u001b[?25h"]
[104.286491, "o", "\u001b[?25le\u001b[?25h"]
[104.510635, "o", "\u001b[?25lx\u001b[?25h"]
[104.718276, "o", "\u001b[?25le\u001b[?25h"]
[104.806577, "o", "\u001b[?25lr\u001b[?25h"]
[104.966433, "o", "\u001b[?25l-\u001b[?25h"]
[105.382643, "o", "\u001b[?25l>\u001b[?25h"]
[106.510494, "o", "\u001b[?25lc\u001b[?25h"]
[106.535692, "o", "\u001b[?25lo\u001b[?25h"]
[106.750603, "o", "\u001b[?25ll\u001b[?25h"]
[106.870632, "o", "\u001b[?25lu\u001b[?25h"]
[107.166644, "o", "\u001b[?25lm\u001b[?25h"]
[107.358606, "o", "\u001b[?25ln\u001b[?25h"]
[107.92624, "o", "\u001b[?25l+\u001b[?25h"]
[108.094392, "o", "\u001b[?25l+\u001b[?25h"]
[108.486604, "o", "\u001b[?25l;\u001b[?25h"]
[108.895089, "o", "\u001b[?25l\r\n                                                                                               \r\n            return TOKEN_SEMICOLON;                                                            \r\n    }                                                                                          \r\n}                                                                                              \r\n                                                                                               \r\nToken Lexer_NextToken(Lexer *lexer) {                                                          \r\n    lexer->error = LEX_EUNKNOWN;                                                               \r\n    return TOK_ERR;                                                                            \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                        "]
[108.895316, "o", "                                                      \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \u001b[8;13H\u001b[?25h"]
[109.238606, "o", "\u001b[?25l\u001b[ml\u001b[?25h"]
[109.302623, "o", "\u001b[?25le\u001b[?25h"]
[109.526654, "o", "\u001b[?25lx\u001b[?25h"]
[109.750692, "o", "\u001b[?25le\u001b[?25h"]
[109.862732, "o", "\u001b[?25lr\u001b[?25h"]
[110.022243, "o", "\u001b[?25l-\u001b[?25h"]
[110.502479, "o", "\u001b[?25l>\u001b[?25h"]
[111.702686, "o", "\u001b[?25lc\u001b[?25h"]
[111.758576, "o", "\u001b[?25lu\u001b[?25h"]
[111.910661, "o", "\u001b[?25lr\u001b[?25h"]
[112.078698, "o", "\u001b[?25lr\u001b[?25h"]
[112.142667, "o", "\u001b[?25le\u001b[?25h"]
[112.254639, "o", "\u001b[?25ln\u001b[?25h"]
[112.366712, "o", "\u001b[?25lt\u001b[?25h"]
[112.958873, "o", "\u001b[?25l+\u001b[?25h"]
[113.11078, "o", "\u001b[?25l+\u001b[?25h"]
[113.526809, "o", "\u001b[?25l;\u001b[?25h"]
[114.032439, "o", "\u001b[48;1H\u001b[K\u001b[8;29H"]
[114.318418, "o", "\u001b[?25l"]
[114.318994, "o", "\u001b[?25h\u001b[9;29H"]
[115.014893, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[10;1H                                                                                               \r\n    }                                                                                          \r\n}                                                                                              \r\n                                                                                               \r\nToken Lexer_NextToken(Lexer *lexer) {                                                          \r\n    lexer->error = LEX_EUNKNOWN;                                                               \r\n    return TOK_ERR;                                                                            \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~         "]
[115.015124, "o", "                                                                                     \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \u001b[10;13H\u001b[?25h"]
[115.470766, "o", "\u001b[?25l\b\u001b[?25h"]
[115.67853, "o", "\u001b[?25l\u001b[md\u001b[?25h"]
[116.215044, "o", "\u001b[?25l\b \b\u001b[?25h"]
[116.390982, "o", "\u001b[?25l\b\u001b[?25h"]
[116.72705, "o", "\u001b[?25l\b\u001b[?25h"]
[116.927028, "o", "\u001b[?25l\b\u001b[?25h"]
[117.166746, "o", "\u001b[?25ld\u001b[?25h"]
[117.366878, "o", "\u001b[?25le\u001b[?25h"]
[117.519071, "o", "\u001b[?25lf\u001b[?25h"]
[117.590741, "o", "\u001b[?25la\u001b[?25h"]
[117.686812, "o", "\u001b[?25lu\u001b[?25h"]
[117.766945, "o", "\u001b[?25ll\u001b[?25h"]
[117.85468, "o", "\u001b[?25lt\u001b[?25h"]
[118.070827, "o", "\u001b[?25l:\u001b[?25h"]
[119.023132, "o", "\u001b[?25l\r\n                                                                                               \r\n    }                                                                                          \r\n}                                                                                              \r\n                                                                                               \r\nToken Lexer_NextToken(Lexer *lexer) {                                                          \r\n    lexer->error = LEX_EUNKNOWN;                                                               \r\n    return TOK_ERR;                                                                            \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                        "]
[119.023195, "o", "                                                      \r\n~                                                                                              \r\n~                                                                                              \u001b[11;9H\u001b[?25h"]
[120.719372, "o", "\u001b[?25l\u001b[m    \u001b[?25h"]
[120.950597, "o", "\u001b[?25ll\u001b[?25h"]
[121.086816, "o", "\u001b[?25le\u001b[?25h"]
[121.294967, "o", "\u001b[?25lx\u001b[?25h"]
[121.518967, "o", "\u001b[?25le\u001b[?25h"]
[121.630843, "o", "\u001b[?25lr\u001b[?25h"]
[121.742622, "o", "\u001b[?25l-\u001b[?25h"]
[122.375012, "o", "\u001b[?25l>\u001b[?25h"]
[122.598912, "o", "\u001b[?25le\u001b[?25h"]
[122.806845, "o", "\u001b[?25lr\u001b[?25h"]
[123.00691, "o", "\u001b[?25lr\u001b[?25h"]
[123.518889, "o", "\u001b[?25lo\u001b[?25h"]
[123.622915, "o", "\u001b[?25lr\u001b[?25h"]
[124.094985, "o", "\u001b[?25l=\u001b[?25h"]
[124.559201, "o", "\u001b[?25l\b \b\u001b[?25h"]
[124.647411, "o", "\u001b[?25l \u001b[?25h"]
[124.902933, "o", "\u001b[?25l=\u001b[?25h"]
[125.143382, "o", "\u001b[?25l \u001b[?25h"]
[126.430954, "o", "\u001b[?25lL\u001b[?25h"]
[126.503018, "o", "\u001b[?25lE\u001b[?25h"]
[126.9111, "o", "\u001b[?25lX\u001b[?25h"]
[127.079037, "o", "\u001b[?25l_\u001b[?25h"]
[127.438652, "o", "\u001b[?25lE\u001b[?25h"]
[127.959216, "o", "\u001b[?25lU\u001b[?25h"]
[128.199301, "o", "\u001b[?25lN\u001b[?25h"]
[128.382315, "o", "\u001b[?25lK\u001b[?25h"]
[128.567162, "o", "\u001b[?25lN\u001b[?25h"]
[128.74309, "o", "\u001b[?25lO\u001b[?25h"]
[128.863054, "o", "\u001b[?25lW\u001b[?25h"]
[128.942536, "o", "\u001b[?25lN\u001b[?25h"]
[129.231083, "o", "\u001b[?25l;\u001b[?25h"]
[130.04758, "o", "\u001b[?25l\r\n                                                                                               \r\n    }                                                                                          \r\n}                                                                                              \r\n                                                                                               \r\nToken Lexer_NextToken(Lexer *lexer) {                                                          \r\n    lexer->error = LEX_EUNKNOWN;                                                               \r\n    return TOK_ERR;                                                                            \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                        "]
[130.047811, "o", "                                                      \r\n~                                                                                              \u001b[12;13H\u001b[?25h"]
[130.407036, "o", "\u001b[?25l\u001b[mr\u001b[?25h"]
[130.503098, "o", "\u001b[?25le\u001b[?25h"]
[130.639029, "o", "\u001b[?25lt\u001b[?25h"]
[130.727157, "o", "\u001b[?25lu\u001b[?25h"]
[130.815183, "o", "\u001b[?25lr\u001b[?25h"]
[130.911101, "o", "\u001b[?25ln\u001b[?25h"]
[131.007073, "o", "\u001b[?25l \u001b[?25h"]
[131.20697, "o", "\u001b[?25lT\u001b[?25h"]
[131.295101, "o", "\u001b[?25lO\u001b[?25h"]
[131.479069, "o", "\u001b[?25lK\u001b[?25h"]
[131.599091, "o", "\u001b[?25lE\u001b[?25h"]
[131.678889, "o", "\u001b[?25lN\u001b[?25h"]
[131.927112, "o", "\u001b[?25l_\u001b[?25h"]
[132.102796, "o", "\u001b[?25lE\u001b[?25h"]
[132.558794, "o", "\u001b[?25lR\u001b[?25h"]
[132.895104, "o", "\u001b[?25lR\u001b[?25h"]
[133.383109, "o", "\u001b[?25l;\u001b[?25h"]
[133.786071, "o", "\u001b[48;1H\u001b[K\u001b[12;29H"]
[134.158675, "o", "\u001b[?25l"]
[134.159105, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[134.390643, "o", "w"]
[134.49499, "o", "\r"]
[134.495753, "o", "\u001b[?25l\"src/lexer.c\""]
[134.515343, "o", " 19L, 432B written"]
[134.515836, "o", "\u001b[24;13H\u001b[1m\u001b[7m    \u001b[12;29H\u001b[?25h"]
[135.58313, "o", "\u001b[1;1H"]
[135.751049, "o", "\r\n"]
[136.950987, "o", "\u001b[1;1H"]
[137.335408, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[48;13H\u001b[K\u001b[2;1H                                                                                               \r\n                                                                                               \r\nToken Lexer_NextOp(Lexer *lexer) {                                                             \r\n    char c = Lexer_GetChar(lexer); // TODO: impl GetChar                                       \r\n    switch (c) {                                                                               \r\n        case ';':                                                                              \r\n            lexer->column++;                                                                   \r\n            lexer->current++;                                                                  \r\n            return TOKEN_SEMICOLON;                                                            \r\n        default:                                                                               \r\n  "]
[137.335479, "o", "          lexer->error = LEX_EUNKNOWN;                                                       \r\n            return TOKEN_ERR;                                                                  \r\n    }                                                                                          \r\n}                                                                                              \r\n                                                                                               \r\nToken Lexer_NextToken(Lexer *lexer) {                                                          \r\n    lexer->error = LEX_EUNKNOWN;                                                               \r\n    return TOK_ERR;                                                                            \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                                 "]
[137.33575, "o", "                                             \r\n~                                                                                              \u001b[m\u001b[24;13H\u001b[1m\u001b[7m[+]\u001b[2;1H\u001b[?25h"]
[137.759559, "o", "\u001b[?25l\u001b[m\r\n                                                                                               \r\n                                                                                               \r\nToken Lexer_NextOp(Lexer *lexer) {                                                             \r\n    char c = Lexer_GetChar(lexer); // TODO: impl GetChar                                       \r\n    switch (c) {                                                                               \r\n        case ';':                                                                              \r\n            lexer->column++;                                                                   \r\n            lexer->current++;                                                                  \r\n            return TOKEN_SEMICOLON;                                                            \r\n        default:                                                                               \r\n            lexer->error = LEX_EUNKNOWN;   "]
[137.759627, "o", "                                                    \r\n            return TOKEN_ERR;                                                                  \r\n    }                                                                                          \r\n}                                                                                              \r\n                                                                                               \r\nToken Lexer_NextToken(Lexer *lexer) {                                                          \r\n    lexer->error = LEX_EUNKNOWN;                                                               \r\n    return TOK_ERR;                                                                            \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                                                                          "]
[137.760016, "o", "    \u001b[3;1H\u001b[?25h"]
[139.535226, "o", "\u001b[?25l\u001b[mc\u001b[?25h"]
[139.671185, "o", "\u001b[?25lh\u001b[?25h"]
[139.775023, "o", "\u001b[?25la\u001b[?25h"]
[139.911268, "o", "\u001b[?25lr\u001b[?25h"]
[140.311237, "o", "\u001b[?25l \u001b[?25h"]
[140.599321, "o", "\u001b[?25lL\u001b[?25h"]
[140.727345, "o", "\u001b[?25le\u001b[?25h"]
[140.903425, "o", "\u001b[?25lx\u001b[?25h"]
[141.151243, "o", "\u001b[?25le\u001b[?25h"]
[141.271399, "o", "\u001b[?25lr\u001b[?25h"]
[141.663387, "o", "\u001b[?25l_\u001b[?25h"]
[141.991282, "o", "\u001b[?25lG\u001b[?25h"]
[142.311256, "o", "\u001b[?25le\u001b[?25h"]
[142.423306, "o", "\u001b[?25lt\u001b[?25h"]
[142.663385, "o", "\u001b[?25lC\u001b[?25h"]
[142.887454, "o", "\u001b[?25lh\u001b[?25h"]
[142.943328, "o", "\u001b[?25la\u001b[?25h"]
[143.023103, "o", "\u001b[?25lr\u001b[?25h"]
[143.368638, "o", "\u001b[?25l(\u001b[?25h"]
[143.695312, "o", "\u001b[?25lL\u001b[?25h"]
[143.879409, "o", "\u001b[?25le\u001b[?25h"]
[144.079352, "o", "\u001b[?25lx\u001b[?25h"]
[144.271149, "o", "\u001b[?25le\u001b[?25h"]
[144.36751, "o", "\u001b[?25lr\u001b[?25h"]
[144.615485, "o", "\u001b[?25l*\u001b[?25h"]
[144.783469, "o", "\u001b[?25l \u001b[?25h"]
[145.41143, "o", "\u001b[?25l\b\u001b[?25h"]
[145.535675, "o", "\u001b[?25l\b \b\u001b[?25h"]
[145.623447, "o", "\u001b[?25l \u001b[?25h"]
[145.919503, "o", "\u001b[?25l*\u001b[?25h"]
[146.687471, "o", "\u001b[?25ll\u001b[?25h"]
[146.775518, "o", "\u001b[?25le\u001b[?25h"]
[146.967532, "o", "\u001b[?25lx\u001b[?25h"]
[147.175461, "o", "\u001b[?25le\u001b[?25h"]
[147.263402, "o", "\u001b[?25lr\u001b[?25h"]
[147.512183, "o", "\u001b[?25l\u001b[3;19H\u001b[46m(\u001b[12C)\u001b[?25h"]
[147.719568, "o", "\u001b[?25l\u001b[m\u001b[3;19H(\u001b[12C) \u001b[?25h"]
[147.888698, "o", "\u001b[?25l{\u001b[?25h"]
[148.160068, "o", "\u001b[?25l\b\u001b[46m{}\u001b[?25h"]
[148.501575, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[3;35H"]
[148.582973, "o", "\u001b[?25l"]
[148.584689, "o", "\u001b[?25h\u001b[?25l\b\u001b[?25h"]
[148.767385, "o", "\u001b[?25l{}\b\b\b\u001b[?25h"]
[148.967879, "o", "\u001b[?25l\u001b[3;19H\u001b[46m(\u001b[12C)\b\u001b[?25h"]
[149.183132, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[3;32H\u001b[?25h"]
[149.400258, "o", "\u001b[?25l\u001b[m,\u001b[46m)\u001b[m {}\b\b\b\b\u001b[?25h"]
[149.472345, "o", "\u001b[?25l \u001b[46m)\u001b[m {}\b\b\b\b\u001b[?25h"]
[149.664041, "o", "\u001b[?25lo\u001b[46m)\u001b[m {}\b\b\b\b\u001b[?25h"]
[149.744001, "o", "\u001b[?25lf\u001b[46m)\u001b[m {}\b\b\b\b\u001b[?25h"]
[149.896294, "o", "\u001b[?25lf\u001b[46m)\u001b[m {}\b\b\b\b\u001b[?25h"]
[150.143978, "o", "\u001b[?25ls\u001b[46m)\u001b[m {}\b\b\b\b\u001b[?25h"]
[150.192062, "o", "\u001b[?25le\u001b[46m)\u001b[m {}\b\b\b\b\u001b[?25h"]
[150.296148, "o", "\u001b[?25lt\u001b[46m)\u001b[m {}\b\b\b\b\u001b[?25h"]
[150.661577, "o", "\u001b[48;1H\u001b[K\u001b[3;39H"]
[150.886949, "o", "\u001b[?25l"]
[150.887603, "o", "\u001b[3;19H(\u001b[20C)\b\b\u001b[?25h\b\b\b\b\b"]
[151.039088, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[3;34H\u001b[?25h"]
[151.207247, "o", "\u001b[?25l\u001b[msoffset) {}\u001b[3;35H\u001b[?25h"]
[151.335562, "o", "\u001b[?25lioffset) {}\u001b[3;36H\u001b[?25h"]
[151.42346, "o", "\u001b[?25lzoffset) {}\u001b[3;37H\u001b[?25h"]
[151.591339, "o", "\u001b[?25leoffset) {}\u001b[3;38H\u001b[?25h"]
[151.831529, "o", "\u001b[?25l_offset) {}\u001b[3;39H\u001b[?25h"]
[152.04756, "o", "\u001b[?25ltoffset) {}\u001b[3;40H\u001b[?25h"]
[152.231348, "o", "\u001b[?25l offset) {}\u001b[3;41H\u001b[?25h"]
[152.533583, "o", "\u001b[48;1H\u001b[K\u001b[3;40H"]
[152.62321, "o", "\u001b[?25l"]
[152.623798, "o", "\u001b[?25h\r\n"]
[152.808048, "o", "\u001b[?25l\u001b[5;34H\u001b[46m{\u001b[16;1H}\u001b[5;34H\u001b[?25h"]
[152.991461, "o", "\u001b[?25l\u001b[m{\u001b[16;1H}\u001b[6;40H\u001b[?25h"]
[153.279436, "o", "\b"]
[153.46338, "o", "\b\b\b"]
[153.591431, "o", "\b"]
[153.831476, "o", "\b"]
[154.063793, "o", "\u001b[?25l\u001b[6;27H\u001b[46m(\u001b[mlexer\u001b[46m)\b\u001b[?25h"]
[154.295144, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[6;33H\u001b[?25h"]
[154.512298, "o", "\u001b[?25l\u001b[m,\u001b[46m)\u001b[m; // TODO: impl GetChar\u001b[6;34H\u001b[?25h"]
[154.680292, "o", "\u001b[?25l \u001b[46m)\u001b[m; // TODO: impl GetChar\u001b[6;35H\u001b[?25h"]
[154.728138, "o", "\u001b[?25l0\u001b[46m)\u001b[m; // TODO: impl GetChar\u001b[6;36H\u001b[?25h"]
[154.997805, "o", "\u001b[48;1H\u001b[K\u001b[6;35H"]
[155.087207, "o", "\u001b[?25l"]
[155.088245, "o", "\u001b[6;27H(\u001b[8C)\b\b\u001b[?25h\u001b[?25l\u001b[6;27H\u001b[46m(\u001b[8C)\b\u001b[?25h"]
[155.25552, "o", "\u001b[?25l\u001b[m\u001b[6;27H(\u001b[8C)\u001b[?25h"]
[155.439521, "o", ";"]
[156.103254, "o", "\u001b[?25l                      \u001b[6;37H\u001b[?25h"]
[156.142887, "o", "\u001b[?25l\u001b[5;34H\u001b[46m{\u001b[16;1H}\u001b[5;34H\u001b[?25h"]
[156.495513, "o", "\u001b[?25l\u001b[m{\u001b[16;1H}\u001b[4;1H\u001b[?25h"]
[156.679412, "o", "\u001b[3;37H"]
[157.063889, "o", "\u001b[?25l\u001b[12C\u001b[46m{}\b\u001b[?25h"]
[157.295889, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[3;50H\u001b[?25h"]
[157.528741, "o", "\u001b[?25l\u001b[m\r\n                                                                                               \r\n                                                                                               \r\nToken Lexer_NextOp(Lexer *lexer) {                                                             \r\n    char c = Lexer_GetChar(lexer, 0);                                                          \r\n    switch (c) {                                                                               \r\n        case ';':                                                                              \r\n            lexer->column++;                                                                   \r\n            lexer->current++;                                                                  \r\n            return TOKEN_SEMICOLON;                                                            \r\n        default:                                                                               \r\n            lexer->error = LEX_EUNKNOWN;   "]
[157.52881, "o", "                                                    \r\n            return TOKEN_ERR;                                                                  \r\n    }                                                                                          \r\n}                                                                                              \r\n                                                                                               \r\nToken Lexer_NextToken(Lexer *lexer) {                                                          \r\n    lexer->error = LEX_EUNKNOWN;                                                               \r\n    return TOK_ERR;                                                                            \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \u001b[m\u001b[3;50H  \r\n"]
[157.528913, "o", "\u001b[46m}\b\u001b[?25h"]
[157.797862, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[4;1H"]
[157.871482, "o", "\u001b[?25l"]
[157.872364, "o", "\u001b[?25h\u001b[?25l\u001b[3;49H{\r\n}\u001b[3;1H\u001b[?25h"]
[158.119931, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[4;1H                                                                                               \r\n}                                                                                              \r\n                                                                                               \r\nToken Lexer_NextOp(Lexer *lexer) {                                                             \r\n    char c = Lexer_GetChar(lexer, 0);                                                          \r\n    switch (c) {                                                                               \r\n        case ';':                                                                              \r\n            lexer->column++;                                                                   \r\n            lexer->current++;                                                                  \r\n            return TOKEN_SEMICOLON;                                                            \r\n        default:"]
[158.120162, "o", "                                                                               \r\n            lexer->error = LEX_EUNKNOWN;                                                       \r\n            return TOKEN_ERR;                                                                  \r\n    }                                                                                          \r\n}                                                                                              \r\n                                                                                               \r\nToken Lexer_NextToken(Lexer *lexer) {                                                          \r\n    lexer->error = LEX_EUNKNOWN;                                                               \r\n    return TOK_ERR;                                                                            \r\n}                                                                                              \u001b[4;1H\u001b[?25h"]
[158.679785, "o", "\u001b[?25l    \u001b[?25h"]
[158.959658, "o", "\u001b[?25lr\u001b[?25h"]
[159.071727, "o", "\u001b[?25le\u001b[?25h"]
[159.239642, "o", "\u001b[?25lt\u001b[?25h"]
[159.286971, "o", "\u001b[?25lu\u001b[?25h"]
[159.431289, "o", "\u001b[?25lr\u001b[?25h"]
[159.495631, "o", "\u001b[?25ln\u001b[?25h"]
[159.671732, "o", "\u001b[?25l \u001b[?25h"]
[159.759689, "o", "\u001b[?25ll\u001b[?25h"]
[159.839768, "o", "\u001b[?25le\u001b[?25h"]
[160.03976, "o", "\u001b[?25lx\u001b[?25h"]
[160.239821, "o", "\u001b[?25le\u001b[?25h"]
[160.327643, "o", "\u001b[?25lr\u001b[?25h"]
[160.463454, "o", "\u001b[?25l-\u001b[?25h"]
[160.911509, "o", "\u001b[?25l>\u001b[?25h"]
[161.143752, "o", "\u001b[?25lc\u001b[?25h"]
[161.247704, "o", "\u001b[?25lu\u001b[?25h"]
[161.375748, "o", "\u001b[?25lr\u001b[?25h"]
[161.55184, "o", "\u001b[?25lr\u001b[?25h"]
[161.631762, "o", "\u001b[?25le\u001b[?25h"]
[161.727335, "o", "\u001b[?25ln\u001b[?25h"]
[161.863744, "o", "\u001b[?25lt\u001b[?25h"]
[163.735814, "o", "\u001b[?25l+\u001b[?25h"]
[164.039801, "o", "\u001b[?25lo\u001b[?25h"]
[164.104093, "o", "\u001b[?25lf\u001b[?25h"]
[164.255771, "o", "\u001b[?25lf\u001b[?25h"]
[164.487964, "o", "\u001b[?25ls\u001b[?25h"]
[164.551922, "o", "\u001b[?25le\u001b[?25h"]
[164.647795, "o", "\u001b[?25lt\u001b[?25h"]
[164.944695, "o", "\u001b[?25l)\u001b[?25h"]
[165.209203, "o", "\u001b[48;1H\u001b[K\u001b[4;33H"]
[165.415285, "o", "\u001b[?25l"]
[165.416644, "o", "\u001b[?25h\r"]
[165.519045, "o", "    "]
[165.687649, "o", "\u001b[7C"]
[166.031361, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[4;12H\u001b[?25h"]
[166.367926, "o", "\u001b[?25l\u001b[m*lexer->current+offset)\u001b[4;13H\u001b[?25h"]
[167.464646, "o", "\u001b[?25l\u001b[46m(\u001b[mlexer->current+offset\u001b[46m)\u001b[4;14H\u001b[?25h"]
[167.988237, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[4;13H"]
[168.415325, "o", "\u001b[?25l"]
[168.417014, "o", "\u001b[?25h\u001b[?25l\u001b[22C\u001b[?25h"]
[168.744113, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[4;36H\u001b[?25h"]
[168.888057, "o", "\u001b[?25l\u001b[m\u001b[4;13H(\u001b[21C);\u001b[?25h"]
[169.642582, "o", "\u001b[48;1H\u001b[K\u001b[4;36H"]
[169.967537, "o", "\u001b[?25l"]
[169.967962, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[170.191642, "o", "w"]
[170.247634, "o", "\r"]
[170.247953, "o", "\u001b[?25l\"src/lexer.c\""]
[170.266649, "o", " 23L, 503B written"]
[170.267167, "o", "\u001b[24;13H\u001b[1m\u001b[7m    "]
[170.267268, "o", "\u001b[4;36H\u001b[?25h"]
[173.072214, "o", "\u001b[?25l\u001b[m\u001b[3;49H\u001b[46m{\r\n\r\n}\b\u001b[?25h"]
[173.573221, "o", "\u001b[?25l\u001b[m\u001b[3;49H{\r\n\r\n}\r\n\u001b[?25h"]
[173.658083, "o", "\u001b[?25l\u001b[7;34H\u001b[46m{\u001b[18;1H}\u001b[7;34H\u001b[?25h"]
[173.742085, "o", "\u001b[?25l\u001b[m{\u001b[8;27H\u001b[46m(\u001b[8C)\u001b[m\u001b[18;1H}\u001b[8;36H\u001b[?25h"]
[173.826318, "o", "\u001b[?25l\u001b[8;27H(\u001b[8C)\u001b[9;16H\u001b[46m{\u001b[17;5H}\u001b[9;16H\u001b[?25h"]
[173.909219, "o", "\u001b[?25l\u001b[m{\u001b[17;5H}\u001b[10;17H\u001b[?25h"]
[173.993331, "o", "\u001b[11;28H"]
[174.0784, "o", "\u001b[12;29H"]
[174.161223, "o", "\u001b[13;35H"]
[174.245306, "o", "\u001b[14;16H"]
[174.329354, "o", "\u001b[15;36H"]
[174.413608, "o", "\u001b[16;29H"]
[174.49746, "o", "\u001b[?25l\u001b[9;16H\u001b[46m{\u001b[17;5H}\b\u001b[?25h"]
[174.580393, "o", "\u001b[?25l\u001b[7;34H{\u001b[m\u001b[9;16H{\u001b[17;5H}\r\n\u001b[46m}\b\u001b[?25h"]
[174.663693, "o", "\u001b[?25l\u001b[m\u001b[7;34H{\u001b[18;1H}\r\n\u001b[?25h"]
[174.74696, "o", "\u001b[20;36H"]
[174.879968, "o", "\u001b[21;32H"]
[175.360208, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[48;13H\u001b[K\u001b[22;5H               \r\n    return TOK_ERR;\u001b[24;13H\u001b[1m\u001b[7m[+]\u001b[22;5H\u001b[?25h"]
[176.533299, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[22;1H"]
[176.791599, "o", "\u001b[?25l"]
[176.792192, "o", "\u001b[?25h\u001b[21;5H"]
[177.216001, "o", "\u001b[?25lreturn TOK_ERR;             \r\n}\r\n\u001b[94m~                                                                                              \u001b[21;5H\u001b[?25h"]
[177.423993, "o", "\u001b[20;5H"]
[177.815941, "o", "\r\n\u001b[m    "]
[178.25677, "o", "\u001b[?25l\u001b[20;37H\u001b[46m{\r\n}\u001b[m                  \r\n\u001b[94m~                                                                                              \u001b[21;1H\u001b[?25h"]
[178.29564, "o", "\u001b[?25l\u001b[m\u001b[20;37H{\r\n}\u001b[20;1H\u001b[?25h"]
[178.504215, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[21;1H \r\n}                                                                                              \u001b[21;1H\u001b[?25h"]
[178.864298, "o", "\u001b[?25l    \u001b[?25h"]
[180.510207, "o", "\u001b[48;1H\u001b[K\u001b[21;4H"]
[180.575711, "o", "\u001b[?25l"]
[180.576116, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H1 line less; before #26  2 seconds ago"]
[180.57657, "o", "\u001b[21;1H}\r\n\u001b[94m~                                                                                              \u001b[20;1H\u001b[?25h"]
[180.911538, "o", "\u001b[?25l\u001b[m\u001b[48;3Hmore line\u001b[11C5  3"]
[180.911987, "o", "\u001b[21;1H    return TOK_ERR;\r\n}                                                                                              \u001b[21;5H\u001b[?25h"]
[181.143873, "o", "\u001b[?25l\u001b[48;1H2\u001b[10Cs; before #24  4 seconds ago"]
[181.144296, "o", "\u001b[21;5Hlexer->error = LEX_EUNKNOWN;\r\n \r\n    return TOK_ERR;                                                                            \u001b[21;5H\u001b[?25h"]
[182.263837, "o", "\u001b[?25l\u001b[48;1H1 line less; before #23  7 seconds ago\u001b[48;39H\u001b[K"]
[182.264238, "o", "\u001b[22;5Hreturn TOK_ERR;\r\n}                  \u001b[24;13H\u001b[1m\u001b[7m    \u001b[21;1H\u001b[?25h"]
[182.87213, "o", "\u001b[20;1H"]
[183.07237, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[48;14H\u001b[K\u001b[21;5H                            \r\n    lexer->error = LEX_EUNKNOWN;\r\n    return TOK_ERR;\u001b[24;13H\u001b[1m\u001b[7m[+]\u001b[21;1H\u001b[?25h"]
[183.664496, "o", "\u001b[?25l\u001b[m    \u001b[?25h"]
[184.464235, "o", "\u001b[?25lc\u001b[?25h"]
[185.092536, "o", "\u001b[48;1H\u001b[K\u001b[21;5H"]
[185.351665, "o", "\u001b[?25l"]
[185.352047, "o", "\u001b[?25h"]
[185.504307, "o", "\u001b[?25llexer->error = LEX_EUNKNOWN;\r\n    return TOK_ERR;             \r\n}                  \u001b[21;5H\u001b[?25h"]
[185.711916, "o", "\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[185.951789, "o", "s"]
[186.015547, "o", "e"]
[186.111773, "o", "t"]
[186.183764, "o", " "]
[186.303901, "o", "r"]
[186.36777, "o", "n"]
[186.599049, "o", "u"]
[186.776158, "o", "\r"]
[186.776545, "o", "\u001b[?25l\u001b[1;1H\u001b[93m 20 \u001b[m#include \"lexer.h\"\r\n\u001b[93m 19 \r\n 18 \u001b[mchar Lexer_GetChar(Lexer *lexer, size_t offset) {\r\n\u001b[93m 17 \u001b[m    return *(lexer->current+offset);\r\n\u001b[93m 16 \u001b[m}\r\n\u001b[93m 15 \r\n 14 \u001b[mToken Lexer_NextOp(Lexer *lexer) {\r\n\u001b[93m 13 \u001b[m    char c = Lexer_GetChar(lexer, 0);\r\n\u001b[93m 12 \u001b[m    switch (c) {\r\n\u001b[93m 11 \u001b[m        case ';':\r\n\u001b[93m 10 \u001b[m\u001b[8C    lexer->column++;\r\n\u001b[93m  9 \u001b[m\u001b[8C    lexer->current++;\r\n\u001b[93m  8 \u001b[m\u001b[8C    return TOKEN_SEMICOLON;\r\n\u001b[93m  7 \u001b[m        default:\r\n\u001b[93m  6 \u001b[m\u001b[8C    lexer->error = LEX_EUNKNOWN;\r\n\u001b[93m  5 \u001b[m\u001b[8C    return TOKEN_ERR;\r\n\u001b[93m  4 \u001b[m    }\r\n\u001b[93m  3 \u001b[m}\r\n\u001b[93m  2 \r\n  1 \u001b[mToken Lexer_NextToken(Lexer *lexer) {\r\n\u001b[93m  0 \u001b[m    lexer->error = LEX_EUNKNOWN;\r\n\u001b[93m  1 \u001b[m    return TOK_ERR;\r\n\u001b[93m  2 \u001b[m}\u001b[21;9H\u001b[?25h"]
[187.720162, "o", "\u001b[?25l\u001b[1;2H\u001b[93m 7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\r\n 14\r\n 15\u001b[8;9H\u001b[?25h"]
[188.400401, "o", "\u001b[?25l\u001b[1;2H22\r\n 21\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\u001b[m\u001b[37C\u001b[46m{\u001b[m\u001b[21;2H\u001b[93m 2\r\n  1\r\n  0\u001b[m\u001b[1C\u001b[46m}\b\u001b[?25h"]
[188.504256, "o", "\u001b[?25l\u001b[m\u001b[1;3H\u001b[93m1\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\u001b[m\u001b[37C{\u001b[21;3H\u001b[93m1\r\n  0\r\n  1\u001b[m\u001b[1C}\u001b[22;5H\u001b[?25h"]
[188.672181, "o", "\u001b[?25l\u001b[1;3H\u001b[93m0\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\u001b[21;5H\u001b[?25h"]
[188.944267, "o", "\u001b[?25l\u001b[1;2H19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\u001b[20;5H\u001b[?25h"]
[189.144443, "o", "\u001b[?25l\u001b[1;2H20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[5Cchar c = Lexer_GetChar(lexer, 0);\u001b[22;3H\u001b[93m1\u001b[m\u001b[5Clexer->error = LEX_EUNKNOWN;\u001b[23;3H\u001b[93m2\u001b[m\u001b[1C    return TOK_ERR;\u001b[21;9H\u001b[?25h"]
[189.680295, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[1;3H\u001b[93m1\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[5C                            \u001b[23;3H\u001b[93m1\u001b[m\u001b[5Clexer->error = LEX_EUNKNOWN;\u001b[22;9H\u001b[?25h"]
[190.064318, "o", "\u001b[?25ls\u001b[?25h"]
[190.28035, "o", "\u001b[?25lw\u001b[?25h"]
[190.344414, "o", "\u001b[?25li\u001b[?25h"]
[190.456324, "o", "\u001b[?25lt\u001b[?25h"]
[190.648489, "o", "\u001b[?25lc\u001b[?25h"]
[190.712327, "o", "\u001b[?25lh\u001b[?25h"]
[190.896499, "o", "\u001b[?25l \u001b[?25h"]
[191.08113, "o", "\u001b[?25l(\u001b[?25h"]
[191.169034, "o", "\u001b[?25l\b\u001b[46m()\u001b[?25h"]
[191.386566, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[22;17H"]
[191.463935, "o", "\u001b[?25l"]
[191.465066, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[22;17H\u001b[?25h"]
[191.624982, "o", "\u001b[?25l\u001b[mc\u001b[46m)\b\u001b[?25h"]
[192.206407, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[22;17H"]
[192.272007, "o", "\u001b[?25l"]
[192.273036, "o", "\b(c)\b\b\u001b[?25h\u001b[?25l\b\u001b[46m(\u001b[mc\u001b[46m)\b\u001b[?25h"]
[192.496772, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[22;19H\u001b[?25h"]
[192.656456, "o", "\u001b[?25l\u001b[m\b\b\b(c) \u001b[?25h"]
[192.889135, "o", "\u001b[?25l{\u001b[?25h"]
[193.190498, "o", "\u001b[48;1H\u001b[K\u001b[22;20H"]
[193.239978, "o", "\u001b[?25l"]
[193.241273, "o", "\u001b[?25h\u001b[?25l\u001b[1;3H\u001b[93m2\r\n 21\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[16C\u001b[?25h"]
[193.488165, "o", "\r  0 "]
[193.632226, "o", "\u001b[m    "]
[193.919743, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[23;9H\u001b[?25h"]
[194.192729, "o", "\u001b[?25l\u001b[m    lexer->error = LEX_EUNKNOWN;\u001b[23;13H\u001b[?25h"]
[194.480576, "o", "\u001b[?25ldlexer->error = LEX_EUNKNOWN;\u001b[23;14H\u001b[?25h"]
[194.664472, "o", "\u001b[?25lelexer->error = LEX_EUNKNOWN;\u001b[23;15H\u001b[?25h"]
[194.816658, "o", "\u001b[?25lflexer->error = LEX_EUNKNOWN;\u001b[23;16H\u001b[?25h"]
[194.904415, "o", "\u001b[?25lalexer->error = LEX_EUNKNOWN;\u001b[23;17H\u001b[?25h"]
[194.978806, "o", "\u001b[?25lulexer->error = LEX_EUNKNOWN;\u001b[23;18H\u001b[?25h"]
[195.056343, "o", "\u001b[?25lllexer->error = LEX_EUNKNOWN;\u001b[23;19H\u001b[?25h"]
[195.200571, "o", "\u001b[?25ltlexer->error = LEX_EUNKNOWN;\u001b[23;20H\u001b[?25h"]
[195.448516, "o", "\u001b[?25l:lexer->error = LEX_EUNKNOWN;\u001b[23;21H\u001b[?25h"]
[195.777127, "o", "\u001b[?25l\u001b[1;1H\u001b[93m 21 \u001b[m                                                                                           \r\n\u001b[93m 20 \u001b[mchar Lexer_GetChar(Lexer *lexer, size_t offset) {                                          \r\n\u001b[93m 19 \u001b[m    return *(lexer->current+offset);                                                       \r\n\u001b[93m 18 \u001b[m}                                                                                          \r\n\u001b[93m 17 \u001b[m                                                                                           \r\n\u001b[93m 16 \u001b[mToken Lexer_NextOp(Lexer *lexer) {                                                         \r\n\u001b[93m 15 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m 14 \u001b[m    switch (c) {                                                                           \r\n\u001b[93m 13 \u001b[m        case ';':                                                                          \r\n\u001b[93m 12 \u001b[m            lexer->column++;                           "]
[195.777195, "o", "                                    \r\n\u001b[93m 11 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 10 \u001b[m            return TOKEN_SEMICOLON;                                                        \r\n\u001b[93m  9 \u001b[m        default:                                                                           \r\n\u001b[93m  8 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m  7 \u001b[m            return TOKEN_ERR;                                                              \r\n\u001b[93m  6 \u001b[m    }                                                                                      \r\n\u001b[93m  5 \u001b[m}                                                                                          \r\n\u001b[93m  4 \u001b[m                                                                                           \r\n\u001b[93m  3 \u001b[mToken Lexer_NextToken(Lexer *lexer) {                                                      \r\n"]
[195.777445, "o", "\u001b[93m  2 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m  1 \u001b[m    switch (c) {                                                                           \r\n\u001b[93m  0 \u001b[m        default:lexer->error = LEX_EUNKNOWN;                                               \r\n                                                                                               \u001b[1;3H\u001b[93m2\r\n 21\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[17C                            \r\n\u001b[93m  0 \u001b[m\u001b[8Clexer->error = LEX_EUNKNOWN;\u001b[23;13H\u001b[?25h"]
[196.032565, "o", "\u001b[?25l    lexer->error = LEX_EUNKNOWN;\u001b[23;17H\u001b[?25h"]
[196.310505, "o", "\u001b[48;1H\u001b[K\u001b[23;16H"]
[196.407965, "o", "\u001b[?25l"]
[196.408827, "o", "\u001b[?25h\u001b[?25l\u001b[1;1H\u001b[93m 21 \u001b[mchar Lexer_GetChar(Lexer *lexer, size_t offset) {                                          \r\n\u001b[93m 20 \u001b[m    return *(lexer->current+offset);                                                       \r\n\u001b[93m 19 \u001b[m}                                                                                          \r\n\u001b[93m 18 \u001b[m                                                                                           \r\n\u001b[93m 17 \u001b[mToken Lexer_NextOp(Lexer *lexer) {                                                         \r\n\u001b[93m 16 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m 15 \u001b[m    switch (c) {                                                                           \r\n\u001b[93m 14 \u001b[m        case ';':                                                                          \r\n\u001b[93m 13 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 12 \u001b[m            lexer->current++;                    "]
[196.409042, "o", "                                          \r\n\u001b[93m 11 \u001b[m            return TOKEN_SEMICOLON;                                                        \r\n\u001b[93m 10 \u001b[m        default:                                                                           \r\n\u001b[93m  9 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m  8 \u001b[m            return TOKEN_ERR;                                                              \r\n\u001b[93m  7 \u001b[m    }                                                                                      \r\n\u001b[93m  6 \u001b[m}                                                                                          \r\n\u001b[93m  5 \u001b[m                                                                                           \r\n\u001b[93m  4 \u001b[mToken Lexer_NextToken(Lexer *lexer) {                                                      \r\n\u001b[93m  3 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n"]
[196.409216, "o", "\u001b[93m  2 \u001b[m    switch (c) {                                                                           \r\n\u001b[93m  1 \u001b[m        default:                                                                           \r\n\u001b[93m  0 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n                                                                                               \u001b[1;3H\u001b[93m2\r\n 21\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0 \u001b[m    return TOK_ERR;\u001b[23;16H\u001b[?25h"]
[196.656254, "o", "\u001b[23;5H"]
[197.216307, "o", "    "]
[197.440098, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[23;9H\u001b[?25h"]
[197.552743, "o", "\u001b[?25l\u001b[m    return TOK_ERR;\u001b[23;13H\u001b[?25h"]
[197.884828, "o", "\u001b[48;1H\u001b[K\u001b[23;12H"]
[198.656104, "o", "\u001b[?25l"]
[198.656682, "o", "\u001b[?25h "]
[198.895583, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[23;13H\u001b[?25h"]
[199.032917, "o", "\u001b[?25l\u001b[m    return TOK_ERR;\u001b[23;17H\u001b[?25h"]
[199.306099, "o", "\u001b[48;1H\u001b[K\u001b[23;16H"]
[199.408207, "o", "\u001b[?25l"]
[199.409393, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[1;1H\u001b[93m 21 \u001b[m    return *(lexer->current+offset);                                                       \r\n\u001b[93m 20 \u001b[m}                                                                                          \r\n\u001b[93m 19 \u001b[m                                                                                           \r\n\u001b[93m 18 \u001b[mToken Lexer_NextOp(Lexer *lexer) {                                                         \r\n\u001b[93m 17 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m 16 \u001b[m    switch (c) {                                                                           \r\n\u001b[93m 15 \u001b[m        case ';':                                                                          \r\n\u001b[93m 14 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 13 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 12 \u001b[m            return TOKE"]
[199.409605, "o", "N_SEMICOLON;                                                        \r\n\u001b[93m 11 \u001b[m        default:                                                                           \r\n\u001b[93m 10 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m  9 \u001b[m            return TOKEN_ERR;                                                              \r\n\u001b[93m  8 \u001b[m    }                                                                                      \r\n\u001b[93m  7 \u001b[m}                                                                                          \r\n\u001b[93m  6 \u001b[m                                                                                           \r\n\u001b[93m  5 \u001b[mToken Lexer_NextToken(Lexer *lexer) {                                                      \r\n\u001b[93m  4 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m  3 \u001b[m    switch (c) {                                                                           \r\n"]
[199.409745, "o", "\u001b[93m  2 \u001b[m        default:                                                                           \r\n\u001b[93m  1 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m  0 \u001b[m            return TOK_ERR;                                                                \r\n                                                                                               \u001b[1;3H\u001b[93m2\r\n 21\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0 \u001b[12C\u001b[?25h"]
[199.744914, "o", "\u001b[?25l\b\u001b[?25h"]
[199.912867, "o", "\u001b[?25l\b\u001b[?25h"]
[200.160814, "o", "\u001b[?25l\b\u001b[?25h"]
[200.408973, "o", "\u001b[?25l\b\u001b[?25h"]
[200.592979, "o", "\u001b[?25l\b\u001b[?25h"]
[200.760953, "o", "\u001b[?25l\b\u001b[?25h"]
[200.928945, "o", "\u001b[?25l\b\u001b[?25h"]
[201.312979, "o", "\u001b[?25l\b\u001b[?25h"]
[201.713482, "o", "\u001b[?25l\u001b[m\u001b[19;20H\u001b[46m{\u001b[23;9H}\u001b[?25h"]
[202.181977, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[23;9H"]
[202.240007, "o", "\u001b[?25l"]
[202.241711, "o", "\u001b[?25h\u001b[?25l\u001b[1;3H\u001b[93m1\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\u001b[m\u001b[16C{\u001b[20;3H\u001b[93m2\r\n  1\r\n  0\r\n  1\u001b[m\u001b[5C}\u001b[22;9H\u001b[?25h"]
[202.392462, "o", "\u001b[?25l\u001b[1;3H\u001b[93m0\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\u001b[21;9H\u001b[?25h"]
[202.592375, "o", "\u001b[?25l\u001b[1;2H19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\u001b[20;9H\u001b[?25h"]
[202.760668, "o", "\u001b[?25l\u001b[1;3H8\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\u001b[19;9H\u001b[?25h"]
[203.200606, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[1;3H\u001b[93m9\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m        default:                                                                           \r\n\u001b[93m  2 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m  3 \u001b[m            return TOK_ERR;                                                                \u001b[20;1H\u001b[93m  0 \u001b[m    \u001b[?25h"]
[203.680735, "o", "\u001b[?25l    \u001b[?25h"]
[204.168745, "o", "\u001b[?25lc\u001b[?25h"]
[204.360679, "o", "\u001b[?25la\u001b[?25h"]
[204.424637, "o", "\u001b[?25ls\u001b[?25h"]
[204.472658, "o", "\u001b[?25le\u001b[?25h"]
[204.632544, "o", "\u001b[?25l \u001b[?25h"]
[204.808676, "o", "\u001b[?25l'\u001b[?25h"]
[205.112785, "o", "\u001b[?25l;\u001b[?25h"]
[205.81672, "o", "\u001b[?25l'\u001b[?25h"]
[206.488736, "o", "\u001b[?25l:\u001b[?25h"]
[207.569236, "o", "\u001b[?25l\u001b[1;2H\u001b[93m20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\u001b[m\r\n\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m        default:                                                                           \r\n\u001b[93m  2 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \u001b[20;3H\u001b[93m1\r\n  0 \u001b[8C\u001b[?25h"]
[208.097009, "o", "\u001b[?25l\u001b[m    \u001b[?25h"]
[209.264781, "o", "\u001b[?25lr\u001b[?25h"]
[209.368696, "o", "\u001b[?25le\u001b[?25h"]
[209.544864, "o", "\u001b[?25lt\u001b[?25h"]
[209.656768, "o", "\u001b[?25lu\u001b[?25h"]
[209.7848, "o", "\u001b[?25lr\u001b[?25h"]
[209.840887, "o", "\u001b[?25ln\u001b[?25h"]
[210.088784, "o", "\u001b[?25l \u001b[?25h"]
[210.361031, "o", "\u001b[?25lL\u001b[?25h"]
[210.520656, "o", "\u001b[?25le\u001b[?25h"]
[210.680461, "o", "\u001b[?25lx\u001b[?25h"]
[210.880812, "o", "\u001b[?25le\u001b[?25h"]
[210.992886, "o", "\u001b[?25lr\u001b[?25h"]
[211.296683, "o", "\u001b[?25l_\u001b[?25h"]
[211.608829, "o", "\u001b[?25lN\u001b[?25h"]
[211.792866, "o", "\u001b[?25le\u001b[?25h"]
[211.992961, "o", "\u001b[?25lx\u001b[?25h"]
[212.192882, "o", "\u001b[?25lt\u001b[?25h"]
[212.528715, "o", "\u001b[?25lO\u001b[?25h"]
[212.696644, "o", "\u001b[?25lp\u001b[?25h"]
[213.025746, "o", "\u001b[?25l(\u001b[?25h"]
[213.065455, "o", "\u001b[?25l\b\u001b[46m()\u001b[?25h"]
[213.616968, "o", "\u001b[?25l\u001b[m\b\b();\u001b[?25h"]
[213.805286, "o", "\u001b[48;1H\u001b[K\u001b[21;38H"]
[213.8403, "o", "\u001b[?25l"]
[213.841299, "o", "\u001b[?25h\u001b[?25l\b\b\u001b[46m()\b\u001b[?25h"]
[214.064411, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[21;37H\u001b[?25h"]
[214.265366, "o", "\u001b[?25l\u001b[ml\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[214.353347, "o", "\u001b[?25le\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[214.553568, "o", "\u001b[?25lx\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[214.737527, "o", "\u001b[?25le\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[214.825655, "o", "\u001b[?25lr\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[215.143137, "o", "\u001b[48;1H\u001b[K\u001b[21;41H"]
[215.456498, "o", "\u001b[?25l"]
[215.457123, "o", "\b\b\b\b\b(lexer)\b\b\u001b[?25h"]
[215.624873, "o", "\u001b[?25l\u001b[1;2H\u001b[93m11\u001b[m\u001b[5C        return TOKEN_SEMICOLON; \u001b[2;3H\u001b[93m0\u001b[m\u001b[1C \u001b[7Cdefault:\u001b[3;2H\u001b[93m 9\u001b[m\u001b[13Clexer->error = LEX_EUNKNOWN;\u001b[4;2H\u001b[93m 8\u001b[m\u001b[1C            return TOKEN_ERR;     \u001b[5;2H\u001b[93m 7\u001b[m\u001b[5C}                                \u001b[6;2H\u001b[93m 6\u001b[m\u001b[1C}               \u001b[7;2H\u001b[93m 5\u001b[m\u001b[9C         \u001b[8;2H\u001b[93m 4\u001b[m\u001b[1CToken Lexer_NextToken(Lexer *lexer) {\u001b[9;2H\u001b[93m 3\u001b[m\u001b[5Cchar c = Lexer_GetChar(lexer, 0);\u001b[10;2H\u001b[93m 2\u001b[m\u001b[5Cswitch (c) {                   \u001b[11;2H\u001b[93m 1\u001b[m\u001b[9Ccase ';':\u001b[12;3H\u001b[93m0\u001b[m\u001b[13Creturn Lexer_NextOp(lexer); \u001b[13;3H\u001b[93m1\u001b[m\u001b[9Cdefault:             \u001b[14;3H\u001b[93m2\u001b[m\u001b[5C \u001b[7Clexer->error = LEX_EUNKNOWN;\u001b[15;3H\u001b[93m3\u001b[m\u001b[1C \u001b[11Creturn TOK_ERR;\u001b[16;3H\u001b[93m4\u001b[m\u001b[5C}\u001b[17;3H\u001b[93m5\u001b[m\u001b[1C}                                    \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                                         "]
[215.625092, "o", "                                     \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \u001b[12;41H\u001b[?25h"]
[216.032449, "o", "\u001b[?25l\u001b[48;1H\u001b[m:\u001b[?25h"]
[216.248582, "o", "w"]
[216.368751, "o", "\r"]
[216.36921, "o", "\u001b[?25l\"src/lexer.c\""]
[216.389749, "o", " 29L, 655B written"]
[216.390343, "o", "\u001b[24;13H\u001b[1m\u001b[7m    \u001b[12;41H\u001b[?25h"]
[217.80079, "o", "\u001b[?25l\u001b[m\u001b[1;3H\u001b[93m2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\u001b[13;20H\u001b[?25h"]
[218.056899, "o", "\u001b[?25l\u001b[1;3H3\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\u001b[14;41H\u001b[?25h"]
[218.272839, "o", "\u001b[?25l\u001b[1;3H4\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\u001b[15;31H\u001b[?25h"]
[219.289285, "o", "\u001b[?25l\u001b[1;3H5\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\u001b[m\u001b[16C\u001b[46m{\u001b[m\u001b[11;3H\u001b[93m5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[5C\u001b[46m}\u001b[m\u001b[17;3H\u001b[93m1\u001b[16;9H\u001b[?25h"]
[220.256365, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[220.504517, "o", "w"]
[220.576926, "o", "\r"]
[220.577276, "o", "\u001b[?25l\"src/lexer.c\""]
[220.598251, "o", " 29L, 655B written"]
[220.598651, "o", "\u001b[16;9H\u001b[?25h"]
[221.08949, "o", "\u001b[?25l\u001b[10;20H{\u001b[16;9H}\u001b[24;1H\u001b[7msrc/lexer.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                    \u001b[m\u001b[1C\u001b[1m\u001b[7mMakefile                                                                                       \u001b[1;97H\u001b[?25h"]
[221.913293, "o", "\u001b[m\u001b[24;97H\u001b[7mMakefile\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                       \u001b[m\u001b[47;97H\u001b[1m\u001b[7msrc/lexer.h                                                                                    \u001b[25;97H"]
[222.608992, "o", "\u001b[47;1Hsrc/lexer_test.c                                                                                \u001b[m\u001b[7msrc/lexer.h\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                    \u001b[25;1H"]
[223.217531, "o", "\r\n"]
[223.71721, "o", "\r\n"]
[223.801492, "o", "\r\n"]
[223.885711, "o", "\r\n"]
[223.96885, "o", "\r\n"]
[224.052515, "o", "\r\n"]
[224.136017, "o", "\r\n"]
[228.337547, "o", "\u001b[47;1Hsrc/lexer_test.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                \u001b[m\u001b[1m\u001b[7msrc/lexer.h                                                                                    \u001b[25;97H"]
[229.137017, "o", "\u001b[26;97H"]
[229.713214, "o", "\u001b[?25l\u001b[m\u001b[25;97H    TOK_ERR,\u001b[25;109H\u001b[K\u001b[26;97H    TOK_EOF,\u001b[26;109H\u001b[K\u001b[27;101HTOK_SEMICOLON,\u001b[28;97H} Token;\u001b[28;106H\u001b[K\u001b[30;97H// The state of the lexer\u001b[31;97Htypedef struct Lexer {\u001b[32;101H// the source input\u001b[33;97H    const char* source;\u001b[34;101H// the current parsed input\u001b[35;97H    const char* current;\u001b[36;101H// the lexer error\u001b[37;101HLexerError error;\u001b[38;101H// the current parsed line\u001b[39;97H    size_t line;\u001b[40;101H// the current parsed column\u001b[41;97H    size_t column;\u001b[41;115H\u001b[K\u001b[42;97H} Lexer;\u001b[42;105H\u001b[K\u001b[43;101H\u001b[K\u001b[44;97HToken Lexer_NextToken(Lexer *lexer);\u001b[45;101H\u001b[K\u001b[46;97H#endif\u001b[46;103H\u001b[K\u001b[48;1H\u001b[K\u001b[46;97H\u001b[?25h"]
[229.801066, "o", "\u001b[45;97H"]
[230.000982, "o", "\u001b[44;97H"]
[230.297154, "o", "\u001b[43;97H"]
[230.849272, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[44;97H\u001b[K\u001b[45;97HToken Lexer_NextToken(Lexer *lexer);\u001b[46;97H\u001b[K\u001b[47;109H\u001b[1m\u001b[7m[+]\u001b[44;97H\u001b[?25h"]
[231.313302, "o", "\u001b[?25l\u001b[mv\u001b[?25h"]
[231.401124, "o", "\u001b[?25lo\u001b[?25h"]
[231.457273, "o", "\u001b[?25li\u001b[?25h"]
[231.56924, "o", "\u001b[?25ld\u001b[?25h"]
[232.041265, "o", "\u001b[?25l \u001b[?25h"]
[232.321318, "o", "\u001b[?25lL\u001b[?25h"]
[232.433142, "o", "\u001b[?25le\u001b[?25h"]
[232.625227, "o", "\u001b[?25lx\u001b[?25h"]
[232.793049, "o", "\u001b[?25le\u001b[?25h"]
[232.889264, "o", "\u001b[?25lr\u001b[?25h"]
[233.13743, "o", "\u001b[?25l_\u001b[?25h"]
[233.449389, "o", "\u001b[?25lI\u001b[?25h"]
[233.71336, "o", "\u001b[?25ln\u001b[?25h"]
[233.792912, "o", "\u001b[?25li\u001b[?25h"]
[233.865354, "o", "\u001b[?25lt\u001b[?25h"]
[234.266019, "o", "\u001b[?25l(\u001b[?25h"]
[234.489296, "o", "\u001b[?25lL\u001b[?25h"]
[234.649376, "o", "\u001b[?25le\u001b[?25h"]
[234.841398, "o", "\u001b[?25lx\u001b[?25h"]
[235.041318, "o", "\u001b[?25le\u001b[?25h"]
[235.121342, "o", "\u001b[?25lr\u001b[?25h"]
[235.257363, "o", "\u001b[?25l \u001b[?25h"]
[235.489404, "o", "\u001b[?25l*\u001b[?25h"]
[235.721352, "o", "\u001b[?25ll\u001b[?25h"]
[235.777305, "o", "\u001b[?25le\u001b[?25h"]
[235.977324, "o", "\u001b[?25lx\u001b[?25h"]
[236.177356, "o", "\u001b[?25le\u001b[?25h"]
[236.297386, "o", "\u001b[?25lr\u001b[?25h"]
[236.570084, "o", "\u001b[?25l\u001b[44;112H\u001b[46m(\u001b[12C)\u001b[?25h"]
[236.881464, "o", "\u001b[?25l\u001b[m\u001b[44;112H(\u001b[12C);\u001b[?25h"]
[237.038297, "o", "\u001b[48;1H\u001b[K\u001b[44;126H"]
[237.296925, "o", "\u001b[?25l"]
[237.297367, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[237.448807, "o", "w"]
[237.521147, "o", "\r"]
[237.521542, "o", "\u001b[?25l\"src/lexer.h\""]
[237.544858, "o", " 34L, 587B written"]
[237.545608, "o", "\u001b[47;109H\u001b[1m\u001b[7m    \u001b[44;126H\u001b[?25h"]
[238.305884, "o", "\r\n\r\n\r\nsrc/lexer_test.c                                                                                \u001b[m\u001b[7msrc/lexer.h\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                    \u001b[32;1H"]
[238.642494, "o", "\u001b[?25l\u001b[m\u001b[10;20H\u001b[46m{\u001b[16;9H}\u001b[m\u001b[24;1H\u001b[1m\u001b[7msrc/lexer.c                                                                                    \u001b[m\u001b[47;1H\u001b[7msrc/lexer_test.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                \u001b[16;9H\u001b[?25h"]
[239.377643, "o", "\u001b[?25l\u001b[m\u001b[1;2H\u001b[93m 0\u001b[m\u001b[1C#include \"lexer.h\"                 \u001b[2;2H\u001b[93m 1\u001b[m\u001b[9C        \u001b[3;2H\u001b[93m 2\u001b[m\u001b[1Cchar Lexer_GetChar(Lexer *lexer, size_t offset) {\u001b[4;2H\u001b[93m 3\u001b[m\u001b[5Creturn *(lexer->current+offset);\u001b[5;2H\u001b[93m 4\u001b[m\u001b[1C}    \u001b[6;2H\u001b[93m 5\u001b[m\u001b[1C \u001b[7;3H\u001b[93m6\u001b[m\u001b[1CToken Lexer_NextOp(Lexer *lexer) {\u001b[8;3H\u001b[93m7\u001b[m\u001b[1C    char c = Lexer_GetChar(lexer, 0);\u001b[9;3H\u001b[93m8\u001b[m\u001b[5Cswitch (c) {                     \u001b[10;3H\u001b[93m9\u001b[m\u001b[5C    case ';':\u001b[11;2H\u001b[93m10\u001b[m\u001b[9C    lexer->column++;\u001b[12;2H\u001b[93m11\u001b[m\u001b[13Clexer->current++;          \u001b[13;2H\u001b[93m12\u001b[m\u001b[9C    return TOKEN_SEMICOLON;\u001b[14;2H\u001b[93m13\u001b[m\u001b[9Cdefault:                        \u001b[15;2H\u001b[93m14\u001b[m\u001b[13Clexer->error = LEX_EUNKNOWN;\u001b[16;2H\u001b[93m15\u001b[m\u001b[5C \u001b[7Creturn TOKEN_ERR;\u001b[17;2H\u001b[93m16\u001b[m\u001b[1C    }\r\n\u001b[93m 17 \u001b[m}                                                                                          \r\n\u001b[93m 18 \u001b[m                                                                                           \r\n\u001b[93m 19 \u001b[mToken Lexer_NextToken(Lexer *lexer) {"]
[239.377886, "o", "                                                      \r\n\u001b[93m 20 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m 21 \u001b[m    switch (c) {                                                                           \r\n\u001b[93m 22 \u001b[m        case ';':                                                                          \u001b[48;1H\u001b[K\u001b[1;5H\u001b[?25h"]
[239.473177, "o", "\u001b[?25l\b\b\u001b[93m1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\r\n 14\r\n 15\r\n 16\r\n 17\r\n 18\r\n 19\r\n 20\r\n 21\u001b[2;5H\u001b[?25h"]
[240.105215, "o", "\u001b[?25l\u001b[1;3H0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\r\n 14\r\n 15\r\n 16\r\n 17\r\n 18\r\n 19\r\n 20\r\n 21\r\n 22\u001b[1;5H\u001b[?25h"]
[240.417599, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[1;3H\u001b[93m1\u001b[m\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m                                                                                           \r\n\u001b[93m  2 \u001b[mchar Lexer_GetChar(Lexer *lexer, size_t offset) {                                          \r\n\u001b[93m  3 \u001b[m    return *(lexer->current+offset);                                                       \r\n\u001b[93m  4 \u001b[m}                                                                                          \r\n\u001b[93m  5 \u001b[m                                                                                           \r\n\u001b[93m  6 \u001b[mToken Lexer_NextOp(Lexer *lexer) {                                                         \r\n\u001b[93m  7 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m  8 \u001b[m    switch (c) {                                                                           \r\n\u001b[93m  9 \u001b[m        case ';':      "]
[240.417665, "o", "                                                                    \r\n\u001b[93m 10 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 11 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 12 \u001b[m            return TOKEN_SEMICOLON;                                                        \r\n\u001b[93m 13 \u001b[m        default:                                                                           \r\n\u001b[93m 14 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m 15 \u001b[m            return TOKEN_ERR;                                                              \r\n\u001b[93m 16 \u001b[m    }                                                                                      \r\n\u001b[93m 17 \u001b[m}                                                                                          \r\n\u001b[93m 18 \u001b[m                                                                                           \r\n"]
[240.417905, "o", "\u001b[93m 19 \u001b[mToken Lexer_NextToken(Lexer *lexer) {                                                      \r\n\u001b[93m 20 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m 21 \u001b[m    switch (c) {                                                                           \u001b[2;1H\u001b[93m  0 \u001b[m\u001b[24;13H\u001b[1m\u001b[7m[+]\u001b[2;5H\u001b[?25h"]
[240.596831, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[2;5H"]
[240.64905, "o", "\u001b[?25l"]
[240.64974, "o", "\u001b[?25h\u001b[?25l\u001b[1;3H\u001b[93m2\r\n  1\u001b[m\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m                                                                                           \r\n\u001b[93m  2 \u001b[mchar Lexer_GetChar(Lexer *lexer, size_t offset) {                                          \r\n\u001b[93m  3 \u001b[m    return *(lexer->current+offset);                                                       \r\n\u001b[93m  4 \u001b[m}                                                                                          \r\n\u001b[93m  5 \u001b[m                                                                                           \r\n\u001b[93m  6 \u001b[mToken Lexer_NextOp(Lexer *lexer) {                                                         \r\n\u001b[93m  7 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m  8 \u001b[m    switch (c) {                                                                           \r\n\u001b[93m  9 \u001b[m        case ';':                        "]
[240.649873, "o", "                                                  \r\n\u001b[93m 10 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 11 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 12 \u001b[m            return TOKEN_SEMICOLON;                                                        \r\n\u001b[93m 13 \u001b[m        default:                                                                           \r\n\u001b[93m 14 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m 15 \u001b[m            return TOKEN_ERR;                                                              \r\n\u001b[93m 16 \u001b[m    }                                                                                      \r\n\u001b[93m 17 \u001b[m}                                                                                          \r\n\u001b[93m 18 \u001b[m                                                                                           \r\n"]
[240.650128, "o", "\u001b[93m 19 \u001b[mToken Lexer_NextToken(Lexer *lexer) {                                                      \r\n\u001b[93m 20 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \u001b[3;1H\u001b[93m  0 \u001b[mvoid Lexer_Init(Lexer *lexer);\u001b[3;5H\u001b[?25h"]
[241.097216, "o", "\u001b[29C"]
[241.393839, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[3;20H\u001b[46m(\u001b[12C)\u001b[m \b\u001b[?25h"]
[241.521505, "o", "\u001b[?25l\u001b[3;20H(\u001b[12C) \u001b[?25h"]
[241.74642, "o", "\u001b[?25l{\u001b[?25h"]
[241.954164, "o", "\u001b[?25l\b\u001b[46m{}\u001b[?25h"]
[242.287563, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[3;36H"]
[242.320737, "o", "\u001b[?25l"]
[242.321933, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[3;36H\u001b[?25h"]
[242.538554, "o", "\u001b[?25l\u001b[m\u001b[1;3H\u001b[93m3\r\n  2\u001b[m\r\n\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m                                                                                           \r\n\u001b[93m  2 \u001b[mchar Lexer_GetChar(Lexer *lexer, size_t offset) {                                          \r\n\u001b[93m  3 \u001b[m    return *(lexer->current+offset);                                                       \r\n\u001b[93m  4 \u001b[m}                                                                                          \r\n\u001b[93m  5 \u001b[m                                                                                           \r\n\u001b[93m  6 \u001b[mToken Lexer_NextOp(Lexer *lexer) {                                                         \r\n\u001b[93m  7 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m  8 \u001b[m    switch (c) {                                                                           \r\n\u001b[93m  9 \u001b[m        case ';':                         "]
[242.538621, "o", "                                                 \r\n\u001b[93m 10 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 11 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 12 \u001b[m            return TOKEN_SEMICOLON;                                                        \r\n\u001b[93m 13 \u001b[m        default:                                                                           \r\n\u001b[93m 14 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m 15 \u001b[m            return TOKEN_ERR;                                                              \r\n\u001b[93m 16 \u001b[m    }                                                                                      \r\n\u001b[93m 17 \u001b[m}                                                                                          \r\n\u001b[93m 18 \u001b[m                                                                                           \r\n"]
[242.538957, "o", "\u001b[93m 19 \u001b[mToken Lexer_NextToken(Lexer *lexer) {                                                      \u001b[3;3H\u001b[93m1\u001b[m\u001b[32C  \r\n\u001b[93m  0 \u001b[m\u001b[46m}\b\u001b[?25h"]
[242.719197, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[4;5H"]
[242.889012, "o", "\u001b[?25l"]
[242.89014, "o", "\u001b[?25h\u001b[?25l\u001b[1;3H\u001b[93m2\r\n  1\r\n  0\u001b[m\u001b[31C{\u001b[4;3H\u001b[93m1\u001b[m\u001b[1C}\u001b[5;3H\u001b[93m2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\r\n 14\r\n 15\r\n 16\r\n 17\r\n 18\r\n 19\r\n 20\u001b[3;5H\u001b[?25h"]
[243.201727, "o", "\u001b[?25l\u001b[m\u001b[30C\u001b[46m{\u001b[4;5H}\u001b[3;35H\u001b[?25h"]
[243.473738, "o", "\u001b[?25l\u001b[3;20H(\u001b[12C)\u001b[m {\u001b[4;5H}\u001b[3;33H\u001b[?25h"]
[243.617315, "o", "\u001b[?25l\u001b[3;20H(\u001b[12C)\b\b\u001b[?25h"]
[244.001683, "o", "\u001b[?25l\u001b[3;20H\u001b[46m(\u001b[12C)\b\u001b[?25h"]
[245.361645, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[1;3H\u001b[93m3\r\n  2\u001b[m\r\n\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m}                                                                                          \r\n\u001b[93m  2 \u001b[m                                                                                           \r\n\u001b[93m  3 \u001b[mchar Lexer_GetChar(Lexer *lexer, size_t offset) {                                          \r\n\u001b[93m  4 \u001b[m    return *(lexer->current+offset);                                                       \r\n\u001b[93m  5 \u001b[m}                                                                                          \r\n\u001b[93m  6 \u001b[m                                                                                           \r\n\u001b[93m  7 \u001b[mToken Lexer_NextOp(Lexer *lexer) {                                                         \r\n\u001b[93m  8 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m  9 \u001b[m    switch (c) {"]
[245.361713, "o", "                                                                           \r\n\u001b[93m 10 \u001b[m        case ';':                                                                          \r\n\u001b[93m 11 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 12 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 13 \u001b[m            return TOKEN_SEMICOLON;                                                        \r\n\u001b[93m 14 \u001b[m        default:                                                                           \r\n\u001b[93m 15 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m 16 \u001b[m            return TOKEN_ERR;                                                              \r\n\u001b[93m 17 \u001b[m    }                                                                                      \r\n\u001b[93m 18 \u001b[m}                                                                                          \r\n"]
[245.362031, "o", "\u001b[93m 19 \u001b[m                                                                                           \u001b[3;3H\u001b[93m1\u001b[m\u001b[16C(\u001b[12C)\r\n\u001b[93m  0 \u001b[?25h"]
[245.921446, "o", "\u001b[?25l\u001b[m    \u001b[?25h"]
[246.30562, "o", "\u001b[?25ll\u001b[?25h"]
[246.425528, "o", "\u001b[?25le\u001b[?25h"]
[246.609658, "o", "\u001b[?25lx\u001b[?25h"]
[246.81758, "o", "\u001b[?25le\u001b[?25h"]
[246.905555, "o", "\u001b[?25lr\u001b[?25h"]
[246.985301, "o", "\u001b[?25l-\u001b[?25h"]
[247.313265, "o", "\u001b[?25l>\u001b[?25h"]
[247.649441, "o", "\u001b[?25ls\u001b[?25h"]
[247.769693, "o", "\u001b[?25lo\u001b[?25h"]
[247.825561, "o", "\u001b[?25lu\u001b[?25h"]
[247.881412, "o", "\u001b[?25lr\u001b[?25h"]
[248.081619, "o", "\u001b[?25lc\u001b[?25h"]
[248.281673, "o", "\u001b[?25le\u001b[?25h"]
[248.417597, "o", "\u001b[?25l \u001b[?25h"]
[248.513419, "o", "\u001b[?25l=\u001b[?25h"]
[248.633649, "o", "\u001b[?25l \u001b[?25h"]
[248.97754, "o", "\u001b[?25lN\u001b[?25h"]
[249.209718, "o", "\u001b[?25lU\u001b[?25h"]
[249.393668, "o", "\u001b[?25lL\u001b[?25h"]
[249.537732, "o", "\u001b[?25lL\u001b[?25h"]
[249.705763, "o", "\u001b[?25l;\u001b[?25h"]
[249.869731, "o", "\u001b[48;1H\u001b[K\u001b[4;29H"]
[249.945205, "o", "\u001b[?25l"]
[249.945604, "o", "\u001b[?25h"]
[250.177724, "o", "\u001b[?25l\u001b[1;3H\u001b[93m4\r\n  3\r\n  2\r\n  1\u001b[m\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m}                                                                                          \r\n\u001b[93m  2 \u001b[m                                                                                           \r\n\u001b[93m  3 \u001b[mchar Lexer_GetChar(Lexer *lexer, size_t offset) {                                          \r\n\u001b[93m  4 \u001b[m    return *(lexer->current+offset);                                                       \r\n\u001b[93m  5 \u001b[m}                                                                                          \r\n\u001b[93m  6 \u001b[m                                                                                           \r\n\u001b[93m  7 \u001b[mToken Lexer_NextOp(Lexer *lexer) {                                                         \r\n\u001b[93m  8 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m  9 \u001b[m    switch (c) {                     "]
[250.17779, "o", "                                                      \r\n\u001b[93m 10 \u001b[m        case ';':                                                                          \r\n\u001b[93m 11 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 12 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 13 \u001b[m            return TOKEN_SEMICOLON;                                                        \r\n\u001b[93m 14 \u001b[m        default:                                                                           \r\n\u001b[93m 15 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m 16 \u001b[m            return TOKEN_ERR;                                                              \r\n\u001b[93m 17 \u001b[m    }                                                                                      \r\n\u001b[93m 18 \u001b[m}                                                                                          "]
[250.178036, "o", "\u001b[5;1H\u001b[93m  0 \u001b[m    lexer->source = NULL;\u001b[5;9H\u001b[?25h"]
[250.273391, "o", "lexer"]
[250.441566, "o", "->"]
[250.833708, "o", "\u001b[?25l= NULL;       \u001b[5;16H\u001b[?25h"]
[250.873042, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[5;16H\u001b[?25h"]
[251.009666, "o", "\u001b[?25l\u001b[mc= NULL;\u001b[5;17H\u001b[?25h"]
[251.097587, "o", "\u001b[?25lu= NULL;\u001b[5;18H\u001b[?25h"]
[251.201698, "o", "\u001b[?25lr= NULL;\u001b[5;19H\u001b[?25h"]
[251.337645, "o", "\u001b[?25lr= NULL;\u001b[5;20H\u001b[?25h"]
[251.386356, "o", "\u001b[?25le= NULL;\u001b[5;21H\u001b[?25h"]
[251.51366, "o", "\u001b[?25ln= NULL;\u001b[5;22H\u001b[?25h"]
[251.585852, "o", "\u001b[?25lt= NULL;\u001b[5;23H\u001b[?25h"]
[251.641659, "o", "\u001b[?25l = NULL;\u001b[5;24H\u001b[?25h"]
[251.892656, "o", "\u001b[48;1H\u001b[K\u001b[5;23H"]
[251.937343, "o", "\u001b[?25l"]
[251.938285, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[1;3H\u001b[93m5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m}                                                                                          \r\n\u001b[93m  2 \u001b[m                                                                                           \r\n\u001b[93m  3 \u001b[mchar Lexer_GetChar(Lexer *lexer, size_t offset) {                                          \r\n\u001b[93m  4 \u001b[m    return *(lexer->current+offset);                                                       \r\n\u001b[93m  5 \u001b[m}                                                                                          \r\n\u001b[93m  6 \u001b[m                                                                                           \r\n\u001b[93m  7 \u001b[mToken Lexer_NextOp(Lexer *lexer) {                                                         \r\n\u001b[93m  8 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m  9 \u001b[m"]
[251.938369, "o", "    switch (c) {                                                                           \r\n\u001b[93m 10 \u001b[m        case ';':                                                                          \r\n\u001b[93m 11 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 12 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 13 \u001b[m            return TOKEN_SEMICOLON;                                                        \r\n\u001b[93m 14 \u001b[m        default:                                                                           \r\n\u001b[93m 15 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m 16 \u001b[m            return TOKEN_ERR;                                                              \r\n\u001b[93m 17 \u001b[m    }                                                                                      \u001b[6;1H\u001b[93m  0 \u001b[m    \u001b[?25h"]
[252.137552, "o", "\u001b[?25ll\u001b[?25h"]
[252.20982, "o", "\u001b[?25li\u001b[?25h"]
[252.665969, "o", "\u001b[?25l\b \b\u001b[?25h"]
[252.753761, "o", "\u001b[?25le\u001b[?25h"]
[252.937774, "o", "\u001b[?25lx\u001b[?25h"]
[253.105664, "o", "\u001b[?25le\u001b[?25h"]
[253.193671, "o", "\u001b[?25lr\u001b[?25h"]
[253.281543, "o", "\u001b[?25l-\u001b[?25h"]
[253.601828, "o", "\u001b[?25l>\u001b[?25h"]
[253.849828, "o", "\u001b[?25ll\u001b[?25h"]
[253.937815, "o", "\u001b[?25li\u001b[?25h"]
[253.99328, "o", "\u001b[?25ln\u001b[?25h"]
[254.049632, "o", "\u001b[?25le\u001b[?25h"]
[254.177831, "o", "\u001b[?25l \u001b[?25h"]
[254.305722, "o", "\u001b[?25l=\u001b[?25h"]
[254.409718, "o", "\u001b[?25l \u001b[?25h"]
[254.593744, "o", "\u001b[?25l1\u001b[?25h"]
[254.697632, "o", "\u001b[?25l;\u001b[?25h"]
[254.917304, "o", "\u001b[48;1H\u001b[K\u001b[6;24H"]
[255.041311, "o", "\u001b[?25l"]
[255.041765, "o", "\u001b[?25h"]
[255.401863, "o", "\u001b[?25l\u001b[1;3H\u001b[93m6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m}                                                                                          \r\n\u001b[93m  2 \u001b[m                                                                                           \r\n\u001b[93m  3 \u001b[mchar Lexer_GetChar(Lexer *lexer, size_t offset) {                                          \r\n\u001b[93m  4 \u001b[m    return *(lexer->current+offset);                                                       \r\n\u001b[93m  5 \u001b[m}                                                                                          \r\n\u001b[93m  6 \u001b[m                                                                                           \r\n\u001b[93m  7 \u001b[mToken Lexer_NextOp(Lexer *lexer) {                                                         \r\n\u001b[93m  8 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m  9 \u001b[m    switch (c) {           "]
[255.402092, "o", "                                                                \r\n\u001b[93m 10 \u001b[m        case ';':                                                                          \r\n\u001b[93m 11 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 12 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 13 \u001b[m            return TOKEN_SEMICOLON;                                                        \r\n\u001b[93m 14 \u001b[m        default:                                                                           \r\n\u001b[93m 15 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m 16 \u001b[m            return TOKEN_ERR;                                                              \u001b[7;1H\u001b[93m  0 \u001b[m    lexer->line = 1;\u001b[7;9H\u001b[?25h"]
[255.593494, "o", "lexer"]
[255.761626, "o", "->"]
[256.097696, "o", "\u001b[?25l= 1;     \u001b[7;16H\u001b[?25h"]
[256.161614, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[7;16H\u001b[?25h"]
[256.289663, "o", "\u001b[?25l\u001b[mc= 1;\b\b\b\b\u001b[?25h"]
[256.361767, "o", "\u001b[?25lo= 1;\b\b\b\b\u001b[?25h"]
[256.52977, "o", "\u001b[?25ll= 1;\b\b\b\b\u001b[?25h"]
[256.601838, "o", "\u001b[?25lu= 1;\b\b\b\b\u001b[?25h"]
[256.857887, "o", "\u001b[?25lm= 1;\b\b\b\b\u001b[?25h"]
[257.033877, "o", "\u001b[?25ln= 1;\b\b\b\b\u001b[?25h"]
[257.193923, "o", "\u001b[?25l = 1;\b\b\b\b\u001b[?25h"]
[257.54775, "o", "\u001b[48;1H\u001b[K\u001b[7;22H"]
[257.6812, "o", "\u001b[?25l"]
[257.68214, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[1;3H\u001b[93m7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m}                                                                                          \r\n\u001b[93m  2 \u001b[m                                                                                           \r\n\u001b[93m  3 \u001b[mchar Lexer_GetChar(Lexer *lexer, size_t offset) {                                          \r\n\u001b[93m  4 \u001b[m    return *(lexer->current+offset);                                                       \r\n\u001b[93m  5 \u001b[m}                                                                                          \r\n\u001b[93m  6 \u001b[m                                                                                           \r\n\u001b[93m  7 \u001b[mToken Lexer_NextOp(Lexer *lexer) {                                                         \r\n\u001b[93m  8 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b["]
[257.682369, "o", "93m  9 \u001b[m    switch (c) {                                                                           \r\n\u001b[93m 10 \u001b[m        case ';':                                                                          \r\n\u001b[93m 11 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 12 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 13 \u001b[m            return TOKEN_SEMICOLON;                                                        \r\n\u001b[93m 14 \u001b[m        default:                                                                           \r\n\u001b[93m 15 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \u001b[8;1H\u001b[93m  0 \u001b[m    \u001b[?25h"]
[257.977673, "o", "\u001b[?25ll\u001b[?25h"]
[258.073889, "o", "\u001b[?25le\u001b[?25h"]
[258.27394, "o", "\u001b[?25lx\u001b[?25h"]
[258.449878, "o", "\u001b[?25le\u001b[?25h"]
[258.545733, "o", "\u001b[?25lr\u001b[?25h"]
[258.649819, "o", "\u001b[?25l-\u001b[?25h"]
[258.945779, "o", "\u001b[?25l>\u001b[?25h"]
[259.089965, "o", "\u001b[?25le\u001b[?25h"]
[259.265613, "o", "\u001b[?25lr\u001b[?25h"]
[259.433839, "o", "\u001b[?25lr\u001b[?25h"]
[259.553932, "o", "\u001b[?25lo\u001b[?25h"]
[259.641874, "o", "\u001b[?25lr\u001b[?25h"]
[259.849913, "o", "\u001b[?25l \u001b[?25h"]
[259.929583, "o", "\u001b[?25l=\u001b[?25h"]
[260.033832, "o", "\u001b[?25l \u001b[?25h"]
[260.969854, "o", "\u001b[?25lT\u001b[?25h"]
[261.233821, "o", "\u001b[?25lO\u001b[?25h"]
[261.458023, "o", "\u001b[?25lK\u001b[?25h"]
[261.729704, "o", "\u001b[?25lE\u001b[?25h"]
[262.738188, "o", "\u001b[?25l\b \b\u001b[?25h"]
[262.92231, "o", "\u001b[?25l\b \b\u001b[?25h"]
[263.09029, "o", "\u001b[?25l\b \b\u001b[?25h"]
[263.32224, "o", "\u001b[?25l\b \b\u001b[?25h"]
[263.641987, "o", "\u001b[?25lL\u001b[?25h"]
[263.697739, "o", "\u001b[?25lE\u001b[?25h"]
[264.025944, "o", "\u001b[?25lX\u001b[?25h"]
[264.889883, "o", "\u001b[?25l_\u001b[?25h"]
[265.033972, "o", "\u001b[?25lE\u001b[?25h"]
[267.721933, "o", "\u001b[?25lO\u001b[?25h"]
[267.938116, "o", "\u001b[?25lK\u001b[?25h"]
[268.265963, "o", "\u001b[?25l;\u001b[?25h"]
[268.516675, "o", "\u001b[48;1H\u001b[K\u001b[8;31H"]
[268.849498, "o", "\u001b[?25l"]
[268.849899, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[269.065454, "o", "w"]
[269.129927, "o", "\r"]
[269.130408, "o", "\u001b[?25l\"src/lexer.c\""]
[269.15443, "o", " 37L, 815B written"]
[269.155053, "o", "\u001b[24;13H\u001b[1m\u001b[7m    \u001b[8;31H\u001b[?25h"]
[269.842165, "o", "\u001b[?25l\u001b[m\u001b[1;3H\u001b[93m8\r\n  7\r\n  6\u001b[m\u001b[31C\u001b[46m{\u001b[m\u001b[4;3H\u001b[93m5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[1C\u001b[46m}\u001b[m\u001b[10;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\r\n 14\u001b[9;5H\u001b[?25h"]
[270.562516, "o", "\u001b[?25l\u001b[m\u001b[3;35H{\u001b[9;5H}\u001b[24;1H\u001b[7msrc/lexer.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                    \u001b[m\u001b[1C\u001b[1m\u001b[7mMakefile                                                                                       \u001b[1;97H\u001b[?25h"]
[270.858199, "o", "\u001b[m\u001b[24;97H\u001b[7mMakefile\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                       \u001b[m\u001b[47;97H\u001b[1m\u001b[7msrc/lexer.h                                                                                    \u001b[44;126H"]
[271.146303, "o", "\u001b[?25l\u001b[m\u001b[25;97H    TOK_EOF,                                                                                   \u001b[26;97H    TOK_SEMICOLON,                                                                             \u001b[27;97H} Token;                                                                                       \u001b[28;97H                                                                                               \u001b[29;97H// The state of the lexer                                                                      \u001b[30;97Htypedef struct Lexer {                                                                         \u001b[31;97H    // the source input                                                                        \u001b[32;97H    const char* source;                                                                        \u001b[33;97H    // the current parsed input                                                                \u001b[34;97H    const char* current;                                                        "]
[271.146369, "o", "               \u001b[35;97H    // the lexer error                                                                         \u001b[36;97H    LexerError error;                                                                          \u001b[37;97H    // the current parsed line                                                                 \u001b[38;97H    size_t line;                                                                               \u001b[39;97H    // the current parsed column                                                               \u001b[40;97H    size_t column;                                                                             \u001b[41;97H} Lexer;                                                                                       \u001b[42;97H                                                                                               \u001b[43;97Hvoid Lexer_Init(Lexer *lexer);                                                                 \u001b[44;97HToken Lexer_NextToken(Lexer *lexer);                                     "]
[271.146603, "o", "                      \u001b[45;97H                                                                                               \u001b[46;97H                                                                                               \u001b[46;97H#endif\u001b[48;1H\u001b[K\u001b[46;97H\u001b[?25h"]
[271.345921, "o", "\u001b[45;97H"]
[271.625868, "o", "\u001b[44;97H"]
[271.81, "o", "\u001b[43;97H"]
[272.098203, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[44;97H\u001b[K\u001b[45;97HToken Lexer_NextToken(Lexer *lexer);\u001b[46;97H\u001b[K\u001b[47;109H\u001b[1m\u001b[7m[+]\u001b[44;97H\u001b[?25h"]
[272.265936, "o", "\u001b[?25l\u001b[mv\u001b[?25h"]
[272.362209, "o", "\u001b[?25lo\u001b[?25h"]
[272.434045, "o", "\u001b[?25li\u001b[?25h"]
[272.546208, "o", "\u001b[?25ld\u001b[?25h"]
[272.722158, "o", "\u001b[?25l \u001b[?25h"]
[272.91418, "o", "\u001b[?25lL\u001b[?25h"]
[273.066075, "o", "\u001b[?25le\u001b[?25h"]
[273.266047, "o", "\u001b[?25lx\u001b[?25h"]
[273.490136, "o", "\u001b[?25le\u001b[?25h"]
[273.602172, "o", "\u001b[?25lr\u001b[?25h"]
[274.002181, "o", "\u001b[?25l_\u001b[?25h"]
[276.562316, "o", "\u001b[?25lR\u001b[?25h"]
[276.770324, "o", "\u001b[?25le\u001b[?25h"]
[276.85814, "o", "\u001b[?25la\u001b[?25h"]
[277.074231, "o", "\u001b[?25ld\u001b[?25h"]
[277.682696, "o", "\u001b[?25l(\u001b[?25h"]
[277.747082, "o", "\u001b[?25l\b\u001b[46m()\u001b[?25h"]
[278.090371, "o", "\u001b[?25l\u001b[m\b\b();\u001b[?25h"]
[278.254613, "o", "\u001b[48;1H\u001b[K\u001b[44;114H"]
[278.33784, "o", "\u001b[?25l"]
[278.338939, "o", "\u001b[?25h\u001b[?25l\b\b\u001b[46m()\b\u001b[?25h"]
[278.577788, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[44;113H\u001b[?25h"]
[278.858425, "o", "\u001b[?25l\u001b[mL\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[278.962844, "o", "\u001b[?25le\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[279.17094, "o", "\u001b[?25lx\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[279.386923, "o", "\u001b[?25le\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[279.482887, "o", "\u001b[?25lr\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[279.691023, "o", "\u001b[?25l \u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[280.090944, "o", "\u001b[?25l*\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[280.48298, "o", "\u001b[?25ll\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[280.547107, "o", "\u001b[?25le\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[280.762999, "o", "\u001b[?25lx\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[280.995056, "o", "\u001b[?25le\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[281.130977, "o", "\u001b[?25lr\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[281.603021, "o", "\u001b[?25l,\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[281.795077, "o", "\u001b[?25l \u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[282.411134, "o", "\u001b[?25lc\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[282.515509, "o", "\u001b[?25lo\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[282.586876, "o", "\u001b[?25ln\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[282.643151, "o", "\u001b[?25ls\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[282.787073, "o", "\u001b[?25lt\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[282.875255, "o", "\u001b[?25l \u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[283.066866, "o", "\u001b[?25lc\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[283.131342, "o", "\u001b[?25lh\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[283.243171, "o", "\u001b[?25la\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[283.290885, "o", "\u001b[?25lr\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[283.635038, "o", "\u001b[?25l*\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[283.867243, "o", "\u001b[?25l \u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[284.1631, "o", "\u001b[?25ls\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[284.671253, "o", "\u001b[48;1H\u001b[K\u001b[44;139H"]
[285.106139, "o", "\u001b[?25l"]
[285.106607, "o", "\u001b[44;112H(\u001b[27C)\b\b\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[285.337875, "o", "w"]
[285.45021, "o", "\r"]
[285.450564, "o", "\u001b[?25l\"src/lexer.h\""]
[285.470916, "o", " 35L, 633B written"]
[285.471378, "o", "\u001b[47;109H\u001b[1m\u001b[7m    \u001b[44;139H\u001b[?25h"]
[286.49814, "o", "\u001b[44;97H"]
[287.090275, "o", "\u001b[mv"]
[287.591453, "o", "o"]
[287.675628, "o", "i"]
[287.759883, "o", "d"]
[287.844086, "o", " "]
[287.928274, "o", "L"]
[288.012621, "o", "e"]
[288.09568, "o", "x"]
[288.179571, "o", "e"]
[288.262875, "o", "r"]
[288.530379, "o", "_"]
[289.638206, "o", "\u001b[?25lRead\u001b[46m(\u001b[27C)\u001b[44;112H\u001b[?25h"]
[290.946855, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[48;13H\u001b[K\u001b[44;112H\u001b[?25h"]
[291.291365, "o", "\u001b[?25lS\u001b[46m(\u001b[mLexer *lexer, const char* s\u001b[46m)\u001b[m;\u001b[47;109H\u001b[1m\u001b[7m[+]\u001b[44;113H\u001b[?25h"]
[292.163285, "o", "\u001b[?25l\u001b[mo\u001b[46m(\u001b[mLexer *lexer, const char* s\u001b[46m)\u001b[m;\u001b[44;114H\u001b[?25h"]
[292.251296, "o", "\u001b[?25lu\u001b[46m(\u001b[mLexer *lexer, const char* s\u001b[46m)\u001b[m;\u001b[44;115H\u001b[?25h"]
[292.323251, "o", "\u001b[?25lr\u001b[46m(\u001b[mLexer *lexer, const char* s\u001b[46m)\u001b[m;\u001b[44;116H\u001b[?25h"]
[292.547318, "o", "\u001b[?25lc\u001b[46m(\u001b[mLexer *lexer, const char* s\u001b[46m)\u001b[m;\u001b[44;117H\u001b[?25h"]
[292.731326, "o", "\u001b[?25le\u001b[46m(\u001b[mLexer *lexer, const char* s\u001b[46m)\u001b[m;\u001b[44;118H\u001b[?25h"]
[293.040687, "o", "\u001b[48;1H\u001b[K\u001b[44;117H"]
[293.146244, "o", "\u001b[?25l"]
[293.146684, "o", "e(\u001b[27C)\u001b[44;117H\u001b[?25h"]
[293.426373, "o", "\u001b[?25l\u001b[45;97Hvoid Lexer_ReadSource\u001b[13C, const char* s);\u001b[46;97HToken Lexer_NextToken(Lexer *lexer);\u001b[45;97H\u001b[?25h"]
[294.474224, "o", "\u0007"]
[294.627133, "o", "\u001b[?25lToken Lexer_NextToken\u001b[13C);\u001b[45;133H\u001b[K\u001b[46;97H\u001b[K\u001b[45;97H\u001b[?25h"]
[294.738424, "o", "\u001b[44;97H"]
[295.002263, "o", "\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[295.258221, "o", "w"]
[295.298306, "o", "\r"]
[295.29866, "o", "\u001b[?25l\"src/lexer.h\""]
[295.318936, "o", " 35L, 639B written"]
[295.31943, "o", "\u001b[47;109H\u001b[1m\u001b[7m    \u001b[44;97H\u001b[?25h"]
[296.242472, "o", "\u001b[mv"]
[296.743776, "o", "o"]
[296.828073, "o", "i"]
[296.912277, "o", "d"]
[296.996341, "o", " "]
[297.080741, "o", "L"]
[297.165023, "o", "e"]
[297.248675, "o", "x"]
[297.333157, "o", "e"]
[297.41705, "o", "r"]
[297.500217, "o", "_"]
[297.666462, "o", "R"]
[298.042284, "o", "\b"]
[298.130863, "o", "\u001b[?25leadSource(Lexer *lexer, const char* s);\u001b[44;147H\u001b[K\u001b[47;109H\u001b[1m\u001b[7m[+]\u001b[44;108H\u001b[?25h"]
[298.29882, "o", "\u001b[?25l\u001b[madSource(Lexer *lexer, const char* s);\u001b[44;146H\u001b[K\u001b[44;108H\u001b[?25h"]
[298.482607, "o", "\u001b[?25ldSource(Lexer *lexer, const char* s);\u001b[44;145H\u001b[K\u001b[44;108H\u001b[?25h"]
[298.666789, "o", "\u001b[?25lSource(Lexer *lexer, const char* s);\u001b[44;144H\u001b[K\u001b[44;108H\u001b[?25h"]
[299.074548, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[48;13H\u001b[K\u001b[44;108H\u001b[?25h"]
[299.354758, "o", "\u001b[?25lSSource(Lexer *lexer, const char* s);\u001b[44;109H\u001b[?25h"]
[299.538694, "o", "\u001b[?25leSource(Lexer *lexer, const char* s);\u001b[44;110H\u001b[?25h"]
[299.674667, "o", "\u001b[?25ltSource(Lexer *lexer, const char* s);\u001b[44;111H\u001b[?25h"]
[299.925918, "o", "\u001b[48;1H\u001b[K\u001b[44;110H"]
[300.162375, "o", "\u001b[?25l"]
[300.16276, "o", "\u001b[?25h"]
[300.57016, "o", "\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[300.722239, "o", "w"]
[300.794502, "o", "\r"]
[300.794901, "o", "\u001b[?25l\"src/lexer.h\""]
[300.815613, "o", " 35L, 638B written"]
[300.816085, "o", "\u001b[47;109H\u001b[1m\u001b[7m    \u001b[44;110H\u001b[?25h"]
[301.130974, "o", "\r\n\r\n\r\nsrc/lexer_test.c                                                                                \u001b[m\u001b[7msrc/lexer.h\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                    \u001b[32;1H"]
[301.403827, "o", "\u001b[?25l\u001b[m\u001b[3;35H\u001b[46m{\u001b[9;5H}\u001b[m\u001b[24;1H\u001b[1m\u001b[7msrc/lexer.c                                                                                    \u001b[m\u001b[47;1H\u001b[7msrc/lexer_test.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                \u001b[9;5H\u001b[?25h"]
[302.162205, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[48;13H\u001b[K\u001b[1;3H\u001b[93m9\r\n  8\u001b[m\u001b[10;1H                                                                                               \r\n\u001b[93m  1 \u001b[m                                                                                           \r\n\u001b[93m  2 \u001b[mchar Lexer_GetChar(Lexer *lexer, size_t offset) {                                          \r\n\u001b[93m  3 \u001b[m    return *(lexer->current+offset);                                                       \r\n\u001b[93m  4 \u001b[m}                                                                                          \r\n\u001b[93m  5 \u001b[m                                                                                           \r\n\u001b[93m  6 \u001b[mToken Lexer_NextOp(Lexer *lexer) {                                                         \r\n\u001b[93m  7 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m  8 \u001b[m    switch (c) {                                                                           \r\n\u001b[93m  9 \u001b[m  "]
[302.162287, "o", "      case ';':                                                                          \r\n\u001b[93m 10 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 11 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 12 \u001b[m            return TOKEN_SEMICOLON;                                                        \r\n\u001b[93m 13 \u001b[m        default:                                                                           \u001b[3;3H\u001b[93m7\u001b[m\u001b[31C{\u001b[4;3H\u001b[93m6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[1C}\r\n\u001b[93m  0 \u001b[m\u001b[24;13H\u001b[1m\u001b[7m[+]\u001b[10;5H\u001b[?25h"]
[302.312611, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[10;5H"]
[302.378354, "o", "\u001b[?25l"]
[302.379038, "o", "\u001b[?25h\u001b[?25l\u001b[1;2H\u001b[93m10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m                                                                                           \r\n\u001b[93m  2 \u001b[mchar Lexer_GetChar(Lexer *lexer, size_t offset) {                                          \r\n\u001b[93m  3 \u001b[m    return *(lexer->current+offset);                                                       \r\n\u001b[93m  4 \u001b[m}                                                                                          \r\n\u001b[93m  5 \u001b[m                                                                                           \r\n\u001b[93m  6 \u001b[mToken Lexer_NextOp(Lexer *lexer) {                                                         \r\n\u001b[93m  7 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m  8 \u001b[m    switch (c) {                                                                           \r\n\u001b[93m  9 \u001b[m"]
[302.379117, "o", "        case ';':                                                                          \r\n\u001b[93m 10 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 11 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 12 \u001b[m            return TOKEN_SEMICOLON;                                                        \u001b[11;1H\u001b[93m  0 \u001b[mvoid Lexer_SetSource(Lexer *lexer, const char* s);\u001b[11;5H\u001b[?25h"]
[302.802672, "o", "\u001b[49C"]
[303.091706, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[11;25H\u001b[46m(\u001b[27C)\u001b[m \b\u001b[?25h"]
[303.218887, "o", "\u001b[?25l\u001b[11;25H(\u001b[27C) \u001b[?25h"]
[303.427831, "o", "\u001b[?25l{\u001b[?25h"]
[303.64355, "o", "\u001b[?25l\b\u001b[46m{}\u001b[?25h"]
[303.950682, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[11;56H"]
[304.026361, "o", "\u001b[?25l"]
[304.027564, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[11;56H\u001b[?25h"]
[304.228092, "o", "\u001b[?25l\u001b[m\u001b[1;3H\u001b[93m1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\u001b[m\r\n\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m                                                                                           \r\n\u001b[93m  2 \u001b[mchar Lexer_GetChar(Lexer *lexer, size_t offset) {                                          \r\n\u001b[93m  3 \u001b[m    return *(lexer->current+offset);                                                       \r\n\u001b[93m  4 \u001b[m}                                                                                          \r\n\u001b[93m  5 \u001b[m                                                                                           \r\n\u001b[93m  6 \u001b[mToken Lexer_NextOp(Lexer *lexer) {                                                         \r\n\u001b[93m  7 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m  8 \u001b[m    switch (c) {                                                                           \r\n\u001b[93m  9 \u001b[m  "]
[304.228325, "o", "      case ';':                                                                          \r\n\u001b[93m 10 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 11 \u001b[m            lexer->current++;                                                              \u001b[11;3H\u001b[93m1\u001b[m\u001b[52C  \r\n\u001b[93m  0 \u001b[m\u001b[46m}\b\u001b[?25h"]
[304.413757, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[12;5H"]
[304.506458, "o", "\u001b[?25l"]
[304.507389, "o", "\u001b[?25h\u001b[?25l\u001b[1;3H\u001b[93m0\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[51C{\u001b[12;3H\u001b[93m1\u001b[m\u001b[1C}\u001b[13;3H\u001b[93m2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\u001b[11;5H\u001b[?25h"]
[304.611084, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[1;3H\u001b[93m1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m}                                                                                          \r\n\u001b[93m  2 \u001b[m                                                                                           \r\n\u001b[93m  3 \u001b[mchar Lexer_GetChar(Lexer *lexer, size_t offset) {                                          \r\n\u001b[93m  4 \u001b[m    return *(lexer->current+offset);                                                       \r\n\u001b[93m  5 \u001b[m}                                                                                          \r\n\u001b[93m  6 \u001b[m                                                                                           \r\n\u001b[93m  7 \u001b[mToken Lexer_NextOp(Lexer *lexer) {                                                         \r\n\u001b[93m  8 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                         "]
[304.611318, "o", "             \r\n\u001b[93m  9 \u001b[m    switch (c) {                                                                           \r\n\u001b[93m 10 \u001b[m        case ';':                                                                          \r\n\u001b[93m 11 \u001b[m            lexer->column++;                                                               \u001b[12;1H\u001b[93m  0 \u001b[?25h"]
[305.099156, "o", "\u001b[?25l\u001b[m    \u001b[?25h"]
[307.954524, "o", "\u001b[?25ll\u001b[?25h"]
[308.042874, "o", "\u001b[?25le\u001b[?25h"]
[308.258872, "o", "\u001b[?25lx\u001b[?25h"]
[308.482946, "o", "\u001b[?25le\u001b[?25h"]
[308.610916, "o", "\u001b[?25lr\u001b[?25h"]
[308.746999, "o", "\u001b[?25l-\u001b[?25h"]
[309.171018, "o", "\u001b[?25l>\u001b[?25h"]
[309.866785, "o", "\u001b[?25ls\u001b[?25h"]
[309.970971, "o", "\u001b[?25lo\u001b[?25h"]
[310.034973, "o", "\u001b[?25lu\u001b[?25h"]
[310.091013, "o", "\u001b[?25lr\u001b[?25h"]
[310.290982, "o", "\u001b[?25lc\u001b[?25h"]
[310.490869, "o", "\u001b[?25le\u001b[?25h"]
[310.626949, "o", "\u001b[?25l \u001b[?25h"]
[310.715046, "o", "\u001b[?25l=\u001b[?25h"]
[310.826973, "o", "\u001b[?25l \u001b[?25h"]
[310.979055, "o", "\u001b[?25ls\u001b[?25h"]
[311.099043, "o", "\u001b[?25l;\u001b[?25h"]
[311.387417, "o", "\u001b[?25l\u001b[1;3H\u001b[93m2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\u001b[m\r\n\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m}                                                                                          \r\n\u001b[93m  2 \u001b[m                                                                                           \r\n\u001b[93m  3 \u001b[mchar Lexer_GetChar(Lexer *lexer, size_t offset) {                                          \r\n\u001b[93m  4 \u001b[m    return *(lexer->current+offset);                                                       \r\n\u001b[93m  5 \u001b[m}                                                                                          \r\n\u001b[93m  6 \u001b[m                                                                                           \r\n\u001b[93m  7 \u001b[mToken Lexer_NextOp(Lexer *lexer) {                                                         \r\n\u001b[93m  8 \u001b[m    char c = Lexer_GetChar(lexer, 0);                                                      \r\n\u001b[93m  9 \u001b[m"]
[311.387661, "o", "    switch (c) {                                                                           \r\n\u001b[93m 10 \u001b[m        case ';':                                                                          \u001b[12;3H\u001b[93m1\r\n  0 \u001b[m    \u001b[?25h"]
[311.763017, "o", "\u001b[?25ll\u001b[?25h"]
[311.818667, "o", "\u001b[?25le\u001b[?25h"]
[312.018907, "o", "\u001b[?25lx\u001b[?25h"]
[312.202975, "o", "\u001b[?25le\u001b[?25h"]
[312.29908, "o", "\u001b[?25lr\u001b[?25h"]
[313.32299, "o", "\u001b[?25l-\u001b[?25h"]
[313.64302, "o", "\u001b[?25l>\u001b[?25h"]
[313.835081, "o", "\u001b[?25lc\u001b[?25h"]
[313.899004, "o", "\u001b[?25lu\u001b[?25h"]
[314.035114, "o", "\u001b[?25lr\u001b[?25h"]
[314.18713, "o", "\u001b[?25lr\u001b[?25h"]
[314.235125, "o", "\u001b[?25le\u001b[?25h"]
[314.347102, "o", "\u001b[?25ln\u001b[?25h"]
[314.467118, "o", "\u001b[?25lt\u001b[?25h"]
[314.626965, "o", "\u001b[?25l \u001b[?25h"]
[314.667111, "o", "\u001b[?25l=\u001b[?25h"]
[315.331137, "o", "\u001b[?25l \u001b[?25h"]
[315.491055, "o", "\u001b[?25ls\u001b[?25h"]
[315.571045, "o", "\u001b[?25l;\u001b[?25h"]
[315.871161, "o", "\u001b[48;1H\u001b[K\u001b[13;27H"]
[316.162759, "o", "\u001b[?25l"]
[316.163149, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[316.322643, "o", "w"]
[316.410915, "o", "\r"]
[316.411304, "o", "\u001b[?25l\"src/lexer.c\""]
[316.431644, "o", " 42L, 917B written"]
[316.432172, "o", "\u001b[24;13H\u001b[1m\u001b[7m    \u001b[13;27H\u001b[?25h"]
[316.891312, "o", "\u001b[m\u001b[24;1H\u001b[7msrc/lexer.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                    \u001b[m\u001b[47;1H\u001b[1m\u001b[7msrc/lexer_test.c                                                                                \u001b[32;1H"]
[317.506902, "o", "\u001b[8C"]
[318.378749, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[48;13H\u001b[K\u001b[33;1H                                                                                               \r\n        Token tok = Lexer_NextToken(&lexer);                                                   \r\n        assert(tok == TOK_ERR);                                                                \r\n        assert(lexer.error == LEX_EUNKNOWN);                                                   \r\n    }                                                                                          \r\n                                                                                               \r\n    printf(\"all test passed\");                                                                 \r\n    return 0;                                                                                  \r\n}                                                                                              \r\n\u001b[94m~                                                                                            "]
[318.378959, "o", "  \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \u001b[m\u001b[47;18H\u001b[1m\u001b[7m[+]\u001b[33;9H\u001b[?25h"]
[318.643251, "o", "\u001b[?25l\u001b[mL\u001b[?25h"]
[318.787191, "o", "\u001b[?25le\u001b[?25h"]
[319.011158, "o", "\u001b[?25lx\u001b[?25h"]
[319.21915, "o", "\u001b[?25le\u001b[?25h"]
[319.33123, "o", "\u001b[?25lr\u001b[?25h"]
[319.603291, "o", "\u001b[?25l_\u001b[?25h"]
[319.875155, "o", "\u001b[?25lI\u001b[?25h"]
[320.083245, "o", "\u001b[?25ln\u001b[?25h"]
[320.171134, "o", "\u001b[?25li\u001b[?25h"]
[320.25914, "o", "\u001b[?25lt\u001b[?25h"]
[320.555979, "o", "\u001b[?25l(\u001b[?25h"]
[320.619896, "o", "\u001b[?25l\b\u001b[46m()\u001b[?25h"]
[320.907222, "o", "\u001b[?25l\u001b[m\b\b();\u001b[?25h"]
[321.095543, "o", "\u001b[48;1H\u001b[K\u001b[33;21H"]
[321.114756, "o", "\u001b[?25l"]
[321.115782, "o", "\u001b[?25h\u001b[?25l\b\b\u001b[46m()\b\u001b[?25h"]
[321.290398, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[33;20H\u001b[?25h"]
[321.443637, "o", "\u001b[?25l\u001b[ml\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[321.539864, "o", "\u001b[?25le\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[321.747886, "o", "\u001b[?25lx\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[321.948008, "o", "\u001b[?25le\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[322.035887, "o", "\u001b[?25lr\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[322.295548, "o", "\u001b[48;1H\u001b[K\u001b[33;24H"]
[322.37043, "o", "\u001b[?25l"]
[322.382585, "o", "\b\b\b\b\b(lexer)\b\b\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[34;1H                                                                                               \r\n        Token tok = Lexer_NextToken(&lexer);                                                   \r\n        assert(tok == TOK_ERR);                                                                \r\n        assert(lexer.error == LEX_EUNKNOWN);                                                   \r\n    }                                                                                          \r\n                                                                                               \r\n    printf(\"all test passed\");                                                                 \r\n    return 0;                                                                                  \r\n}                                                                                              \r\n\u001b[94m~                                                                                      "]
[322.382825, "o", "        \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \u001b[34;9H\u001b[?25h"]
[322.65117, "o", "\u001b[?25l\u001b[mL\u001b[?25h"]
[322.795138, "o", "\u001b[?25le\u001b[?25h"]
[322.995231, "o", "\u001b[?25lx\u001b[?25h"]
[323.179195, "o", "\u001b[?25le\u001b[?25h"]
[323.267353, "o", "\u001b[?25lr\u001b[?25h"]
[323.643215, "o", "\u001b[?25l_\u001b[?25h"]
[323.859218, "o", "\u001b[?25lS\u001b[?25h"]
[324.123309, "o", "\u001b[?25le\u001b[?25h"]
[324.235199, "o", "\u001b[?25lt\u001b[?25h"]
[324.451274, "o", "\u001b[?25lS\u001b[?25h"]
[324.691198, "o", "\u001b[?25lo\u001b[?25h"]
[324.747401, "o", "\u001b[?25lu\u001b[?25h"]
[324.787333, "o", "\u001b[?25lr\u001b[?25h"]
[325.003379, "o", "\u001b[?25lc\u001b[?25h"]
[325.211288, "o", "\u001b[?25le\u001b[?25h"]
[325.739925, "o", "\u001b[?25l(\u001b[?25h"]
[325.788444, "o", "\u001b[?25l\b\u001b[46m()\u001b[?25h"]
[326.075348, "o", "\u001b[?25l\u001b[m\b\b();\u001b[?25h"]
[326.245814, "o", "\u001b[48;1H\u001b[K\u001b[34;26H"]
[326.338924, "o", "\u001b[?25l"]
[326.339984, "o", "\u001b[?25h\u001b[?25l\b\b\u001b[46m()\b\u001b[?25h"]
[326.650879, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[34;25H\u001b[?25h"]
[327.075998, "o", "\u001b[?25l\u001b[m\"\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[327.243933, "o", "\u001b[?25l\"\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[327.673168, "o", "\u001b[48;1H\u001b[K\u001b[34;26H"]
[327.786989, "o", "\u001b[?25l"]
[327.787478, "o", "\b\b(\"\")\b\b\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[34;26H\u001b[?25h"]
[328.067454, "o", "\u001b[?25l\u001b[m;\");\b\b\b\u001b[?25h"]
[328.537478, "o", "\u001b[48;1H\u001b[K\u001b[34;26H"]
[328.914823, "o", "\u001b[?25l"]
[328.915415, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[329.162926, "o", "w"]
[329.371228, "o", "\r"]
[329.371654, "o", "\u001b[?25l\"src/lexer_test.c\""]
[329.392333, "o", " 18L, 360B written"]
[329.392839, "o", "\u001b[47;18H\u001b[1m\u001b[7m    \u001b[34;26H\u001b[?25h"]
[329.963733, "o", "\u001b[?25l\u001b[24;1Hsrc/lexer.c                                                                                    \u001b[m\u001b[47;1H\u001b[7msrc/lexer_test.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                \u001b[13;27H\u001b[?25h"]
[330.25253, "o", "\u001b[?25l\u001b[m\u001b[1;2H\u001b[93m2\u001b[m\u001b[2CToken Lexer_NextOp(Lexer *lexer) {\u001b[2;2H\u001b[93m2\u001b[m\u001b[6Cchar c = Lexer_GetChar(lexer, 0);\u001b[3;2H\u001b[93m2\u001b[m\u001b[2C    switch (c) {               \u001b[4;2H\u001b[93m1\u001b[m\u001b[6C    case ';':        \u001b[5;2H\u001b[93m1\u001b[m\u001b[6C        lexer->column++;\u001b[6;2H\u001b[93m1\u001b[m\u001b[6C        lexer->current++;\u001b[7;2H\u001b[93m1\u001b[m\u001b[6C        return TOKEN_SEMICOLON;\u001b[8;2H\u001b[93m1\u001b[m\u001b[6C    default:           \u001b[9;2H\u001b[93m1\u001b[m\u001b[2C \u001b[11Clexer->error = LEX_EUNKNOWN;\u001b[10;2H\u001b[93m1\u001b[m\u001b[14Creturn TOKEN_ERR;\u001b[11;2H\u001b[93m1\u001b[m\u001b[2C    }                                              \u001b[12;2H\u001b[93m1\u001b[m\u001b[2C}                     \u001b[13;2H\u001b[93m1\u001b[m\u001b[6C                   \u001b[14;3H\u001b[93m9\u001b[m\u001b[1CToken Lexer_NextToken(Lexer *lexer) \u001b[46m{\u001b[m\u001b[15;3H\u001b[93m8\u001b[m\u001b[5Cchar c = Lexer_GetChar(lexer, 0);\u001b[16;3H\u001b[93m7\u001b[m\u001b[1C    switch (c) {                                 \u001b[17;3H\u001b[93m6\u001b[m\u001b[5C    case ';':                   \u001b[18;5H \u001b[11Creturn Lexer_NextOp(lexer);\u001b[19;3H\u001b[93m4\u001b[m\u001b[9Cdefault:\u001b[20;3H\u001b[93m3\u001b[m\u001b[1C            lexer->error = LEX_EUNKNOWN;\u001b[21;3H\u001b[93m2\u001b[m\u001b[5C        ret"]
[330.25279, "o", "urn TOK_ERR;          \u001b[22;3H\u001b[93m1\u001b[m\u001b[5C}           \u001b[23;2H\u001b[93m \u001b[m\u001b[2C\u001b[46m}\u001b[m\u001b[7C         \u001b[48;1H\u001b[K\u001b[23;5H\u001b[?25h"]
[330.547318, "o", "\u001b[?25l\u001b[1;3H\u001b[93m1\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\u001b[m\u001b[37C{\u001b[15;3H\u001b[93m7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\u001b[m\u001b[1C}\u001b[22;5H\u001b[?25h"]
[330.763243, "o", "\u001b[?25l\u001b[1;3H\u001b[93m0\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\u001b[21;5H\u001b[?25h"]
[330.963229, "o", "\u001b[?25l\u001b[1;2H19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\u001b[20;5H\u001b[?25h"]
[331.083298, "o", "\u001b[12C"]
[332.843299, "o", "\u001b[?25l\u001b[1;3H8\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\u001b[19;17H\u001b[?25h"]
[333.011294, "o", "\u001b[?25l\u001b[1;3H7\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\u001b[18;17H\u001b[?25h"]
[333.195412, "o", "\u001b[?25l\u001b[1;3H6\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\u001b[17;17H\u001b[?25h"]
[333.379282, "o", "\u001b[?25l\u001b[1;3H5\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[16;17H\u001b[?25h"]
[333.691761, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[1;3H\u001b[93m6\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m        case ';':                                                                          \r\n\u001b[93m  2 \u001b[m            return Lexer_NextOp(lexer);                                                    \r\n\u001b[93m  3 \u001b[m        default:                                                                           \r\n\u001b[93m  4 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m  5 \u001b[m            return TOK_ERR;                                                                \r\n\u001b[93m  6 \u001b[m    }                                                                                      \u001b[17;1H\u001b[93m  0 \u001b[m\u001b[24;13H\u001b[1m\u001b[7m[+]\u001b[17;9H\u001b[?25h"]
[334.067827, "o", "\u001b[?25l\u001b[m    \u001b[?25h"]
[334.411448, "o", "\u001b[?25lc\u001b[?25h"]
[334.611396, "o", "\u001b[?25la\u001b[?25h"]
[334.691561, "o", "\u001b[?25ls\u001b[?25h"]
[334.77151, "o", "\u001b[?25le\u001b[?25h"]
[334.883482, "o", "\u001b[?25l \u001b[?25h"]
[334.971439, "o", "\u001b[?25l'\u001b[?25h"]
[335.259483, "o", "\u001b[?25l\\\u001b[?25h"]
[335.595495, "o", "\u001b[?25l0\u001b[?25h"]
[335.899532, "o", "\u001b[?25l'\u001b[?25h"]
[336.251434, "o", "\u001b[?25l:\u001b[?25h"]
[336.571918, "o", "\u001b[?25l\u001b[1;3H\u001b[93m7\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\u001b[m\r\n\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m        case ';':                                                                          \r\n\u001b[93m  2 \u001b[m            return Lexer_NextOp(lexer);                                                    \r\n\u001b[93m  3 \u001b[m        default:                                                                           \r\n\u001b[93m  4 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m  5 \u001b[m            return TOK_ERR;                                                                \u001b[17;3H\u001b[93m1\r\n  0 \u001b[8C\u001b[?25h"]
[336.875689, "o", "\u001b[?25l\u001b[m    \u001b[?25h"]
[338.067571, "o", "\u001b[?25lr\u001b[?25h"]
[338.203682, "o", "\u001b[?25le\u001b[?25h"]
[338.475741, "o", "\u001b[?25lt\u001b[?25h"]
[338.619658, "o", "\u001b[?25lu\u001b[?25h"]
[338.683555, "o", "\u001b[?25lr\u001b[?25h"]
[338.835659, "o", "\u001b[?25ln\u001b[?25h"]
[338.939632, "o", "\u001b[?25l \u001b[?25h"]
[339.491584, "o", "\u001b[?25lT\u001b[?25h"]
[340.035654, "o", "\u001b[?25lO\u001b[?25h"]
[340.259654, "o", "\u001b[?25lK\u001b[?25h"]
[340.571659, "o", "\u001b[?25l_\u001b[?25h"]
[340.731637, "o", "\u001b[?25lE\u001b[?25h"]
[340.875635, "o", "\u001b[?25lO\u001b[?25h"]
[341.011374, "o", "\u001b[?25lF\u001b[?25h"]
[341.283294, "o", "\u001b[?25l;\u001b[?25h"]
[341.657527, "o", "\u001b[48;1H\u001b[K\u001b[18;31H"]
[342.051007, "o", "\u001b[?25l"]
[342.051412, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[342.323138, "o", "w"]
[342.371607, "o", "\r"]
[342.371988, "o", "\u001b[?25l\"src/lexer.c\""]
[342.392774, "o", " 44L, 964B written"]
[342.393337, "o", "\u001b[24;13H\u001b[1m\u001b[7m    \u001b[18;31H\u001b[?25h"]
[343.066997, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[343.27527, "o", "%"]
[343.659231, "o", "s"]
[343.795132, "o", "/"]
[344.426831, "o", "T"]
[344.53919, "o", "O"]
[344.755089, "o", "K"]
[345.03496, "o", "E"]
[345.13124, "o", "N"]
[345.739214, "o", "_"]
[346.211281, "o", "/"]
[346.66737, "o", "T"]
[346.763269, "o", "O"]
[346.931114, "o", "K"]
[347.195363, "o", "_"]
[347.467501, "o", "/"]
[347.555231, "o", "g"]
[347.699379, "o", "\r"]
[347.700336, "o", "\u001b[?25l\u001b[1;2H\u001b[93m 9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\u001b[m\u001b[23C_SEMICOLON;  \u001b[8;2H\u001b[93m 2\r\n  1\r\n  0\u001b[m\u001b[23C_ERR;  \u001b[11;3H\u001b[93m1\r\n  2\r\n  3\r\n\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\u001b[m\u001b[24;13H\u001b[1m\u001b[7m[+]\u001b[10;17H\u001b[?25h"]
[348.147334, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[348.299199, "o", "w"]
[348.411574, "o", "\r"]
[348.411948, "o", "\u001b[?25l\"src/lexer.c\""]
[348.432055, "o", " 44L, 960B written"]
[348.432556, "o", "\u001b[24;13H\u001b[1m\u001b[7m    \u001b[10;17H\u001b[?25h"]
[349.492238, "o", "\u001b[m\u001b[24;1H\u001b[7msrc/lexer.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                    \u001b[m\u001b[1C\u001b[1m\u001b[7mMakefile                                                                                       \u001b[1;97H"]
[349.924064, "o", "\u001b[m\u001b[24;97H\u001b[7mMakefile\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                       \u001b[m\u001b[47;97H\u001b[1m\u001b[7msrc/lexer.h                                                                                    \u001b[44;110H"]
[350.396165, "o", "\r\n\r\n\r\nsrc/lexer_test.c                                                                                \u001b[m\u001b[7msrc/lexer.h\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                    \u001b[34;26H"]
[352.891801, "o", "\u001b[35;26H"]
[354.843738, "o", "\u001b[36;26H"]
[356.339851, "o", "\u001b[37;26H"]
[356.772875, "o", "\u001b[?25l\u001b[m\u001b[31;1H        Lexer lexer = {0};                                                                     \r\n        Lexer_Init(lexer);                                                                     \r\n        Lexer_SetSource(\";\");                                                                  \r\n        Token tok = Lexer_NextToken(&lexer);                                                   \r\n        assert(tok == TOK_ERR);                                                                \r\n        assert(lexer.error == LEX_EUNKNOWN);                                                   \r\n    }                                                                                          \r\n                                                                                               \r\n    printf(\"all test passed\");                                                                 \r\n    return 0;                                                                                  \r\n}                                     "]
[356.772974, "o", "                                                         \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \u001b[m\r\n                                                                                               \u001b[31;5H\u001b[46m{\u001b[m                     \u001b[32;14H lexer = {0}\u001b[33;15HInit(lexer);   \u001b[34;9HLexer_SetSource(\";\");               \u001b[35;9HToken tok = Lexer_NextToken(&lexer);\u001b[36;16Htok == TOK_ERR);             \r\n    \u001b[46m}\u001b[m\u001b[46;1H\u001b[94m~                                                                                              \u001b[m\u001b[47;18H\u001b[1m\u001b[7m[+]\u001b[m\u001b[48;1H\u001b[K\u001b[37;5H\u001b[?25h"]
[356.835864, "o", "\u001b[?25l\u001b[31;5H{\u001b[37;5H}\u001b[36;5H\u001b[?25h"]
[358.219682, "o", "\u001b[26C"]
[358.708255, "o", "\u001b[?25l\u001b[36;15H\u001b[46m(\u001b[14C)\b\u001b[?25h"]
[358.907937, "o", "\u001b[?25l\u001b[m\u001b[36;15H(\u001b[14C)\b\b\u001b[?25h"]
[359.075863, "o", "\b"]
[359.259867, "o", "\b"]
[359.532455, "o", "\u001b[?25l\u001b[36;15H\u001b[46m(\u001b[11C)\u001b[m;   \b\b\b\b\b\u001b[?25h"]
[359.604306, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[36;27H\u001b[?25h"]
[360.892758, "o", "\u001b[?25l\u001b[mS\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[361.140763, "o", "\u001b[?25lE\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[361.5405, "o", "\u001b[?25lM\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[361.588752, "o", "\u001b[?25lI\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[362.020842, "o", "\u001b[?25lC\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[362.092917, "o", "\u001b[?25lO\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[362.252741, "o", "\u001b[?25lL\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[362.452759, "o", "\u001b[?25lO\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[362.55689, "o", "\u001b[?25lN\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[363.311494, "o", "\u001b[48;1H\u001b[K\u001b[36;35H"]
[363.715716, "o", "\u001b[?25l"]
[363.71617, "o", "\u001b[36;15H(\u001b[20C)\b\b\u001b[?25h"]
[364.718918, "o", "\u0007"]
[365.460255, "o", "\r"]
[365.524044, "o", "\u001b[8C"]
[365.708384, "o", "\u001b[?25lassert\u001b[46m(\u001b[20C)\u001b[36;15H\u001b[?25h"]
[365.908062, "o", "\u001b[?25l\u001b[m(\u001b[20C)\u001b[36;16H\u001b[?25h"]
[367.020153, "o", "\u001b[?25l== TOK_SEMICOLON);    \u001b[36;16H\u001b[?25h"]
[367.115975, "o", "\u001b[35;16H"]
[367.267963, "o", "ok "]
[367.436005, "o", "= "]
[367.755787, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- VISUAL --\u001b[35;21H\u001b[?25h"]
[368.051947, "o", "\u001b[?25l\u001b[m\u001b[48;5;242mLexer_NextToken(&lexer);\u001b[?25h"]
[368.140077, "o", "\u001b[?25l\u001b[25;2Hinclude <stdio.h> \r\n#include <assert.h> \r\n#include \"lexer.h\" \r\n \r\nint main(int argc, char** argv) { \r\n \r\n    { \r\n        Lexer lexer = {0}; \r\n        Lexer_Init(lexer); \r\n        Lexer_SetSource(\";\"); \r\n        Token tok = \u001b[m\u001b[1Cexer_NextToken(&lexer);\u001b[25;1H\u001b[?25h"]
[368.307743, "o", "\u0007\u001b[?25l\u001b[?25h"]
[369.163019, "o", "\u001b[?25l#include <stdio.h> \r\n#\b\u001b[?25h"]
[369.664985, "o", "\u001b[?25l#include <assert.h> \r\n#\b\u001b[?25h"]
[369.749274, "o", "\u001b[?25l#include \"lexer.h\" \r\n \b\u001b[?25h"]
[369.83292, "o", "\u001b[?25l\r\ni\b\u001b[?25h"]
[369.916116, "o", "\u001b[?25lint main(int argc, char** argv) { \r\n \b\u001b[?25h"]
[369.999506, "o", "\u001b[?25l\r\n \b\u001b[?25h"]
[370.082925, "o", "\u001b[?25l    { \r\n \b\u001b[?25h"]
[370.166392, "o", "\u001b[?25l        Lexer lexer = {0}; \r\n \b\u001b[?25h"]
[370.249547, "o", "\u001b[?25l        Lexer_Init(lexer); \r\n \b\u001b[?25h"]
[370.420088, "o", "\u001b[?25l        Lexer_SetSource(\";\"); \r\n \b\u001b[?25h"]
[370.772082, "o", "\u001b[?25l        Token tok = \u001b[1C\u001b[48;5;242mexer_NextToken(&lexer); \r\n\u001b[?25h"]
[371.108003, "o", "\u001b[?25l\u001b[35;2H       Token tok = \u001b[m\u001b[1Cexer_NextToken(&lexer); \r\u001b[?25h"]
[371.332216, "o", "\u001b[?25l        Token tok = \u001b[1C\u001b[48;5;242mexer_NextToken(&lexer);\u001b[?25h"]
[371.804045, "o", "\u001b[?25l\u001b[m\b;\b\u001b[?25h"]
[372.02046, "o", "\u001b[?25l\b\u001b[46m)\b\u001b[?25h"]
[372.292328, "o", "\u001b[?25l\u001b[m\u001b[35;21H;                       \u001b[48;1H\u001b[K\u001b[35;21H\u001b[?25h"]
[372.420071, "o", "\u001b[36;21H"]
[373.020023, "o", "\r"]
[373.051781, "o", "\u001b[8C"]
[373.220491, "o", "\u001b[?25lassert\u001b[46m(\u001b[16C)\u001b[36;15H\u001b[?25h"]
[373.78912, "o", "\u001b[?25l\u001b[m(Lexer_NextToken\u001b[46m(\u001b[m&lexer\u001b[46m)\u001b[m== TOK_SEMICOLON);\u001b[36;38H\u001b[?25h"]
[374.100237, "o", "\u001b[?25l\u001b[36;31H(&lexer)\u001b[35;21H\u001b[?25h"]
[374.436469, "o", "\u001b[?25l\r        assert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);                                       \r\n    }                                                                                          \r\n                                                                                               \r\n    printf(\"all test passed\");                                                                 \r\n    return 0;                                                                                  \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                         "]
[374.436702, "o", "                                                     \u001b[m\r\n                                                                                               \r\u001b[94m~                                                                                              \u001b[35;9H\u001b[?25h"]
[375.188391, "o", "\u001b[?25l\u001b[m\r\n                                                                                               \r\n    }                                                                                          \r\n                                                                                               \r\n    printf(\"all test passed\");                                                                 \r\n    return 0;                                                                                  \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                     "]
[375.188612, "o", "                                                         \u001b[m\u001b[36;9Hassert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);\u001b[36;9H\u001b[?25h"]
[375.883719, "o", "\u001b[47C"]
[376.204505, "o", "\u001b[?25l\u001b[36;15H\u001b[46m(\u001b[39C)\b\u001b[?25h"]
[376.348243, "o", "\u001b[?25l\u001b[m\u001b[36;15H(\u001b[39C)\u001b[36;42H\u001b[?25h"]
[376.717246, "o", "\u001b[?25l\u001b[36;15H\u001b[46m(\u001b[26C)\u001b[m;             \u001b[36;42H\u001b[?25h"]
[376.804508, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[36;42H\u001b[?25h"]
[377.029074, "o", "\u001b[?25l\u001b[mT\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[377.069139, "o", "\u001b[?25lO\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[377.181206, "o", "\u001b[?25lK\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[377.461265, "o", "\u001b[?25l_\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[377.589212, "o", "\u001b[?25lE\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[377.700779, "o", "\u001b[?25lO\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[377.77325, "o", "\u001b[?25lF\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[378.681075, "o", "\u001b[48;1H\u001b[K\u001b[36;48H"]
[378.771866, "o", "\u001b[?25l"]
[378.772344, "o", "\u001b[36;15H(\u001b[33C)\b\b\u001b[?25h"]
[379.020375, "o", "\u001b[?25l\r\n                                                                                               \r\n    }                                                                                          \r\n                                                                                               \r\n    printf(\"all test passed\");                                                                 \r\n    return 0;                                                                                  \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \u001b[m\u001b[37;9Hassert(Lexer_NextToken(&lexer)== "]
[379.020446, "o", "TOK_EOF);\u001b[37;9H\u001b[?25h"]
[379.57204, "o", "\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[379.755977, "o", "w"]
[379.82826, "o", "\r"]
[379.828607, "o", "\u001b[?25l\"src/lexer_test.c\""]
[379.848002, "o", " 18L, 397B written"]
[379.848585, "o", "\u001b[47;18H\u001b[1m\u001b[7m    \u001b[37;9H\u001b[?25h"]
[380.524355, "o", "\u001b[41C"]
[380.756208, "o", "\u001b[36;50H"]
[381.132604, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[48;13H\u001b[K\u001b[36;51H\u001b[?25h"]
[381.276559, "o", "\u001b[?25l\u001b[47;18H\u001b[1m\u001b[7m[+]\u001b[36;52H\u001b[?25h"]
[381.43642, "o", "\u001b[?25l\u001b[m/\u001b[?25h"]
[381.588525, "o", "\u001b[?25l/\u001b[?25h"]
[381.740946, "o", "\u001b[?25l \u001b[?25h"]
[381.916601, "o", "\u001b[?25lr\u001b[?25h"]
[382.004481, "o", "\u001b[?25le\u001b[?25h"]
[382.092518, "o", "\u001b[?25la\u001b[?25h"]
[382.832343, "o", "\u001b[?25lc\u001b[?25h"]
[382.916656, "o", "\u001b[?25lh\u001b[?25h"]
[383.092609, "o", "\u001b[?25l \u001b[?25h"]
[383.164636, "o", "\u001b[?25lt\u001b[?25h"]
[383.260542, "o", "\u001b[?25lh\u001b[?25h"]
[383.380627, "o", "\u001b[?25le\u001b[?25h"]
[383.47636, "o", "\u001b[?25l \u001b[?25h"]
[383.612668, "o", "\u001b[?25le\u001b[?25h"]
[383.7246, "o", "\u001b[?25ln\u001b[?25h"]
[383.844442, "o", "\u001b[?25ld\u001b[?25h"]
[384.144371, "o", "\u001b[48;1H\u001b[K\u001b[36;67H"]
[384.212831, "o", "\u001b[?25l"]
[384.21376, "o", "\u001b[?25h\u001b[37;50H"]
[384.524339, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[37;51H\u001b[?25h"]
[385.036513, "o", "\u001b[?25l\u001b[m \u001b[?25h"]
[385.380752, "o", "\u001b[?25l/\u001b[?25h"]
[385.532755, "o", "\u001b[?25l/\u001b[?25h"]
[385.620514, "o", "\u001b[?25l \u001b[?25h"]
[386.284571, "o", "\u001b[?25ln\u001b[?25h"]
[386.348155, "o", "\u001b[?25lo\u001b[?25h"]
[386.724679, "o", "\u001b[?25l \u001b[?25h"]
[387.604768, "o", "\u001b[?25lm\u001b[?25h"]
[387.668584, "o", "\u001b[?25lo\u001b[?25h"]
[387.732615, "o", "\u001b[?25lr\u001b[?25h"]
[387.796672, "o", "\u001b[?25le\u001b[?25h"]
[387.964911, "o", "\u001b[?25l \u001b[?25h"]
[388.532679, "o", "\u001b[?25ll\u001b[?25h"]
[388.596814, "o", "\u001b[?25le\u001b[?25h"]
[388.884838, "o", "\u001b[?25lx\u001b[?25h"]
[389.332603, "o", "\u001b[?25li\u001b[?25h"]
[389.444805, "o", "\u001b[?25ln\u001b[?25h"]
[389.484413, "o", "\u001b[?25lg\u001b[?25h"]
[391.317537, "o", "\u001b[48;1H\u001b[K\u001b[37;68H"]
[391.387996, "o", "\u001b[?25l"]
[391.388611, "o", "\u001b[?25h\u001b[36;67H"]
[391.59646, "o", "\u001b[35;56H"]
[392.300456, "o", "\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[392.532198, "o", "w"]
[392.596457, "o", "\r"]
[392.596843, "o", "\u001b[?25l\"src/lexer_test.c\""]
[392.618824, "o", " 18L, 432B written"]
[392.619459, "o", "\u001b[47;18H\u001b[1m\u001b[7m    \u001b[35;56H\u001b[?25h"]
[395.676368, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[396.004189, "o", "!"]
[397.556365, "o", "\u001b[?25l\u001b[48;1H\u001b[K"]
[397.556649, "o", "\u001b[35;56H\u001b[?25h\u001b[34;29H"]
[398.269326, "o", "\u001b[?25l\u001b[24;1H\u001b[1m\u001b[7msrc/lexer.c                                                                                    \u001b[m\u001b[47;1H\u001b[7msrc/lexer_test.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                \u001b[10;17H\u001b[?25h"]
[399.23642, "o", "\u001b[?25l\u001b[48;1H\u001b[m:\u001b[?25h"]
[399.556402, "o", "!"]
[399.989036, "o", "\u001b[?25l\u001b[?25h"]
[401.108514, "o", "m"]
[401.188226, "o", "a"]
[401.276488, "o", "k"]
[401.380519, "o", "e"]
[401.460498, "o", " "]
[401.628222, "o", "t"]
[401.692346, "o", "e"]
[401.884535, "o", "s"]
[401.9962, "o", "t"]
[402.501453, "o", "\r"]
[402.501692, "o", "\u001b[?25l\u001b[11C\u001b[?1004l\u001b[?2004l\u001b[?1l\u001b>\u001b[?25h\u001b[>4;m\u001b[?1049l\r\n"]
[402.530907, "o", "clang    -c -o src/lexer_test.o src/lexer_test.c\r\n"]
[402.64464, "o", "\u001b[1msrc/lexer_test.c:9:20: \u001b[0m\u001b[0;1;31merror: \u001b[0m\u001b[1mpassing 'Lexer' (aka 'struct Lexer') to parameter of incompatible type 'Lexer *' (aka 'struct Lexer *'); take the address with &\u001b[0m\r\n        Lexer_Init(lexer);\r\n\u001b[0;1;32m                   ^~~~~\r\n\u001b[0m\u001b[0;32m                   &\r\n\u001b[0m"]
[402.644922, "o", "\u001b[1msrc/lexer.h:31:24: \u001b[0m\u001b[0;1;30mnote: \u001b[0mpassing argument to parameter 'lexer' here\u001b[0m\r\nvoid Lexer_Init(Lexer *lexer);\r\n\u001b[0;1;32m                       ^\r\n\u001b[0m"]
[402.645999, "o", "\u001b[1msrc/lexer_test.c:10:28: \u001b[0m\u001b[0;1;31merror: \u001b[0m\u001b[1mtoo few arguments to function call, expected 2, have 1\u001b[0m\r\n        Lexer_SetSource(\";\");\r\n\u001b[0;1;32m        ~~~~~~~~~~~~~~~    ^\r\n\u001b[0m\u001b[1msrc/lexer.h"]
[402.646037, "o", ":32:6: \u001b[0m\u001b[0;1;30mnote: \u001b[0m'Lexer_SetSource' declared here\u001b[0m\r\nvoid Lexer_SetSource(Lexer *lexer, const char* s);\r\n\u001b[0;1;32m     ^\r\n\u001b[0m"]
[402.646963, "o", "2 errors generated.\r\n"]
[402.64952, "o", "make: *** [src/lexer_test.o] Error 1\r\n"]
[402.66044, "o", "\r\nshell returned 2\r\n"]
[402.660624, "o", "\r\nPress ENTER or type command to continue"]
[405.540968, "o", "\u001b[?1049h\u001b[>4;2m\u001b[?1h\u001b=\u001b[?2004h\u001b[?1004h"]
[405.541647, "o", "\u001b[27m\u001b[29m\u001b[m\u001b[H\u001b[2J\u001b[?25l\u001b[1;1H\u001b[93m  9 \u001b[mToken Lexer_NextOp(Lexer *lexer) {\u001b[57C\u001b[7m|\u001b[m\r\n\u001b[93m  8 \u001b[m    char c = Lexer_GetChar(lexer, 0);\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[m    switch (c) {\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m\u001b[8Ccase ';':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m\u001b[12Clexer->column++;\u001b[63C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[12Clexer->current++;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[12Creturn TOK_SEMICOLON;\u001b[58C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8Cdefault:\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m  0 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m}\u001b[90C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[mToken Lexer_NextToken(Lexer *lexer) {\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m    char c = Lexer_GetChar(lexer, 0);\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m    switch (c) {\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[m\u001b[8Ccase '\\0':\u001b[73C\u001b[7m|\u001b[m\r\n\u001b[93m  8 \u001b[m\u001b[12Creturn TOK_EOF;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m  9 \u001b[m\u001b[8Ccase ';':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m 10 \u001b[m\u001b[12Creturn Lexer_NextOp(lexer);\u001b[52C\u001b[7m|\u001b[m\r\n\u001b[93m 11 \u001b[m\u001b[8Cdefault:\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93"]
[405.541893, "o", "m 12 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m 13 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[1m\u001b[7msrc/lexer.c                                                                                    \u001b[m\u001b[7m|\u001b[m\r\n#include <stdio.h>\u001b[77C\u001b[7m|\u001b[m\r\n#include <assert.h>\u001b[76C\u001b[7m|\u001b[m\r\n#include \"lexer.h\"\u001b[77C\u001b[7m|\u001b[28;96H|\u001b[m\r\nint main(int argc, char** argv) {\u001b[62C\u001b[7m|\u001b[30;96H|\u001b[m\r\n    {\u001b[90C\u001b[7m|\u001b[m\u001b[32;9HLexer lexer = {0};\u001b[69C\u001b[7m|\u001b[m\u001b[33;9HLexer_Init(lexer);\u001b[69C\u001b[7m|\u001b[m\u001b[34;9HLexer_SetSource(\";\");\u001b[66C\u001b[7m|\u001b[m\u001b[35;9Hassert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);\u001b[39C\u001b[7m|\u001b[m\u001b[36;9Hassert(Lexer_NextToken(&lexer)== TOK_EOF); // reach the end\u001b[28C\u001b[7m|\u001b[m\u001b[37;9Hassert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing\u001b[27C\u001b[7m|\u001b[m\r\n    }\u001b[90C\u001b[7m|\u001b[39;96H|\u001b[m\r\n    printf(\"all test passed\");\u001b[65C\u001b[7m|\u001b[m\r\n    return 0;\u001b[82C\u001b[7m|\u001b[m\r\n}\u001b[94C\u001b[7m|\u001b[43;96H|\u001b[44;96H|\u001b[45;96H|\u001b[46;96H|\u001b[m\u001b[43;1H\u001b[94m~                                                                                              \r\n~            "]
[405.542071, "o", "                                                                                  \r\n~                                                                                              \r\n~                                                                                              \u001b[m\r\n\u001b[7msrc/lexer_test.c                                                                                \u001b[m\u001b[1;97HCC=clang\u001b[3;97Hsrc/lexer_test: src/lexer.o src/lexer_test.o\u001b[5;97Htest: src/lexer_test\u001b[6;101H./src/lexer_test\u001b[7;97H\u001b[94m~                                                                                              \u001b[8;97H~                                                                                              \u001b[9;97H~                                                                                              \u001b[10;97H~                                                                                              \u001b[11;97H~                                                                                              \u001b[12;9"]
[405.542251, "o", "7H~                                                                                              \u001b[13;97H~                                                                                              \u001b[14;97H~                                                                                              \u001b[15;97H~                                                                                              \u001b[16;97H~                                                                                              \u001b[17;97H~                                                                                              \u001b[18;97H~                                                                                              \u001b[19;97H~                                                                                              \u001b[20;97H~                                                                                              \u001b[21;97H~                                                                                             "]
[405.54246, "o", " \u001b[22;97H~                                                                                              \u001b[23;97H~                                                                                              \u001b[m\u001b[24;97H\u001b[7mMakefile                                                                                       \u001b[m\u001b[25;101HTOK_EOF,\u001b[26;101HTOK_SEMICOLON,\u001b[27;97H} Token;\u001b[29;97H// The state of the lexer\u001b[30;97Htypedef struct Lexer {\u001b[31;101H// the source input\u001b[32;101Hconst char* source;\u001b[33;101H// the current parsed input\u001b[34;101Hconst char* current;\u001b[35;101H// the lexer error\u001b[36;101HLexerError error;\u001b[37;101H// the current parsed line\u001b[38;101Hsize_t line;\u001b[39;101H// the current parsed column\u001b[40;101Hsize_t column;\u001b[41;97H} Lexer;\u001b[43;97Hvoid Lexer_Init(Lexer *lexer);\u001b[44;97Hvoid Lexer_SetSource(Lexer *lexer, const char* s);\u001b[45;97HToken Lexer_NextToken(Lexer *lexer);\u001b[47;97H\u001b[7msrc/lexer.h                                                                                    \u001b[10;17H\u001b[?25h"]
[406.133179, "o", "\u001b[?25l\u001b[m\u001b[1;3H\u001b[93m8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\r\n 14\u001b[9;17H\u001b[?25h"]
[407.077476, "o", "\u001b[m\u001b[24;1H\u001b[7msrc/lexer.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                    \u001b[m\u001b[47;1H\u001b[1m\u001b[7msrc/lexer_test.c                                                                                \u001b[34;29H"]
[407.484803, "o", "\u001b[33;26H"]
[407.861261, "o", "\u001b[?25l\u001b[m\u001b[33;19H\u001b[46m(\u001b[mlexer\u001b[46m)\b\u001b[?25h"]
[408.020714, "o", "\u001b[?25l\u001b[m\b\b\b\b\b\b(lexer)\b\b\b\b\b\b\u001b[?25h"]
[408.269458, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[33;19H\u001b[46m(\u001b[mlexer\u001b[46m)\b\b\b\b\b\b\u001b[?25h"]
[408.533, "o", "\u001b[?25l\u001b[m\b(&lexer);\u001b[47;18H\u001b[1m\u001b[7m[+]\u001b[33;21H\u001b[?25h"]
[408.832325, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[33;20H"]
[409.052606, "o", "\u001b[?25l"]
[409.05302, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[409.244663, "o", "w"]
[409.308826, "o", "\r"]
[409.309192, "o", "\u001b[?25l\"src/lexer_test.c\""]
[409.329326, "o", " 18L, 433B written"]
[409.32984, "o", "\u001b[47;18H\u001b[1m\u001b[7m    \u001b[33;20H\u001b[?25h"]
[409.556496, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[409.836597, "o", "!"]
[410.245165, "o", "\u001b[?25lmake test\u001b[?25h"]
[410.372824, "o", "\r\u001b[?25l\u001b[11C\u001b[?1004l\u001b[?2004l\u001b[?1l\u001b>\u001b[?25h\u001b[>4;m\u001b[?1049l\r\n"]
[410.399826, "o", "clang    -c -o src/lexer_test.o src/lexer_test.c\r\n"]
[410.478463, "o", "\u001b[1msrc/lexer_test.c:10:28: \u001b[0m\u001b[0;1;31merror: \u001b[0m\u001b[1mtoo few arguments to function call, expected 2, have 1\u001b[0m\r\n        Lexer_SetSource(\";\");\r\n\u001b[0;1;32m        ~~~~~~~~~~~~~~~    ^\r\n\u001b[0m"]
[410.478522, "o", "\u001b[1msrc/lexer.h:32:6: \u001b[0m\u001b[0;1;30mnote: \u001b[0m'Lexer_SetSource' declared here\u001b[0m\r\nvoid Lexer_SetSource(Lexer *lexer, const char* s);\r\n\u001b[0;1;32m     ^\r\n\u001b[0m"]
[410.479386, "o", "1 error generated.\r\n"]
[410.482529, "o", "make: *** [src/lexer_test.o] Error 1\r\n"]
[410.489857, "o", "\r\nshell returned 2\r\n"]
[410.49007, "o", "\r\nPress ENTER or type command to continue"]
[412.861223, "o", "\u001b[?1049h\u001b[>4;2m\u001b[?1h\u001b=\u001b[?2004h\u001b[?1004h"]
[412.86184, "o", "\u001b[27m\u001b[29m\u001b[m\u001b[H\u001b[2J\u001b[?25l\u001b[1;1H\u001b[93m  8 \u001b[mToken Lexer_NextOp(Lexer *lexer) {\u001b[57C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[m    char c = Lexer_GetChar(lexer, 0);\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m    switch (c) {\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m\u001b[8Ccase ';':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[12Clexer->column++;\u001b[63C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[12Clexer->current++;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[12Creturn TOK_SEMICOLON;\u001b[58C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[8Cdefault:\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m  0 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m}\u001b[90C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[mToken Lexer_NextToken(Lexer *lexer) {\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m    char c = Lexer_GetChar(lexer, 0);\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[m    switch (c) {\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m  8 \u001b[m\u001b[8Ccase '\\0':\u001b[73C\u001b[7m|\u001b[m\r\n\u001b[93m  9 \u001b[m\u001b[12Creturn TOK_EOF;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m 10 \u001b[m\u001b[8Ccase ';':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m 11 \u001b[m\u001b[12Creturn Lexer_NextOp(lexer);\u001b[52C\u001b[7m|\u001b[m\r\n\u001b[93m 12 \u001b[m\u001b[8Cdefault:\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93"]
[412.862078, "o", "m 13 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m 14 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\r\nsrc/lexer.c                                                                                    |\u001b[m\r\n#include <stdio.h>\u001b[77C\u001b[7m|\u001b[m\r\n#include <assert.h>\u001b[76C\u001b[7m|\u001b[m\r\n#include \"lexer.h\"\u001b[77C\u001b[7m|\u001b[28;96H|\u001b[m\r\nint main(int argc, char** argv) {\u001b[62C\u001b[7m|\u001b[30;96H|\u001b[m\r\n    {\u001b[90C\u001b[7m|\u001b[m\u001b[32;9HLexer lexer = {0};\u001b[69C\u001b[7m|\u001b[m\u001b[33;9HLexer_Init(&lexer);\u001b[68C\u001b[7m|\u001b[m\u001b[34;9HLexer_SetSource(\";\");\u001b[66C\u001b[7m|\u001b[m\u001b[35;9Hassert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);\u001b[39C\u001b[7m|\u001b[m\u001b[36;9Hassert(Lexer_NextToken(&lexer)== TOK_EOF); // reach the end\u001b[28C\u001b[7m|\u001b[m\u001b[37;9Hassert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing\u001b[27C\u001b[7m|\u001b[m\r\n    }\u001b[90C\u001b[7m|\u001b[39;96H|\u001b[m\r\n    printf(\"all test passed\");\u001b[65C\u001b[7m|\u001b[m\r\n    return 0;\u001b[82C\u001b[7m|\u001b[m\r\n}\u001b[94C\u001b[7m|\u001b[43;96H|\u001b[44;96H|\u001b[45;96H|\u001b[46;96H|\u001b[m\u001b[43;1H\u001b[94m~                                                                                              \r\n~                              "]
[412.862265, "o", "                                                                \r\n~                                                                                              \r\n~                                                                                              \u001b[m\r\n\u001b[1m\u001b[7msrc/lexer_test.c                                                                                \u001b[m\u001b[1;97HCC=clang\u001b[3;97Hsrc/lexer_test: src/lexer.o src/lexer_test.o\u001b[5;97Htest: src/lexer_test\u001b[6;101H./src/lexer_test\u001b[7;97H\u001b[94m~                                                                                              \u001b[8;97H~                                                                                              \u001b[9;97H~                                                                                              \u001b[10;97H~                                                                                              \u001b[11;97H~                                                                                              \u001b[12;97H~           "]
[412.86245, "o", "                                                                                   \u001b[13;97H~                                                                                              \u001b[14;97H~                                                                                              \u001b[15;97H~                                                                                              \u001b[16;97H~                                                                                              \u001b[17;97H~                                                                                              \u001b[18;97H~                                                                                              \u001b[19;97H~                                                                                              \u001b[20;97H~                                                                                              \u001b[21;97H~                                                                                              "]
[412.8626, "o", "\u001b[22;97H~                                                                                              \u001b[23;97H~                                                                                              \u001b[m\u001b[24;97H\u001b[7mMakefile                                                                                       \u001b[m\u001b[25;101HTOK_EOF,\u001b[26;101HTOK_SEMICOLON,\u001b[27;97H} Token;\u001b[29;97H// The state of the lexer\u001b[30;97Htypedef struct Lexer {\u001b[31;101H// the source input\u001b[32;101Hconst char* source;\u001b[33;101H// the current parsed input\u001b[34;101Hconst char* current;\u001b[35;101H// the lexer error\u001b[36;101HLexerError error;\u001b[37;101H// the current parsed line\u001b[38;101Hsize_t line;\u001b[39;101H// the current parsed column\u001b[40;101Hsize_t column;\u001b[41;97H} Lexer;\u001b[43;97Hvoid Lexer_Init(Lexer *lexer);\u001b[44;97Hvoid Lexer_SetSource(Lexer *lexer, const char* s);\u001b[45;97HToken Lexer_NextToken(Lexer *lexer);\u001b[47;97H\u001b[7msrc/lexer.h                                                                                    \u001b[33;20H\u001b[?25h"]
[413.541187, "o", "\u001b[34;20H"]
[414.204918, "o", "\u001b[?25l\u001b[m\u001b[48;1H?\\<Lexer_SetSource\\>\r\u001b[38;5;224msearch hit TOP, continuing at BOTTOM"]
[414.205179, "o", "\u001b[34;9H\u001b[?25h"]
[416.669381, "o", "\u001b[?25l\u001b[m\u001b[15C\u001b[46m(\u001b[m\";\"\u001b[46m)\b\b\b\b\b\u001b[?25h"]
[416.853124, "o", "\u001b[?25l\u001b[m(\";\")\u001b[35;9H\u001b[?25h"]
[417.557514, "o", "\u001b[?25l\u001b[34;24H\u001b[46m(\u001b[m\";\"\u001b[46m)\b\b\b\b\b\u001b[?25h"]
[417.781238, "o", "\u001b[?25l\u001b[m(\";\")\b\b\b\b\b\b\u001b[?25h"]
[418.261411, "o", "\u001b[?25le\u001b[46m(\u001b[m\";\"\u001b[46m)\b\b\b\b\b\u001b[?25h"]
[418.461237, "o", "\u001b[?25l\u001b[m(\";\")\b\b\b\b\u001b[?25h"]
[418.701705, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[48;13H\u001b[K\u001b[34;24H\u001b[46m(\u001b[m\";\"\u001b[46m)\b\b\b\b\u001b[?25h"]
[419.053416, "o", "\u001b[?25l\u001b[m\b(&\";\");\u001b[47;18H\u001b[1m\u001b[7m[+]\u001b[34;26H\u001b[?25h"]
[419.325384, "o", "\u001b[?25l\u001b[ml\";\");\b\b\b\b\b\u001b[?25h"]
[419.365412, "o", "\u001b[?25le\";\");\b\b\b\b\b\u001b[?25h"]
[419.557395, "o", "\u001b[?25lx\";\");\b\b\b\b\b\u001b[?25h"]
[419.725317, "o", "\u001b[?25le\";\");\b\b\b\b\b\u001b[?25h"]
[419.813334, "o", "\u001b[?25lr\";\");\b\b\b\b\b\u001b[?25h"]
[419.917361, "o", "\u001b[?25l,\";\");\b\b\b\b\b\u001b[?25h"]
[420.053321, "o", "\u001b[?25l \";\");\b\b\b\b\b\u001b[?25h"]
[420.219555, "o", "\u001b[48;1H\u001b[K\u001b[34;32H"]
[420.476862, "o", "\u001b[?25l"]
[420.477271, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[420.652946, "o", "w"]
[420.765273, "o", "\r"]
[420.76562, "o", "\u001b[?25l\"src/lexer_test.c\""]
[420.786005, "o", " 18L, 441B written"]
[420.786453, "o", "\u001b[47;18H\u001b[1m\u001b[7m    \u001b[34;32H\u001b[?25h"]
[421.116993, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[421.429158, "o", "!"]
[421.925369, "o", "\u001b[?25lmake test\u001b[?25h"]
[422.109307, "o", "\r\u001b[?25l\u001b[11C\u001b[?1004l\u001b[?2004l\u001b[?1l\u001b>\u001b[?25h\u001b[>4;m\u001b[?1049l"]
[422.109372, "o", "\r\n"]
[422.137002, "o", "clang    -c -o src/lexer_test.o src/lexer_test.c\r\n"]
[422.217006, "o", "clang    -c -o src/lexer.o src/lexer.c\r\n"]
[422.29411, "o", "clang   src/lexer_test.o src/lexer.o   -o src/lexer_test\r\n"]
[422.391336, "o", "./src/lexer_test\r\n"]
[422.394635, "o", "all test passed"]
[422.399685, "o", "\r\nPress ENTER or type command to continue"]
[423.541649, "o", "\u001b[?1049h\u001b[>4;2m\u001b[?1h\u001b=\u001b[?2004h\u001b[?1004h"]
[423.54225, "o", "\u001b[27m\u001b[29m\u001b[m\u001b[H\u001b[2J\u001b[?25l\u001b[1;1H\u001b[93m  8 \u001b[mToken Lexer_NextOp(Lexer *lexer) {\u001b[57C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[m    char c = Lexer_GetChar(lexer, 0);\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m    switch (c) {\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m\u001b[8Ccase ';':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[12Clexer->column++;\u001b[63C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[12Clexer->current++;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[12Creturn TOK_SEMICOLON;\u001b[58C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[8Cdefault:\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m  0 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m}\u001b[90C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[mToken Lexer_NextToken(Lexer *lexer) {\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m    char c = Lexer_GetChar(lexer, 0);\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[m    switch (c) {\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m  8 \u001b[m\u001b[8Ccase '\\0':\u001b[73C\u001b[7m|\u001b[m\r\n\u001b[93m  9 \u001b[m\u001b[12Creturn TOK_EOF;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m 10 \u001b[m\u001b[8Ccase ';':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m 11 \u001b[m\u001b[12Creturn Lexer_NextOp(lexer);\u001b[52C\u001b[7m|\u001b[m\r\n\u001b[93m 12 \u001b[m\u001b[8Cdefault:\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93"]
[423.542421, "o", "m 13 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m 14 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\r\nsrc/lexer.c                                                                                    |\u001b[m\r\n#include <stdio.h>\u001b[77C\u001b[7m|\u001b[m\r\n#include <assert.h>\u001b[76C\u001b[7m|\u001b[m\r\n#include \"lexer.h\"\u001b[77C\u001b[7m|\u001b[28;96H|\u001b[m\r\nint main(int argc, char** argv) {\u001b[62C\u001b[7m|\u001b[30;96H|\u001b[m\r\n    {\u001b[90C\u001b[7m|\u001b[m\u001b[32;9HLexer lexer = {0};\u001b[69C\u001b[7m|\u001b[m\u001b[33;9HLexer_Init(&lexer);\u001b[68C\u001b[7m|\u001b[m\u001b[34;9HLexer_SetSource(&lexer, \";\");\u001b[58C\u001b[7m|\u001b[m\u001b[35;9Hassert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);\u001b[39C\u001b[7m|\u001b[m\u001b[36;9Hassert(Lexer_NextToken(&lexer)== TOK_EOF); // reach the end\u001b[28C\u001b[7m|\u001b[m\u001b[37;9Hassert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing\u001b[27C\u001b[7m|\u001b[m\r\n    }\u001b[90C\u001b[7m|\u001b[39;96H|\u001b[m\r\n    printf(\"all test passed\");\u001b[65C\u001b[7m|\u001b[m\r\n    return 0;\u001b[82C\u001b[7m|\u001b[m\r\n}\u001b[94C\u001b[7m|\u001b[43;96H|\u001b[44;96H|\u001b[45;96H|\u001b[46;96H|\u001b[m\u001b[43;1H\u001b[94m~                                                                                              \r\n~                     "]
[423.542582, "o", "                                                                         \r\n~                                                                                              \r\n~                                                                                              \u001b[m\r\n\u001b[1m\u001b[7msrc/lexer_test.c                                                                                \u001b[m\u001b[1;97HCC=clang\u001b[3;97Hsrc/lexer_test: src/lexer.o src/lexer_test.o\u001b[5;97Htest: src/lexer_test\u001b[6;101H./src/lexer_test\u001b[7;97H\u001b[94m~                                                                                              \u001b[8;97H~                                                                                              \u001b[9;97H~                                                                                              \u001b[10;97H~                                                                                              \u001b[11;97H~                                                                                              \u001b[12;97H~  "]
[423.542765, "o", "                                                                                            \u001b[13;97H~                                                                                              \u001b[14;97H~                                                                                              \u001b[15;97H~                                                                                              \u001b[16;97H~                                                                                              \u001b[17;97H~                                                                                              \u001b[18;97H~                                                                                              \u001b[19;97H~                                                                                              \u001b[20;97H~                                                                                              \u001b[21;97H~                                                                                              "]
[423.542925, "o", "\u001b[22;97H~                                                                                              \u001b[23;97H~                                                                                              \u001b[m\u001b[24;97H\u001b[7mMakefile                                                                                       \u001b[m\u001b[25;101HTOK_EOF,\u001b[26;101HTOK_SEMICOLON,\u001b[27;97H} Token;\u001b[29;97H// The state of the lexer\u001b[30;97Htypedef struct Lexer {\u001b[31;101H// the source input\u001b[32;101Hconst char* source;\u001b[33;101H// the current parsed input\u001b[34;101Hconst char* current;\u001b[35;101H// the lexer error\u001b[36;101HLexerError error;\u001b[37;101H// the current parsed line\u001b[38;101Hsize_t line;\u001b[39;101H// the current parsed column\u001b[40;101Hsize_t column;\u001b[41;97H} Lexer;\u001b[43;97Hvoid Lexer_Init(Lexer *lexer);\u001b[44;97Hvoid Lexer_SetSource(Lexer *lexer, const char* s);\u001b[45;97HToken Lexer_NextToken(Lexer *lexer);\u001b[47;97H\u001b[7msrc/lexer.h                                                                                    \u001b[34;32H\u001b[?25h"]
[425.382145, "o", "\u001b[?25l\u001b[m\u001b[24;1H\u001b[1m\u001b[7msrc/lexer.c                                                                                    \u001b[m\u001b[47;1H\u001b[7msrc/lexer_test.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                \u001b[9;17H\u001b[?25h"]
[425.917429, "o", "\u001b[?25l\u001b[m\u001b[1;3H\u001b[93m9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\u001b[10;17H\u001b[?25h"]
[426.419312, "o", "\u001b[?25l\u001b[1;2H10\r\n  9\r\n  8\u001b[m\u001b[16C\u001b[46m{\u001b[m\u001b[4;3H\u001b[93m7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[5C\u001b[46m}\u001b[m\u001b[12;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\u001b[11;9H\u001b[?25h"]
[426.502686, "o", "\u001b[?25l\u001b[1;3H1\u001b[m\u001b[34C\u001b[46m{\u001b[m\u001b[2;2H\u001b[93m10\r\n  9\u001b[m\u001b[16C{\u001b[4;3H\u001b[93m8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[5C}\u001b[12;3H\u001b[93m0\u001b[m\u001b[1C\u001b[46m}\u001b[m\u001b[13;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\u001b[12;5H\u001b[?25h"]
[426.586478, "o", "\u001b[?25l\u001b[1;3H2\u001b[m\u001b[34C{\u001b[2;3H\u001b[93m1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[1C}\u001b[13;3H\u001b[93m0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\u001b[13;5H\u001b[?25h"]
[426.670605, "o", "\u001b[?25l\u001b[1;3H3\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\u001b[14;17H\u001b[?25h"]
[426.754697, "o", "\u001b[?25l\u001b[1;3H4\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\u001b[15;17H\u001b[?25h"]
[426.838928, "o", "\u001b[?25l\u001b[1;3H5\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[16;17H\u001b[?25h"]
[426.92393, "o", "\u001b[?25l\u001b[1;3H6\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\u001b[17;17H\u001b[?25h"]
[427.101473, "o", "\u001b[?25l\u001b[1;3H7\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\u001b[18;17H\u001b[?25h"]
[427.301181, "o", "\u001b[?25l\u001b[1;3H8\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\u001b[19;17H\u001b[?25h"]
[427.693305, "o", "\u001b[m ';'"]
[428.101497, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[19;22H\u001b[?25h"]
[428.589669, "o", "\u001b[?25l\u001b[m\u001b[24;13H\u001b[1m\u001b[7m[+]\u001b[19;23H\u001b[?25h"]
[428.829549, "o", "\u001b[?25l\u001b[mc\u001b[?25h"]
[428.997475, "o", "\u001b[?25la\u001b[?25h"]
[429.045537, "o", "\u001b[?25ls\u001b[?25h"]
[429.093696, "o", "\u001b[?25le\u001b[?25h"]
[429.229547, "o", "\u001b[?25l \u001b[?25h"]
[429.373534, "o", "\u001b[?25l'\u001b[?25h"]
[431.502469, "o", "\u001b[?25l{\u001b[?25h"]
[432.165624, "o", "\u001b[?25l'\u001b[?25h"]
[433.157709, "o", "\u001b[?25l:\u001b[?25h"]
[433.293627, "o", "\u001b[?25l \u001b[?25h"]
[433.517528, "o", "\u001b[?25lc\u001b[?25h"]
[433.669336, "o", "\u001b[?25la\u001b[?25h"]
[433.733632, "o", "\u001b[?25ls\u001b[?25h"]
[433.781752, "o", "\u001b[?25le\u001b[?25h"]
[433.997653, "o", "\u001b[?25l \u001b[?25h"]
[434.477598, "o", "\u001b[?25l'\u001b[?25h"]
[435.254612, "o", "\u001b[?25l(\u001b[?25h"]
[435.565635, "o", "\u001b[?25l'\u001b[?25h"]
[436.15776, "o", "\u001b[?25l:\u001b[?25h"]
[436.445656, "o", "\u001b[?25l \u001b[?25h"]
[436.717758, "o", "\u001b[?25lc\u001b[?25h"]
[436.861685, "o", "\u001b[?25la\u001b[?25h"]
[436.933795, "o", "\u001b[?25ls\u001b[?25h"]
[436.96479, "o", "\u001b[?25le\u001b[?25h"]
[437.077694, "o", "\u001b[?25l \u001b[?25h"]
[437.333654, "o", "\u001b[?25l'\u001b[?25h"]
[437.886568, "o", "\u001b[?25l[\u001b[?25h"]
[438.221807, "o", "\u001b[?25l'\u001b[?25h"]
[438.605805, "o", "\u001b[?25l:\u001b[?25h"]
[438.941994, "o", "\u001b[?25l\u001b[1;3H\u001b[93m9\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\u001b[m\r\n\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m            return Lexer_NextOp(lexer);                                                    \r\n\u001b[93m  2 \u001b[m        default:                                                                           \r\n\u001b[93m  3 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \u001b[19;3H\u001b[93m1\r\n  0 \u001b[8C\u001b[?25h"]
[439.453725, "o", "\u001b[?25l\u001b[mc\u001b[?25h"]
[439.605568, "o", "\u001b[?25la\u001b[?25h"]
[439.661717, "o", "\u001b[?25ls\u001b[?25h"]
[439.669463, "o", "\u001b[?25le\u001b[?25h"]
[439.805673, "o", "\u001b[?25l \u001b[?25h"]
[439.973645, "o", "\u001b[?25l'\u001b[?25h"]
[440.318336, "o", "\u001b[?25l\u001b[19;29H\u001b[46m{\u001b[20;19H}\u001b[?25h"]
[440.669737, "o", "\u001b[?25l\u001b[m\u001b[19;29H{\u001b[20;19H}'\u001b[?25h"]
[441.12581, "o", "\u001b[?25l:\u001b[?25h"]
[441.253811, "o", "\u001b[?25l \u001b[?25h"]
[441.469879, "o", "\u001b[?25lc\u001b[?25h"]
[441.605858, "o", "\u001b[?25la\u001b[?25h"]
[441.677795, "o", "\u001b[?25ls\u001b[?25h"]
[441.693755, "o", "\u001b[?25le\u001b[?25h"]
[441.861747, "o", "\u001b[?25l \u001b[?25h"]
[442.205829, "o", "\u001b[?25l'\u001b[?25h"]
[443.461561, "o", "\u001b[?25l_\u001b[?25h"]
[444.006213, "o", "\u001b[?25l\b \b\u001b[?25h"]
[444.582569, "o", "\u001b[?25l\u001b[19;39H\u001b[46m(\u001b[20;29H)\u001b[?25h"]
[445.261942, "o", "\u001b[?25l\u001b[m\u001b[19;39H(\u001b[20;29H)'\u001b[?25h"]
[445.814145, "o", "\u001b[?25l:\u001b[?25h"]
[445.933897, "o", "\u001b[?25l \u001b[?25h"]
[446.125929, "o", "\u001b[?25lc\u001b[?25h"]
[446.245955, "o", "\u001b[?25la\u001b[?25h"]
[446.341825, "o", "\u001b[?25ls\u001b[?25h"]
[446.357828, "o", "\u001b[?25le\u001b[?25h"]
[446.493915, "o", "\u001b[?25l \u001b[?25h"]
[447.149898, "o", "\u001b[?25l'\u001b[?25h"]
[448.742832, "o", "\u001b[?25l\u001b[19;49H\u001b[46m[\u001b[20;39H]\u001b[?25h"]
[449.158049, "o", "\u001b[?25l\u001b[m\u001b[19;49H[\u001b[20;39H]'\u001b[?25h"]
[449.902033, "o", "\u001b[?25l:\u001b[?25h"]
[450.02208, "o", "\u001b[?25l \u001b[?25h"]
[450.365902, "o", "\u001b[?25lc\u001b[?25h"]
[450.565174, "o", "\u001b[?25la\u001b[?25h"]
[450.61394, "o", "\u001b[?25ls\u001b[?25h"]
[450.678106, "o", "\u001b[?25le\u001b[?25h"]
[450.854006, "o", "\u001b[?25l \u001b[?25h"]
[451.230399, "o", "\u001b[?25l'\u001b[?25h"]
[451.486069, "o", "\u001b[?25l,\u001b[?25h"]
[451.702072, "o", "\u001b[?25l'\u001b[?25h"]
[452.646122, "o", "\u001b[?25l:\u001b[?25h"]
[453.361458, "o", "\u001b[48;1H\u001b[K\u001b[20;51H"]
[453.525758, "o", "\u001b[?25l"]
[453.526445, "o", "\u001b[?25h\u001b[?25l\u001b[1;2H\u001b[93m20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\u001b[21;43H\u001b[?25h"]
[454.013808, "o", "\r  0 "]
[454.077652, "o", "\u001b[12C"]
[454.245843, "o", "\u001b[7C"]
[455.222038, "o", "\u001b[?25l\u001b[1;2H19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\u001b[20;24H\u001b[?25h"]
[455.459264, "o", "\u001b[?25l\u001b[1;3H8\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\u001b[19;24H\u001b[?25h"]
[455.590079, "o", "\u001b[?25l\u001b[1;3H7\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\u001b[18;24H\u001b[?25h"]
[456.078029, "o", "\u001b[?25l\u001b[1;3H8\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\u001b[19;24H\u001b[?25h"]
[457.301896, "o", "\u001b[?25l\u001b[1;2H 6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  \r\n  2\r\n  3\r\n  4\r\n  5\r\n\r\n  7\r\n  8\r\n  9\r\n 10\r\n 1\r\n 12\r\n 13\r\n 14\r\n 15\r\n 16\u001b[7;24H\u001b[?25h"]
[457.718289, "o", "\u001b[?25l\u001b[1;3H7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\r\n                                                                                               \r\n                                                                                               \r\n\u001b[93m  1 \u001b[m        default:                                                                           \r\n\u001b[93m  2 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m  3 \u001b[m            return TOK_ERR;                                                                \r\n\u001b[93m  4 \u001b[m    }                                                                                      \r\n\u001b[93m  5 \u001b[m}                                                                                          \r\n\u001b[93m  6 \u001b[m                                                                                           \r\n\u001b[93m  7 \u001b[mToken Lexer_NextToken(Lexer *lexer) {                                                      \r\n\u001b[93m  8 \u001b[m    char c = Lexer_GetChar(lexer, 0"]
[457.71852, "o", ");                                                      \r\n\u001b[93m  9 \u001b[m    switch (c) {                                                                           \r\n\u001b[93m 10 \u001b[m        case '\\0':                                                                         \r\n\u001b[93m 11 \u001b[m            return TOK_EOF;                                                                \r\n\u001b[93m 12 \u001b[m        case ';': case '{': case '(': case '[':                                            \r\n\u001b[93m 13 \u001b[m        case '}': case ')': case ']': case ',':                                            \r\n\u001b[93m 14 \u001b[m            return Lexer_NextOp(lexer);                                                    \u001b[8;1H\u001b[93m  0 \u001b[m\u001b[8Ccase ';': case '{': case '(': case '[':\r\n\u001b[93m  1 \u001b[m\u001b[8Ccase '}': case ')': case ']': case ',':\u001b[10;3H\u001b[93m2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\r\n 14\r\n 15\u001b[8;13H\u001b[?25h"]
[458.270114, "o", "\u001b[?25l\u001b[m';': case '{': case '(': case '[':     \u001b[8;13H\u001b[?25h"]
[458.517878, "o", "\u001b[?25l;': case '{': case '(': case '[': \u001b[8;13H\u001b[?25h"]
[458.670062, "o", "\u001b[?25l': case '{': case '(': case '[': \u001b[8;13H\u001b[?25h"]
[458.838227, "o", "\u001b[?25l: case '{': case '(': case '[': \u001b[8;13H\u001b[?25h"]
[459.038198, "o", "\u001b[?25l case '{': case '(': case '[': \u001b[8;13H\u001b[?25h"]
[459.237952, "o", "\u001b[?25lcase '{': case '(': case '[': \u001b[8;13H\u001b[?25h"]
[459.948886, "o", "\u001b[8C"]
[460.485977, "o", ":"]
[460.902211, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[8;22Hcase '(': case '[': \u001b[8;22H\u001b[?25h"]
[460.990766, "o", "\u001b[?25l\u001b[1;3H\u001b[93m8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\u001b[m\r\n\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m        case '}': case ')': case ']': case ',':                                            \r\n\u001b[93m  2 \u001b[m        default:                                                                           \r\n\u001b[93m  3 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m  4 \u001b[m            return TOK_ERR;                                                                \r\n\u001b[93m  5 \u001b[m    }                                                                                      \r\n\u001b[93m  6 \u001b[m}                                                                                          \r\n\u001b[93m  7 \u001b[m                                                                                           \r\n\u001b[93m  8 \u001b[mToken Lexer_NextToken(Lexer *lexer) {                                                      \r\n\u001b[93m  9 \u001b[m    char c = Lexer_G"]
[460.991008, "o", "etChar(lexer, 0);                                                      \r\n\u001b[93m 10 \u001b[m    switch (c) {                                                                           \r\n\u001b[93m 11 \u001b[m        case '\\0':                                                                         \r\n\u001b[93m 12 \u001b[m            return TOK_EOF;                                                                \r\n\u001b[93m 13 \u001b[m        case ';': case '{': case '(': case '[':                                            \r\n\u001b[93m 14 \u001b[m        case '}': case ')': case ']': case ',':                                            \u001b[8;3H\u001b[93m1\u001b[m\u001b[18C                   \r\n\u001b[93m  0 \u001b[m\u001b[8Ccase '(': case '[':\u001b[9;13H\u001b[?25h"]
[461.446513, "o", "\u001b[?25l    case '(': case '[':\u001b[9;17H\u001b[?25h"]
[461.762998, "o", "\u001b[48;1H\u001b[K\u001b[9;16H"]
[461.781209, "o", "\u001b[?25l"]
[461.78185, "o", "\u001b[?25h\u001b[?25l\u001b[1;3H\u001b[93m7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\r\n 14\r\n 15\u001b[8;16H\u001b[?25h"]
[461.982164, "o", "\u001b[?25l\u001b[1;3H6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\r\n 14\r\n 15\r\n 16\u001b[7;16H\u001b[?25h"]
[462.198208, "o", "\u001b[?25l\u001b[1;3H5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\r\n 14\r\n 15\r\n 16\r\n 17\u001b[6;16H\u001b[?25h"]
[462.406202, "o", "\u001b[?25l\u001b[1;3H4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\r\n 14\r\n 15\r\n 16\r\n 17\r\n 18\u001b[5;16H\u001b[?25h"]
[463.110054, "o", "\u001b[?25l\u001b[1;3H3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\r\n 14\r\n 15\r\n 16\r\n 17\r\n 18\r\n 19\u001b[4;16H\u001b[?25h"]
[463.294526, "o", "\u001b[?25l\u001b[1;3H2\r\n  1\r\n  0\u001b[m\u001b[12C\u001b[46m(\u001b[mc\u001b[46m)\u001b[m\u001b[4;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\r\n 14\r\n 15\r\n 16\r\n 17\r\n 18\r\n 19\r\n 20\u001b[3;16H\u001b[?25h"]
[463.478053, "o", "\u001b[?25l\u001b[1;3H1\r\n  0\r\n  1\u001b[m\u001b[12C(c)\u001b[4;3H\u001b[93m2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\r\n 14\r\n 15\r\n 16\r\n 17\r\n 18\r\n 19\r\n 20\r\n 21\u001b[2;16H\u001b[?25h"]
[464.007755, "o", "\u001b[?25l\u001b[1;2H1\u001b[m\u001b[2C                                  \u001b[2;2H\u001b[93m1\u001b[m\u001b[2Cvoid Lexer_SetSource(Lexer *lexer, const char* s) {\u001b[3;3H\u001b[93m9\u001b[m\u001b[5Clexer->source = s;\u001b[4;3H\u001b[93m8\u001b[m\u001b[5Clexer->current = s;\u001b[5;3H\u001b[93m7\u001b[m\u001b[1C}\u001b[11C                \u001b[6;3H\u001b[93m6\u001b[m\u001b[13C                 \u001b[7;5Hchar Lexer_GetChar(Lexer *lexer, size_t offset) {\u001b[8;3H\u001b[93m4\u001b[m\u001b[5Creturn *(lexer->current+offset);\u001b[9;3H\u001b[93m3\u001b[m\u001b[1C}\u001b[11C                   \u001b[10;3H\u001b[93m2\u001b[m\u001b[9C                                       \u001b[11;3H\u001b[93m1\u001b[m\u001b[1CToken Lexer_NextOp(Lexer *lexer) {\u001b[12;2H\u001b[93m \u001b[m\u001b[6Cchar c = Lexer_GetChar(lexer, 0);   \u001b[13;2H\u001b[93m \u001b[m\u001b[6Cswitch (c) {           \u001b[14;2H\u001b[93m \u001b[m\u001b[6C    case ';':\u001b[15;2H\u001b[93m \u001b[m\u001b[2C \u001b[11Clexer->column++;\u001b[16;2H\u001b[93m \u001b[m\u001b[14Clexer->current++;\u001b[17;2H\u001b[93m \u001b[m\u001b[2C            return TOK_SEMICOLON;    \u001b[18;2H\u001b[93m \u001b[m\u001b[6C    case '{':                    \u001b[19;2H\u001b[93m \u001b[m\u001b[6C        case '(': case '[':\u001b[20;2H\u001b[93m \u001b[m\u001b[16C}': case ')': case ']': case ',':\u001b[21;2H\u001b[93m \u001b[m\u001b[10Cdefault:           \u001b[22;2H\u001b[93m1\u001b[m\u001b[10C"]
[464.007982, "o", "    lexer->error = LEX_EUNKNOWN;       \u001b[23;2H\u001b[93m1\u001b[m\u001b[10C    return TOK_ERR;                    \u001b[12;16H\u001b[?25h"]
[465.390512, "o", "\u001b[?25l\u001b[1;3H\u001b[93m2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[12C\u001b[46m(\u001b[mc\u001b[46m)\u001b[m\u001b[14;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\u001b[13;16H\u001b[?25h"]
[465.878286, "o", "\u001b[?25l\u001b[1;3H3\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[12C(c)\u001b[14;3H\u001b[93m0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\u001b[14;16H\u001b[?25h"]
[466.078184, "o", "\u001b[?25l\u001b[1;3H4\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\u001b[15;16H\u001b[?25h"]
[466.878041, "o", "\u001b[?25l\u001b[m\u001b[48;1H3 lines yanked\u001b[15;16H\u001b[?25h"]
[467.062334, "o", "\u001b[?25l\u001b[1;3H\u001b[93m5\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[16;16H\u001b[?25h"]
[467.2303, "o", "\u001b[?25l\u001b[1;3H6\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\u001b[17;16H\u001b[?25h"]
[467.430343, "o", "\u001b[?25l\u001b[1;3H7\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\u001b[18;16H\u001b[?25h"]
[467.830079, "o", "\u001b[?25l\u001b[m\u001b[48;3Hmore lines\u001b[48;13H\u001b[K"]
[467.830644, "o", "\u001b[1;3H\u001b[93m8\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[13Clexer->column++;   \u001b[20;3H\u001b[93m1\u001b[m\u001b[9C    lexer->current++;                  \u001b[21;3H\u001b[93m2\u001b[m\u001b[9C    return TOK_SEMICOLON;\u001b[22;3H\u001b[93m3\u001b[m\u001b[13Ccase '(': case '[':         \u001b[23;3H\u001b[93m4\u001b[m\u001b[9Ccase '}': case ')': case ']': case ',':\u001b[19;17H\u001b[?25h"]
[468.734027, "o", "\u001b[?25l\u001b[1;3H\u001b[93m9\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\u001b[20;17H\u001b[?25h"]
[468.918148, "o", "\u001b[?25l\u001b[1;2H20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\u001b[21;17H\u001b[?25h"]
[469.24624, "o", "\u001b[7C"]
[469.710413, "o", "\u001b[?25l\u001b[m;             \u001b[21;24H\u001b[?25h"]
[469.774279, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[21;24H\u001b[?25h"]
[470.054426, "o", "\u001b[?25l\u001b[mT;\b\u001b[?25h"]
[470.078083, "o", "\u001b[?25lO;\b\u001b[?25h"]
[470.190516, "o", "\u001b[?25lK;\b\u001b[?25h"]
[470.510268, "o", "\u001b[?25l_;\b\u001b[?25h"]
[471.846528, "o", "\u001b[?25lL;\b\u001b[?25h"]
[472.32656, "o", "\u001b[?25lB;\b\u001b[?25h"]
[472.678567, "o", "\u001b[?25lR;\b\u001b[?25h"]
[474.190518, "o", "\u001b[?25lA;\b\u001b[?25h"]
[474.982688, "o", "\u001b[?25lC;\b\u001b[?25h"]
[475.086544, "o", "\u001b[?25lK;\b\u001b[?25h"]
[475.286544, "o", "\u001b[?25lE;\b\u001b[?25h"]
[475.534401, "o", "\u001b[?25lT;\b\u001b[?25h"]
[489.7741, "o", "\u001b[48;1H\u001b[K\u001b[21;35H"]
[489.910745, "o", "\u001b[?25l"]
[489.911292, "o", "\u001b[?25h\b"]
[490.094358, "o", "\b"]
[490.454927, "o", "\u001b[?25l;   \b\b\b\b\u001b[?25h"]
[490.518574, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[21;33H\u001b[?25h"]
[490.926832, "o", "\u001b[?25l\u001b[mE;\b\u001b[?25h"]
[491.321584, "o", "\u001b[48;1H\u001b[K\u001b[21;33H"]
[492.190337, "o", "\u001b[?25l"]
[492.191616, "o", "\u001b[?25h\u001b[?25l\u001b[1;3H\u001b[93m1\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[29C\u001b[46m[\u001b[m\u001b[23;3H\u001b[93m1\u001b[m\u001b[35C\u001b[46m]\u001b[22;33H\u001b[?25h"]
[492.798732, "o", "\u001b[?25l\u001b[m[\u001b[23;39H]\u001b[22;5H\u001b[?25h"]
[492.902743, "o", "\u001b[12C"]
[493.278378, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[22;17H\u001b[?25h"]
[493.567279, "o", "\u001b[?25l\u001b[m\bcase '(': case '[': \u001b[22;16H\u001b[?25h"]
[493.991146, "o", "\u001b[?25l\bcase '(': case '[': \u001b[22;15H\u001b[?25h"]
[494.183127, "o", "\u001b[?25l\bcase '(': case '[': \u001b[22;14H\u001b[?25h"]
[494.439099, "o", "\u001b[?25l\bcase '(': case '[': \u001b[22;13H\u001b[?25h"]
[494.852425, "o", "\u001b[48;1H\u001b[K\u001b[22;12H"]
[495.04648, "o", "\u001b[?25l"]
[495.046861, "o", "\u001b[?25h"]
[495.622502, "o", "\u0007"]
[496.462468, "o", "\u0007"]
[496.647197, "o", "\u001b[9C"]
[496.894915, "o", ":"]
[497.103266, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[22;22Hcase '[': \u001b[22;22H\u001b[?25h"]
[497.175329, "o", "\u001b[?25l\u001b[1;3H\u001b[93m2\r\n 21\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[18C         \u001b[23;3H\u001b[93m0\u001b[m\u001b[15C[':                              \u001b[23;13H\u001b[?25h"]
[497.41302, "o", "\u001b[48;1H\u001b[K\u001b[23;5H"]
[497.478572, "o", "\u001b[?25l"]
[497.479182, "o", "\u001b[7C\u001b[?25h\u001b[?25l\u001b[1;3H\u001b[93m1\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\u001b[22;12H\u001b[?25h"]
[497.630909, "o", "\u001b[?25l\u001b[1;3H0\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\u001b[21;12H\u001b[?25h"]
[497.783003, "o", "\u001b[?25l\u001b[1;2H19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\u001b[20;12H\u001b[?25h"]
[497.950847, "o", "\u001b[?25l\u001b[1;3H8\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\u001b[19;12H\u001b[?25h"]
[498.054879, "o", "\u001b[m     "]
[498.750527, "o", "\u001b[?25l\u001b[48;1H3 lines yanked\u001b[19;17H\u001b[?25h"]
[498.934969, "o", "\u001b[?25l\u001b[1;3H\u001b[93m9\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\u001b[20;17H\u001b[?25h"]
[499.08692, "o", "\u001b[?25l\u001b[1;2H20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\u001b[21;17H\u001b[?25h"]
[499.25447, "o", "\u001b[?25l\u001b[1;3H1\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\u001b[22;17H\u001b[?25h"]
[499.62249, "o", "\u001b[?25l\u001b[m\u001b[48;3Hmore lines\u001b[48;13H\u001b[K"]
[499.622991, "o", "\u001b[1;3H\u001b[93m2\r\n 21\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[9C    lexer->column++;\u001b[23;17H\u001b[?25h"]
[500.055236, "o", "\u001b[?25l\u001b[1;2H\u001b[93m11\u001b[m\u001b[5Cchar c = Lexer_GetChar(lexer, 0);\u001b[2;2H\u001b[93m10\u001b[m\u001b[1C    switch (c) {                                   \u001b[3;2H\u001b[93m 9\u001b[m\u001b[5C    case ';':     \u001b[4;2H\u001b[93m 8\u001b[m\u001b[5C        lexer->column++;\u001b[5;2H\u001b[93m 7\u001b[m\u001b[1C \u001b[11Clexer->current++;\u001b[6;2H\u001b[93m 6\u001b[m\u001b[13Creturn TOK_SEMICOLON;\u001b[7;2H\u001b[93m 5\u001b[m\u001b[1C        case '{':                                \u001b[8;2H\u001b[93m 4\u001b[m\u001b[5C        lexer->column++;        \u001b[9;2H\u001b[93m 3\u001b[m\u001b[1C \u001b[11Clexer->current++;\u001b[10;2H\u001b[93m 2\u001b[m\u001b[13Creturn TOK_LBRACE;\u001b[11;2H\u001b[93m 1\u001b[m\u001b[1C        case '(':                 \u001b[12;2H\u001b[93m 0\u001b[m\u001b[5C        lexer->column++;         \u001b[13;2H\u001b[93m 1\u001b[m\u001b[5C        lexer->current++;\u001b[14;3H\u001b[93m2\u001b[m\u001b[9C    return TOK_LBRACE;\u001b[15;3H\u001b[93m3\u001b[m\u001b[9Ccase '[':           \u001b[16;3H\u001b[93m4\u001b[m\u001b[9Ccase '}': case ')': case ']': case ',':\u001b[17;3H\u001b[93m5\u001b[m\u001b[9Cdefault:                 \u001b[18;3H\u001b[93m6\u001b[m\u001b[9C    lexer->error = LEX_EUNKNOWN;\u001b[19;3H\u001b[93m7\u001b[m\u001b[13Creturn TOK_ERR; \u001b[20;3H\u001b[93m8\u001b[m\u001b[5C}\u001b[7C                 \u001b[21;3H\u001b[93m9\u001b[m\u001b[1C}\u001b[11C                  \u001b[22;2H"]
[500.055467, "o", "\u001b[93m10\u001b[m\u001b[9C         \u001b[23;2H\u001b[93m11\u001b[m\u001b[1CToken Lexer_NextToken(Lexer *lexer) {\u001b[48;1H\u001b[K\u001b[12;17H\u001b[?25h"]
[500.398895, "o", "\u001b[?25l\u001b[1;3H\u001b[93m2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\u001b[13;17H\u001b[?25h"]
[500.614933, "o", "\u001b[?25l\u001b[1;3H3\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\u001b[14;17H\u001b[?25h"]
[500.758811, "o", "\u001b[7C"]
[501.207085, "o", "\u001b[?25l\u001b[m;          \u001b[14;24H\u001b[?25h"]
[501.286871, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[14;24H\u001b[?25h"]
[501.56711, "o", "\u001b[?25l\u001b[mT;\b\u001b[?25h"]
[501.594277, "o", "\u001b[?25lO;\b\u001b[?25h"]
[501.702815, "o", "\u001b[?25lK;\b\u001b[?25h"]
[501.999228, "o", "\u001b[?25l_;\b\u001b[?25h"]
[502.831345, "o", "\u001b[?25lL;\b\u001b[?25h"]
[503.182809, "o", "\u001b[?25lP;\b\u001b[?25h"]
[503.279133, "o", "\u001b[?25lA;\b\u001b[?25h"]
[503.495132, "o", "\u001b[?25lR;\b\u001b[?25h"]
[503.583145, "o", "\u001b[?25lE;\b\u001b[?25h"]
[503.695133, "o", "\u001b[?25lN;\b\u001b[?25h"]
[504.170804, "o", "\u001b[48;1H\u001b[K\u001b[14;33H"]
[504.246703, "o", "\u001b[?25l"]
[504.247337, "o", "\u001b[?25h\u001b[?25l\u001b[1;3H\u001b[93m4\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\u001b[15;21H\u001b[?25h"]
[505.374915, "o", "\u001b[?25l\u001b[1;3H3\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\u001b[14;33H\u001b[?25h"]
[505.535016, "o", "\u001b[?25l\u001b[1;3H2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\u001b[13;33H\u001b[?25h"]
[505.719092, "o", "\u001b[?25l\u001b[1;3H1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\u001b[12;32H\u001b[?25h"]
[506.7592, "o", "\u001b[?25l\u001b[m\u001b[48;1H3 lines yanked\u001b[12;32H\u001b[?25h"]
[506.975068, "o", "\u001b[?25l\u001b[1;3H\u001b[93m2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\u001b[13;32H\u001b[?25h"]
[507.159045, "o", "\u001b[?25l\u001b[1;3H3\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\u001b[14;32H\u001b[?25h"]
[507.327125, "o", "\u001b[?25l\u001b[1;3H4\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\u001b[15;21H\u001b[?25h"]
[510.670861, "o", "\u001b[?25l\u001b[m\u001b[48;3Hmore lines\u001b[48;13H\u001b[K"]
[510.671413, "o", "\u001b[1;3H\u001b[93m5\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\r\n                                                                                               \r\n                                                                                               \r\n                                                                                               \r\n\u001b[93m  1 \u001b[m        case '}': case ')': case ']': case ',':                                            \r\n\u001b[93m  2 \u001b[m        default:                                                                           \r\n\u001b[93m  3 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m  4 \u001b[m            return TOK_ERR;                                                                \r\n\u001b[93m  5 \u001b[m    }                                                                                      \u001b[16;1H\u001b[93m  0 \u001b[m\u001b[12Clexer->column++;\r\n\u001b[93m  1 \u001b[m\u001b[12Clexer->current++;\r\n\u001b[93m  2 \u001b[m\u001b[12Creturn TOK_LPAREN;\u001b[19;3H\u001b[9"]
[510.671606, "o", "3m3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H3 more lines\u001b[16;17H\u001b[?25h"]
[516.50468, "o", "\u001b[?25l\u001b[1;3H\u001b[93m6\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\u001b[17;17H\u001b[?25h"]
[516.823258, "o", "\u001b[?25l\u001b[1;3H7\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\u001b[18;17H\u001b[?25h"]
[517.223106, "o", "\u001b[7C"]
[517.679475, "o", "\u001b[mT"]
[517.831086, "o", "O"]
[517.991261, "o", "K"]
[518.143327, "o", "_"]
[518.319232, "o", "L"]
[518.583383, "o", "\u001b[?25l;     \b\b\b\b\b\b\u001b[?25h"]
[518.671258, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[18;29H\u001b[?25h"]
[519.215449, "o", "\u001b[?25l\u001b[mB;\b\u001b[?25h"]
[519.439517, "o", "\u001b[?25lR;\b\u001b[?25h"]
[519.559572, "o", "\u001b[?25lA;\b\u001b[?25h"]
[519.9036, "o", "\u001b[?25lC;\b\u001b[?25h"]
[519.96732, "o", "\u001b[?25lK;\b\u001b[?25h"]
[520.103582, "o", "\u001b[?25lE;\b\u001b[?25h"]
[520.231243, "o", "\u001b[?25lT;\b\u001b[?25h"]
[520.967993, "o", "\u001b[48;1H\u001b[K\u001b[18;35H"]
[521.079102, "o", "\u001b[?25l"]
[521.079766, "o", "\u001b[?25h\u001b[?25l\u001b[1;3H\u001b[93m8\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\u001b[19;35H\u001b[?25h"]
[521.415378, "o", "\r  0 "]
[522.671412, "o", "\u001b[16C"]
[523.063306, "o", "\u001b[m:"]
[523.239599, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[19;22Hcase ')': case ']': case ',': \u001b[19;22H\u001b[?25h"]
[523.311701, "o", "\u001b[?25l\u001b[1;3H\u001b[93m9\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\u001b[m\r\n\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m        default:                                                                           \r\n\u001b[93m  2 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m  3 \u001b[m            return TOK_ERR;                                                                \u001b[19;3H\u001b[93m1\u001b[m\u001b[18C                             \r\n\u001b[93m  0 \u001b[m\u001b[8Ccase ')': case ']': case ',':\u001b[20;13H\u001b[?25h"]
[523.563282, "o", "\u001b[48;1H\u001b[K\u001b[20;5H"]
[523.599124, "o", "\u001b[?25l"]
[523.599757, "o", "\u001b[7C\u001b[?25h\u001b[?25l\u001b[1;3H\u001b[93m8\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\u001b[19;12H\u001b[?25h"]
[523.751388, "o", "\u001b[?25l\u001b[1;3H7\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\u001b[18;12H\u001b[?25h"]
[524.199468, "o", "\u001b[m "]
[524.40749, "o", "\u001b[?25l\u001b[1;3H\u001b[93m6\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\u001b[17;13H\u001b[?25h"]
[524.671461, "o", "\u001b[?25l\u001b[1;3H5\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[16;13H\u001b[?25h"]
[524.863359, "o", "\u001b[m    "]
[525.479186, "o", "\u001b[?25l\u001b[48;1H3 lines yanked\u001b[16;17H\u001b[?25h"]
[525.655378, "o", "\u001b[?25l\u001b[1;3H\u001b[93m6\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\u001b[17;17H\u001b[?25h"]
[525.855552, "o", "\u001b[?25l\u001b[1;3H7\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\u001b[18;17H\u001b[?25h"]
[526.055576, "o", "\u001b[?25l\u001b[1;3H8\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\u001b[19;17H\u001b[?25h"]
[526.479278, "o", "\u001b[?25l\u001b[m\u001b[48;3Hmore lines\u001b[48;13H\u001b[K"]
[526.479956, "o", "\u001b[1;3H\u001b[93m9\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[9C    lexer->column++;         \u001b[21;3H\u001b[93m1\u001b[m\u001b[9C    lexer->current++;\u001b[22;3H\u001b[93m2\u001b[m\u001b[13Creturn TOK_LBRACKET;        \u001b[23;3H\u001b[93m3\u001b[m\u001b[9Ccase ')': case ']': case ',':\u001b[20;17H\u001b[?25h"]
[527.95151, "o", "\u001b[?25l\u001b[1;2H\u001b[93m20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\u001b[21;17H\u001b[?25h"]
[528.136012, "o", "\u001b[?25l\u001b[1;3H1\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\u001b[22;17H\u001b[?25h"]
[528.279183, "o", "\u001b[7C"]
[528.959293, "o", "\u001b[?25l\u001b[m;            \u001b[22;24H\u001b[?25h"]
[529.063571, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[22;24H\u001b[?25h"]
[529.311848, "o", "\u001b[?25l\u001b[mT;\b\u001b[?25h"]
[529.367799, "o", "\u001b[?25lO;\b\u001b[?25h"]
[529.527685, "o", "\u001b[?25lK;\b\u001b[?25h"]
[529.823736, "o", "\u001b[?25l_;\b\u001b[?25h"]
[530.199608, "o", "\u001b[?25lR;\b\u001b[?25h"]
[530.519721, "o", "\u001b[?25lB;\b\u001b[?25h"]
[530.751636, "o", "\u001b[?25lR;\b\u001b[?25h"]
[530.887655, "o", "\u001b[?25lA;\b\u001b[?25h"]
[531.199747, "o", "\u001b[?25lC;\b\u001b[?25h"]
[531.439786, "o", "\u001b[?25lE;\b\u001b[?25h"]
[531.777439, "o", "\u001b[48;1H\u001b[K\u001b[22;33H"]
[531.847035, "o", "\u001b[?25l"]
[531.847697, "o", "\u001b[?25h\u001b[?25l\u001b[1;3H\u001b[93m2\r\n 21\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[29C\u001b[?25h"]
[532.551488, "o", "\r  0 "]
[533.087559, "o", "\u001b[16C"]
[533.335621, "o", "\u001b[m:"]
[533.503894, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[23;22Hcase ']': case ',': \u001b[23;22H\u001b[?25h"]
[533.576257, "o", "\u001b[?25l\u001b[1;1H\u001b[93m 21 \u001b[m    switch (c) {                                                                           \r\n\u001b[93m 20 \u001b[m        case ';':                                                                          \r\n\u001b[93m 19 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 18 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 17 \u001b[m            return TOK_SEMICOLON;                                                          \r\n\u001b[93m 16 \u001b[m        case '{':                                                                          \r\n\u001b[93m 15 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 14 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 13 \u001b[m            return TOK_LBRACE;                                                             \r\n\u001b[93m 12 \u001b[m        case '(':                                      "]
[533.576324, "o", "                                    \r\n\u001b[93m 11 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 10 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m  9 \u001b[m            return TOK_LPAREN;                                                             \r\n\u001b[93m  8 \u001b[m        case '[':                                                                          \r\n\u001b[93m  7 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m  6 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m  5 \u001b[m            return TOK_LBRACKET;                                                           \r\n\u001b[93m  4 \u001b[m        case '}':                                                                          \r\n\u001b[93m  3 \u001b[m            lexer->column++;                                                               \r\n"]
[533.576545, "o", "\u001b[93m  2 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m  1 \u001b[m            return TOK_RBRACE;                                                             \r\n\u001b[93m  0 \u001b[m        case ')':case ']': case ',':                                                       \r\n                                                                                               \u001b[1;3H\u001b[93m2\r\n 21\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[18C                   \r\n\u001b[93m  0 \u001b[m\u001b[8Ccase ']': case ',':\u001b[23;13H\u001b[?25h"]
[534.78018, "o", "\u001b[48;1H\u001b[K\u001b[23;5H"]
[535.007374, "o", "\u001b[?25l"]
[535.007761, "o", "\u001b[7C\u001b[?25h"]
[535.8236, "o", "\u001b[9C"]
[536.17564, "o", ":"]
[536.327785, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[23;22Hcase ',': \u001b[23;22H\u001b[?25h"]
[536.43231, "o", "\u001b[?25l\u001b[1;1H\u001b[93m 21 \u001b[m        case ';':                                                                          \r\n\u001b[93m 20 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 19 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 18 \u001b[m            return TOK_SEMICOLON;                                                          \r\n\u001b[93m 17 \u001b[m        case '{':                                                                          \r\n\u001b[93m 16 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 15 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 14 \u001b[m            return TOK_LBRACE;                                                             \r\n\u001b[93m 13 \u001b[m        case '(':                                                                          \r\n\u001b[93m 12 \u001b[m            lexer->column++;                           "]
[536.432381, "o", "                                    \r\n\u001b[93m 11 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 10 \u001b[m            return TOK_LPAREN;                                                             \r\n\u001b[93m  9 \u001b[m        case '[':                                                                          \r\n\u001b[93m  8 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m  7 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m  6 \u001b[m            return TOK_LBRACKET;                                                           \r\n\u001b[93m  5 \u001b[m        case '}':                                                                          \r\n\u001b[93m  4 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m  3 \u001b[m            lexer->current++;                                                              \r\n"]
[536.432676, "o", "\u001b[93m  2 \u001b[m            return TOK_RBRACE;                                                             \r\n\u001b[93m  1 \u001b[m        case ')':                                                                          \r\n\u001b[93m  0 \u001b[m        case ']':case ',':                                                                 \r\n                                                                                               \u001b[1;3H\u001b[93m2\r\n 21\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[18C         \r\n\u001b[93m  0 \u001b[m\u001b[8Ccase ',':\u001b[23;13H\u001b[?25h"]
[536.669896, "o", "\u001b[48;1H\u001b[K\u001b[23;5H"]
[536.911518, "o", "\u001b[?25l"]
[536.91216, "o", "\u001b[7C\u001b[?25h\u001b[?25l\u001b[1;3H\u001b[93m1\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\u001b[22;12H\u001b[?25h"]
[537.079829, "o", "\u001b[?25l\u001b[1;3H0\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\u001b[21;12H\u001b[?25h"]
[537.247649, "o", "\u001b[?25l\u001b[1;2H19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\u001b[20;12H\u001b[?25h"]
[537.415676, "o", "\u001b[?25l\u001b[1;3H8\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\u001b[19;12H\u001b[?25h"]
[537.583628, "o", "\u001b[?25l\u001b[1;3H7\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\u001b[18;12H\u001b[?25h"]
[537.663567, "o", "\u001b[m     "]
[538.335491, "o", "\u001b[?25l\u001b[48;1H3 lines yanked\u001b[18;17H\u001b[?25h"]
[538.503698, "o", "\u001b[?25l\u001b[1;3H\u001b[93m8\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\u001b[19;17H\u001b[?25h"]
[538.65577, "o", "\u001b[?25l\u001b[1;3H9\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\u001b[20;17H\u001b[?25h"]
[538.823782, "o", "\u001b[?25l\u001b[1;2H20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\u001b[21;17H\u001b[?25h"]
[539.25551, "o", "\u001b[?25l\u001b[m\u001b[48;3Hmore lines\u001b[48;13H\u001b[K"]
[539.255988, "o", "\u001b[1;3H\u001b[93m1\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[9C    lexer->column++;\u001b[23;3H\u001b[93m1\u001b[m\u001b[9C    lexer->current++;\u001b[22;17H\u001b[?25h"]
[539.711817, "o", "\u001b[?25l\u001b[1;3H\u001b[93m2\r\n 21\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[13C\u001b[?25h"]
[539.896009, "o", "\u001b[?25l\u001b[m\u001b[1;1H\u001b[93m 21 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 20 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 19 \u001b[m            return TOK_SEMICOLON;                                                          \r\n\u001b[93m 18 \u001b[m        case '{':                                                                          \r\n\u001b[93m 17 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 16 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m 15 \u001b[m            return TOK_LBRACE;                                                             \r\n\u001b[93m 14 \u001b[m        case '(':                                                                          \r\n\u001b[93m 13 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m 12 \u001b[m            lexer->current++;                       "]
[539.896075, "o", "                                       \r\n\u001b[93m 11 \u001b[m            return TOK_LPAREN;                                                             \r\n\u001b[93m 10 \u001b[m        case '[':                                                                          \r\n\u001b[93m  9 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m  8 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m  7 \u001b[m            return TOK_LBRACKET;                                                           \r\n\u001b[93m  6 \u001b[m        case '}':                                                                          \r\n\u001b[93m  5 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m  4 \u001b[m            lexer->current++;                                                              \r\n\u001b[93m  3 \u001b[m            return TOK_RBRACE;                                                             \r\n"]
[539.89631, "o", "\u001b[93m  2 \u001b[m        case ')':                                                                          \r\n\u001b[93m  1 \u001b[m            lexer->column++;                                                               \r\n\u001b[93m  0 \u001b[m            lexer->current++;                                                              \r\n                                                                                               \u001b[1;3H\u001b[93m2\r\n 21\r\n 20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0 \u001b[m\u001b[12Creturn TOK_RBRACE;\u001b[48;1H\u001b[K\u001b[23;17H\u001b[?25h"]
[540.558912, "o", "\u001b[7C"]
[540.815899, "o", "\u001b[?25l;          \u001b[23;24H\u001b[?25h"]
[540.887671, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[23;24H\u001b[?25h"]
[541.120026, "o", "\u001b[?25l\u001b[mT;\b\u001b[?25h"]
[541.145479, "o", "\u001b[?25lO;\b\u001b[?25h"]
[541.25595, "o", "\u001b[?25lK;\b\u001b[?25h"]
[541.512061, "o", "\u001b[?25l_;\b\u001b[?25h"]
[541.696049, "o", "\u001b[?25lR;\b\u001b[?25h"]
[542.527939, "o", "\u001b[?25lP;\b\u001b[?25h"]
[542.60801, "o", "\u001b[?25lA;\b\u001b[?25h"]
[542.824046, "o", "\u001b[?25lR;\b\u001b[?25h"]
[542.912026, "o", "\u001b[?25lE;\b\u001b[?25h"]
[543.039932, "o", "\u001b[?25lN;\b\u001b[?25h"]
[543.282392, "o", "\u001b[48;1H\u001b[K\u001b[23;33H"]
[543.527499, "o", "\u001b[?25l"]
[543.527895, "o", "\u001b[?25h"]
[543.696086, "o", "\u001b[?25l\u001b[1;2H\u001b[93m11\u001b[m\u001b[9Ccase '[':           \u001b[2;2H\u001b[93m10\u001b[m\u001b[21Column++; \u001b[3;2H\u001b[93m 9\u001b[m\u001b[13Clexer->current++;    \u001b[4;2H\u001b[93m 8\u001b[m\u001b[9C    return TOK_LBRACKET;\u001b[5;2H\u001b[93m 7\u001b[m\u001b[9Ccase '}':           \u001b[6;2H\u001b[93m 6\u001b[m\u001b[21Column++; \u001b[7;2H\u001b[93m 5\u001b[m\u001b[13Clexer->current++; \u001b[8;2H\u001b[93m 4\u001b[m\u001b[9C    return TOK_RBRACE;\u001b[9;2H\u001b[93m 3\u001b[m\u001b[9Ccase ')':           \u001b[10;2H\u001b[93m 2\u001b[m\u001b[21Column++; \u001b[11;2H\u001b[93m 1\u001b[m\u001b[13Clexer->current++; \u001b[12;2H\u001b[93m 0\u001b[m\u001b[9C    return TOK_RPAREN;\u001b[13;2H\u001b[93m 1\u001b[m\u001b[9Ccase ']':           \u001b[14;3H\u001b[93m2\u001b[m\u001b[9Ccase ',':            \u001b[15;3H\u001b[93m3\u001b[m\u001b[9Cdefault:                \u001b[16;3H\u001b[93m4\u001b[m\u001b[9C    lexer->error = LEX_EUNKNOWN;\u001b[17;3H\u001b[93m5\u001b[m\u001b[13Creturn TOK_ERR; \u001b[18;3H\u001b[93m6\u001b[m\u001b[5C}\u001b[7C                 \u001b[19;3H\u001b[93m7\u001b[m\u001b[1C}\u001b[11C                  \u001b[20;3H\u001b[93m8\u001b[m\u001b[9C         \u001b[21;3H\u001b[93m9\u001b[m\u001b[1CToken Lexer_NextToken(Lexer *lexer) {\u001b[22;2H\u001b[93m10\u001b[m\u001b[5Cchar c = Lexer_GetChar(lexer, 0);\u001b[23;2H\u001b[93m11\u001b[m\u001b[5Cswitch (c) {              \u001b[12;33H\u001b[?25h"]
[544.024079, "o", "\u001b[?25l\u001b[1;3H\u001b[93m2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\u001b[13;21H\u001b[?25h"]
[544.551634, "o", "\u001b[?25l\u001b[1;3H1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\u001b[12;33H\u001b[?25h"]
[544.71998, "o", "\u001b[?25l\u001b[1;3H0\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\u001b[11;33H\u001b[?25h"]
[544.879877, "o", "\u001b[?25l\u001b[1;2H 9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\u001b[10;32H\u001b[?25h"]
[545.567542, "o", "\u001b[?25l\u001b[m\u001b[48;1H3 lines yanked\u001b[10;32H\u001b[?25h"]
[545.735951, "o", "\u001b[?25l\u001b[1;2H\u001b[93m10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\u001b[11;32H\u001b[?25h"]
[545.895945, "o", "\u001b[?25l\u001b[1;3H1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\u001b[12;32H\u001b[?25h"]
[546.079814, "o", "\u001b[?25l\u001b[1;3H2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\u001b[13;21H\u001b[?25h"]
[546.295704, "o", "\u001b[?25l\u001b[m\u001b[48;3Hmore lines\u001b[48;13H\u001b[K"]
[546.296232, "o", "\u001b[1;3H\u001b[93m3\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\r\n                                                                                               \r\n                                                                                               \r\n                                                                                               \r\n\u001b[93m  1 \u001b[m        case ',':                                                                          \r\n\u001b[93m  2 \u001b[m        default:                                                                           \r\n\u001b[93m  3 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m  4 \u001b[m            return TOK_ERR;                                                                \r\n\u001b[93m  5 \u001b[m    }                                                                                      \r\n\u001b[93m  6 \u001b[m}                                                                                          \r\n\u001b[93m  7 \u001b[m              "]
[546.296299, "o", "                                                                             \u001b[14;1H\u001b[93m  0 \u001b[m\u001b[12Clexer->column++;\r\n\u001b[93m  1 \u001b[m\u001b[12Clexer->current++;\r\n\u001b[93m  2 \u001b[m\u001b[12Creturn TOK_RPAREN;\u001b[17;3H\u001b[93m3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H3 more lines\u001b[14;17H\u001b[?25h"]
[546.615815, "o", "\u001b[?25l\u001b[1;3H\u001b[93m4\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\u001b[15;17H\u001b[?25h"]
[546.864036, "o", "\u001b[?25l\u001b[1;3H5\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[16;17H\u001b[?25h"]
[547.055881, "o", "\u001b[7C"]
[547.352043, "o", "\u001b[?25l\u001b[m;          \u001b[16;24H\u001b[?25h"]
[547.447976, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[16;24H\u001b[?25h"]
[547.696101, "o", "\u001b[?25l\u001b[mT;\b\u001b[?25h"]
[547.714404, "o", "\u001b[?25lO;\b\u001b[?25h"]
[547.80806, "o", "\u001b[?25lK;\b\u001b[?25h"]
[548.088019, "o", "\u001b[?25l_;\b\u001b[?25h"]
[548.984085, "o", "\u001b[?25lR;\b\u001b[?25h"]
[549.455776, "o", "\u001b[?25lB;\b\u001b[?25h"]
[549.735928, "o", "\u001b[?25lR;\b\u001b[?25h"]
[549.856256, "o", "\u001b[?25lA;\b\u001b[?25h"]
[550.168219, "o", "\u001b[?25lC;\b\u001b[?25h"]
[550.264085, "o", "\u001b[?25lK;\b\u001b[?25h"]
[550.463928, "o", "\u001b[?25lE;\b\u001b[?25h"]
[550.568032, "o", "\u001b[?25lT;\b\u001b[?25h"]
[550.962731, "o", "\u001b[48;1H\u001b[K\u001b[16;35H"]
[550.999442, "o", "\u001b[?25l"]
[550.999999, "o", "\u001b[?25h\u001b[?25l\u001b[1;3H\u001b[93m4\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\u001b[15;33H\u001b[?25h"]
[551.160138, "o", "\u001b[?25l\u001b[1;3H3\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\u001b[14;32H\u001b[?25h"]
[551.703737, "o", "\u001b[?25l\u001b[m\u001b[48;1H3 lines yanked\u001b[14;32H\u001b[?25h"]
[551.856193, "o", "\u001b[?25l\u001b[1;3H\u001b[93m4\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\u001b[15;32H\u001b[?25h"]
[552.024051, "o", "\u001b[?25l\u001b[1;3H5\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[16;32H\u001b[?25h"]
[552.192113, "o", "\u001b[?25l\u001b[1;3H6\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\u001b[17;21H\u001b[?25h"]
[552.575786, "o", "\u001b[?25l\u001b[m\u001b[48;3Hmore lines\u001b[48;13H\u001b[K"]
[552.576318, "o", "\u001b[1;3H\u001b[93m7\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\r\n                                                                                               \r\n                                                                                               \r\n                                                                                               \r\n\u001b[93m  1 \u001b[m        default:                                                                           \r\n\u001b[93m  2 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m  3 \u001b[m            return TOK_ERR;                                                                \u001b[18;1H\u001b[93m  0 \u001b[m\u001b[12Clexer->column++;\r\n\u001b[93m  1 \u001b[m\u001b[12Clexer->current++;\r\n\u001b[93m  2 \u001b[m\u001b[12Creturn TOK_RBRACKET;\u001b[21;3H\u001b[93m3\r\n  4\r\n  5\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H3 more lines\u001b[18;17H\u001b[?25h"]
[553.048096, "o", "\u001b[?25l\u001b[1;3H\u001b[93m8\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\u001b[19;17H\u001b[?25h"]
[553.248138, "o", "\u001b[?25l\u001b[1;3H9\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\u001b[20;17H\u001b[?25h"]
[553.424091, "o", "\u001b[7C"]
[553.712312, "o", "\u001b[?25l\u001b[m;            \u001b[20;24H\u001b[?25h"]
[553.832083, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[20;24H\u001b[?25h"]
[554.120249, "o", "\u001b[?25l\u001b[mT;\b\u001b[?25h"]
[554.160125, "o", "\u001b[?25lO;\b\u001b[?25h"]
[554.248383, "o", "\u001b[?25lK;\b\u001b[?25h"]
[554.49622, "o", "\u001b[?25l_;\b\u001b[?25h"]
[557.879249, "o", "\u001b[?25lC;\b\u001b[?25h"]
[558.000121, "o", "\u001b[?25lO;\b\u001b[?25h"]
[559.224409, "o", "\u001b[?25lM;\b\u001b[?25h"]
[560.880526, "o", "\u001b[?25lM;\b\u001b[?25h"]
[560.935869, "o", "\u001b[?25lA;\b\u001b[?25h"]
[561.757315, "o", "\u001b[48;1H\u001b[K\u001b[20;32H"]
[562.104002, "o", "\u001b[?25l"]
[562.10442, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[562.319895, "o", "w"]
[562.432186, "o", "\r"]
[562.43256, "o", "\u001b[?25l\"src/lexer.c\""]
[562.453906, "o", " 73L, 1797B written"]
[562.45436, "o", "\u001b[24;13H\u001b[1m\u001b[7m    \u001b[20;32H\u001b[?25h"]
[562.816733, "o", "\u001b[m\u001b[24;1H\u001b[7msrc/lexer.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                    \u001b[m\u001b[47;1H\u001b[1m\u001b[7msrc/lexer_test.c                                                                                \u001b[34;32H"]
[563.072824, "o", "\u001b[m\u001b[47;1H\u001b[7msrc/lexer_test.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                \u001b[m\u001b[1m\u001b[7msrc/lexer.h                                                                                    \u001b[44;110H"]
[563.793722, "o", "\u001b[?25l\u001b[m\u001b[25;97H#define LEXER_H\u001b[26;101H\u001b[K\u001b[27;97H#include <stdlib.h>\u001b[29;97Htypedef enum LexerError {\u001b[30;97H    LEX_EOK,\u001b[30;109H\u001b[K\u001b[31;101HLEX_EUNKNOWN,\u001b[31;115H\u001b[K\u001b[32;97H} LexerError;\u001b[32;110H\u001b[K\u001b[33;101H\u001b[K\u001b[34;97Htypedef enum Token {\u001b[34;117H\u001b[K\u001b[35;101HTOK_ERR,\u001b[35;109H\u001b[K\u001b[36;101HTOK_EOF,\u001b[36;109H\u001b[K\u001b[37;101HTOK_SEMICOLON,\u001b[37;116H\u001b[K\u001b[38;97H} Token;\u001b[38;105H\u001b[K\u001b[39;101H\u001b[K\u001b[40;97H// The state of the lexer\u001b[41;97Htypedef struct Lexer {\u001b[42;101H// the source input\u001b[43;97H    const char* source;\u001b[43;120H\u001b[K\u001b[44;97H    // the current parsed input\u001b[44;128H\u001b[K\u001b[45;97H    const char* current;\u001b[45;121H\u001b[K\u001b[46;101H// the lexer error\u001b[48;1H\u001b[K\u001b[44;101H\u001b[?25h"]
[564.248251, "o", "\u001b[43;101H"]
[564.749497, "o", "\u001b[42;101H"]
[564.833659, "o", "\u001b[41;101H"]
[564.917965, "o", "\u001b[40;101H"]
[566.312247, "o", "\u001b[39;97H"]
[566.512261, "o", "\u001b[38;101H"]
[566.696243, "o", "\u001b[37;101H"]
[568.536607, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[38;1H\u001b[96C                                                                                               \u001b[39;97H} Token;                                                                                       \u001b[40;97H                                                                                               \u001b[41;97H// The state of the lexer                                                                      \u001b[42;97Htypedef struct Lexer {                                                                         \u001b[43;97H    // the source input                                                                        \u001b[44;97H    const char* source;                                                                        \u001b[45;97H    // the current parsed input                                                                \u001b[46;97H    const char* current;                                                                       \u001b[47;109H\u001b[1m\u001b[7m[+]\u001b[38;101H\u001b[?25h"]
[568.880792, "o", "\u001b[?25l\u001b[mT\u001b[?25h"]
[568.968509, "o", "\u001b[?25lO\u001b[?25h"]
[569.136446, "o", "\u001b[?25lK\u001b[?25h"]
[569.272493, "o", "\u001b[?25lE\u001b[?25h"]
[569.352495, "o", "\u001b[?25lN\u001b[?25h"]
[569.728623, "o", "\u001b[?25l_\u001b[?25h"]
[570.8568, "o", "\u001b[?25l\u001b[38;106H\u001b[K\u001b[38;106H\u001b[?25h"]
[571.016891, "o", "\u001b[?25l\u001b[38;105H\u001b[K\u001b[38;105H\u001b[?25h"]
[571.152787, "o", "\u001b[?25l\u001b[38;104H\u001b[K\u001b[38;104H\u001b[?25h"]
[571.688498, "o", "\u001b[?25l_\u001b[?25h"]
[574.946057, "o", "\u001b[?25lL\u001b[?25h"]
[575.232714, "o", "\u001b[?25lB\u001b[?25h"]
[575.760636, "o", "\u001b[?25lR\u001b[?25h"]
[576.152753, "o", "\u001b[?25lA\u001b[?25h"]
[576.488526, "o", "\u001b[?25lC\u001b[?25h"]
[576.808713, "o", "\u001b[?25lE\u001b[?25h"]
[577.144796, "o", "\u001b[?25l,\u001b[?25h"]
[577.347663, "o", "\u001b[48;1H\u001b[K\u001b[38;111H"]
[577.472229, "o", "\u001b[?25l"]
[577.472628, "o", "\u001b[?25h"]
[577.704682, "o", "\u001b[?25l\r\n\u001b[96C                                                                                               \u001b[40;97H} Token;                                                                                       \u001b[41;97H                                                                                               \u001b[42;97H// The state of the lexer                                                                      \u001b[43;97Htypedef struct Lexer {                                                                         \u001b[44;97H    // the source input                                                                        \u001b[45;97H    const char* source;                                                                        \u001b[46;97H    // the current parsed input                                                                \u001b[39;101HTOK_LBRACE,\u001b[39;101H\u001b[?25h"]
[577.92836, "o", "\u001b[10C"]
[578.088447, "o", "\b"]
[578.392764, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[39;110H,\u001b[39;111H\u001b[K\u001b[39;110H\u001b[?25h"]
[578.968798, "o", "\u001b[?25lK,\b\u001b[?25h"]
[579.080763, "o", "\u001b[?25lE,\b\u001b[?25h"]
[579.176784, "o", "\u001b[?25lT,\b\u001b[?25h"]
[579.651372, "o", "\u001b[48;1H\u001b[K\u001b[39;112H"]
[580.336449, "o", "\u001b[?25l"]
[580.336873, "o", "\u001b[?25h"]
[580.736566, "o", "\u001b[38;111H"]
[580.896911, "o", "\u001b[?25l\r\n\u001b[96C                                                                                               \u001b[40;97H    TOK_LBRACKET,                                                                              \u001b[41;97H} Token;                                                                                       \u001b[42;97H                                                                                               \u001b[43;97H// The state of the lexer                                                                      \u001b[44;97Htypedef struct Lexer {                                                                         \u001b[45;97H    // the source input                                                                        \u001b[46;97H    const char* source;                                                                        \u001b[39;101HTOK_LBRACKET,\u001b[39;101H\u001b[?25h"]
[582.104702, "o", "TOK_L"]
[582.440461, "o", "\u001b[?25l,\u001b[39;107H\u001b[K\u001b[39;106H\u001b[?25h"]
[582.513432, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[39;106H\u001b[?25h"]
[582.82476, "o", "\u001b[?25l\u001b[mP,\b\u001b[?25h"]
[582.928405, "o", "\u001b[?25lA,\b\u001b[?25h"]
[583.120762, "o", "\u001b[?25lR,\b\u001b[?25h"]
[583.200837, "o", "\u001b[?25lE,\b\u001b[?25h"]
[583.312916, "o", "\u001b[?25lN,\b\u001b[?25h"]
[583.594387, "o", "\u001b[48;1H\u001b[K\u001b[39;110H"]
[583.610762, "o", "\u001b[?25l"]
[583.611493, "o", "\u001b[?25h\u001b[38;110H"]
[584.312512, "o", "\u001b[?25l\u001b[48;1H3 lines yanked\u001b[38;110H\u001b[?25h"]
[584.480692, "o", "\u001b[39;110H"]
[584.632632, "o", "\u001b[40;110H"]
[584.856164, "o", "\u001b[?25l\u001b[48;3Hmore lines\u001b[48;13H\u001b[K"]
[584.856626, "o", "\u001b[41;1H\u001b[96C                                                                                               \u001b[42;97H                                                                                               \u001b[43;97H                                                                                               \u001b[44;97H} Token;                                                                                       \u001b[45;97H                                                                                               \u001b[46;97H// The state of the lexer                                                                      \u001b[41;101HTOK_LBRACE,\u001b[42;101HTOK_LPAREN,\u001b[43;101HTOK_LBRACKET,\u001b[48;1H\u001b[K\u001b[48;1H3 more lines\u001b[41;101H\u001b[?25h"]
[585.176771, "o", "T"]
[585.360666, "o", "O"]
[585.51272, "o", "K"]
[585.69674, "o", "_"]
[587.776879, "o", "\u001b[?25lBRACE,\u001b[41;111H\u001b[K\u001b[41;105H\u001b[?25h"]
[587.848774, "o", "\u001b[42;105H"]
[588.056851, "o", "\u001b[?25lPAREN,\u001b[42;111H\u001b[K\u001b[42;105H\u001b[?25h"]
[588.136735, "o", "\u001b[43;105H"]
[588.408886, "o", "\u001b[?25lBRACKET,\u001b[43;113H\u001b[K\u001b[43;105H\u001b[?25h"]
[588.448492, "o", "\u001b[42;105H"]
[588.616882, "o", "\u001b[41;105H"]
[588.864845, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[41;105H\u001b[?25h"]
[589.152677, "o", "\u001b[?25l\u001b[mRBRACE,\b\b\b\b\b\b\u001b[?25h"]
[589.415062, "o", "\u001b[48;1H\u001b[K\u001b[41;105H"]
[589.448599, "o", "\u001b[?25l"]
[589.449151, "o", "\u001b[?25h\u001b[42;105H"]
[589.728542, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[42;105H\u001b[?25h"]
[590.632926, "o", "\u001b[?25l\u001b[mRPAREN,\b\b\b\b\b\b\u001b[?25h"]
[591.061366, "o", "\u001b[48;1H\u001b[K\u001b[42;105H"]
[591.120564, "o", "\u001b[?25l"]
[591.12114, "o", "\u001b[?25h\u001b[43;105H"]
[591.512617, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[43;105H\u001b[?25h"]
[591.647919, "o", "\u001b[?25l\u001b[mRBRACKET,\u001b[43;106H\u001b[?25h"]
[591.909951, "o", "\u001b[48;1H\u001b[K\u001b[43;105H"]
[592.096616, "o", "\u001b[?25l"]
[592.097466, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[44;97H    \u001b[44;101H\u001b[K\u001b[45;97H} Token;\u001b[46;97H\u001b[K\u001b[44;101H\u001b[?25h"]
[592.528993, "o", "\u001b[?25lT\u001b[?25h"]
[592.585051, "o", "\u001b[?25lO\u001b[?25h"]
[592.705057, "o", "\u001b[?25lK\u001b[?25h"]
[592.98505, "o", "\u001b[?25l_\u001b[?25h"]
[594.521103, "o", "\u001b[?25lC\u001b[?25h"]
[594.577025, "o", "\u001b[?25lO\u001b[?25h"]
[594.793087, "o", "\u001b[?25lM\u001b[?25h"]
[594.929093, "o", "\u001b[?25lM\u001b[?25h"]
[594.993202, "o", "\u001b[?25lA\u001b[?25h"]
[595.481043, "o", "\u001b[?25l,\u001b[?25h"]
[595.627146, "o", "\u001b[48;1H\u001b[K\u001b[44;110H"]
[595.880744, "o", "\u001b[?25l"]
[595.881143, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[596.072662, "o", "w"]
[596.144871, "o", "\r"]
[596.145274, "o", "\u001b[?25l\"src/lexer.h\""]
[596.16768, "o", " 42L, 753B written"]
[596.168223, "o", "\u001b[47;109H\u001b[1m\u001b[7m    \u001b[44;110H\u001b[?25h"]
[596.489588, "o", "\r\n\r\n\r\nsrc/lexer_test.c                                                                                \u001b[m\u001b[7msrc/lexer.h\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                    \u001b[34;32H"]
[596.785654, "o", "\u001b[?25l\u001b[m\u001b[24;1H\u001b[1m\u001b[7msrc/lexer.c                                                                                    \u001b[m\u001b[47;1H\u001b[7msrc/lexer_test.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                \u001b[20;32H\u001b[?25h"]
[597.777086, "o", "\u001b[?25l\u001b[m\u001b[1;3H\u001b[93m1\u001b[m\u001b[15C)\u001b[2;3H\u001b[93m0\r\n  9\r\n  8\u001b[m\u001b[24CRPAREN;  \u001b[5;2H\u001b[93m 7\u001b[m\u001b[15C]\u001b[6;2H\u001b[93m 6\r\n  5\r\n  4\u001b[m\u001b[29CKET;\u001b[9;2H\u001b[93m 3\u001b[m\u001b[15C,\u001b[10;2H\u001b[93m 2\r\n  1\r\n  0\u001b[m\u001b[24CCOMMA; \u001b[13;3H\u001b[93m1\u001b[m\u001b[9Cdefault: \u001b[14;3H\u001b[93m2\u001b[m\u001b[20Cerror = LEX_EUNKNOWN;\u001b[15;3H\u001b[93m3\u001b[m\u001b[13Creturn TOK_ERR;  \u001b[16;9H}\u001b[7C                    \u001b[17;3H\u001b[93m5\u001b[m\u001b[1C}\u001b[7C         \u001b[18;3H\u001b[93m6\u001b[m\u001b[13C                \u001b[19;3H\u001b[93m7\u001b[m\u001b[1CToken Lexer_NextToken(Lexer *lexer) {\u001b[20;3H\u001b[93m8\u001b[m\u001b[5Cchar c = Lexer_GetChar(lexer, 0);\u001b[21;3H\u001b[93m9\u001b[m\u001b[5Cswitch (c) {\u001b[22;2H\u001b[93m10\u001b[m\u001b[9Ccase '\\0':                      \u001b[23;2H\u001b[93m11\u001b[m\u001b[25COF\u001b[48;1H\u001b[K\u001b[12;32H\u001b[?25h"]
[598.008966, "o", "\u001b[?25l\u001b[1;3H\u001b[93m0\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\u001b[11;32H\u001b[?25h"]
[598.177065, "o", "\u001b[?25l\u001b[1;2H 9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\u001b[10;32H\u001b[?25h"]
[598.713015, "o", "\u001b[?25l\u001b[1;3H8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\r\n 14\u001b[9;21H\u001b[?25h"]
[600.152782, "o", "\u0007"]
[600.432431, "o", "\u001b[?25l\u001b[m\u001b[48;1H4 lines yanked\u001b[9;21H\u001b[?25h"]
[600.608958, "o", "\u001b[?25l\u001b[1;3H\u001b[93m9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\r\n 13\u001b[10;21H\u001b[?25h"]
[600.760966, "o", "\u001b[?25l\u001b[1;2H10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\r\n 12\u001b[11;21H\u001b[?25h"]
[600.945072, "o", "\u001b[?25l\u001b[1;3H1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\r\n 11\u001b[12;21H\u001b[?25h"]
[601.152934, "o", "\u001b[?25l\u001b[m\u001b[48;3Hmore lines\u001b[48;13H\u001b[K"]
[601.153488, "o", "\u001b[1;3H\u001b[93m2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[9Ccase ',':\u001b[14;3H\u001b[93m1\u001b[m\u001b[20Ccolumn++;            \u001b[15;3H\u001b[93m2\u001b[m\u001b[13Clexer->current++;\u001b[16;3H\u001b[93m3\u001b[m\u001b[5C \u001b[7Creturn TOK_COMMA;\u001b[17;3H\u001b[93m4\u001b[m\u001b[1C \u001b[7Cdefault:\u001b[18;3H\u001b[93m5\u001b[m\u001b[13Clexer->error = LEX_EUNKNOWN;\u001b[19;3H\u001b[93m6\u001b[m\u001b[1C            return TOK_ERR;          \u001b[20;3H\u001b[93m7\u001b[m\u001b[5C}                                \u001b[21;3H\u001b[93m8\u001b[m\u001b[1C}               \u001b[22;2H\u001b[93m 9\u001b[m\u001b[9C          \u001b[23;3H\u001b[93m0\u001b[m\u001b[1CToken Lexer_NextToken(Lexer *lexer) {\u001b[24;13H\u001b[1m\u001b[7m[+]\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H4 more lines\u001b[13;13H\u001b[?25h"]
[601.625331, "o", "case "]
[601.736827, "o", "'"]
[604.753368, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[13;19H': \b\b\b\u001b[?25h"]
[605.08929, "o", "\u001b[?25l:':\b\b\u001b[?25h"]
[605.565726, "o", "\u001b[48;1H\u001b[K\u001b[13;19H"]
[606.057162, "o", "\u001b[?25l"]
[606.057992, "o", "\u001b[?25h\u001b[?25l\u001b[1;3H\u001b[93m3\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\u001b[14;19H\u001b[?25h"]
[607.945236, "o", "\u001b[mxer"]
[608.161248, "o", "\u001b[?25l\u001b[1;3H\u001b[93m4\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\u001b[15;22H\u001b[?25h"]
[608.328988, "o", "\u001b[m->"]
[608.641384, "o", "\u001b[?25l\u001b[1;3H\u001b[93m5\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[16;24H\u001b[?25h"]
[609.113402, "o", "\u001b[?25l\u001b[m;         \u001b[16;24H\u001b[?25h"]
[609.193033, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[16;24H\u001b[?25h"]
[609.496977, "o", "\u001b[?25l\u001b[mT;\b\u001b[?25h"]
[609.561187, "o", "\u001b[?25lO;\b\u001b[?25h"]
[609.721525, "o", "\u001b[?25lK;\b\u001b[?25h"]
[609.993427, "o", "\u001b[?25l_;\b\u001b[?25h"]
[610.345257, "o", "\u001b[?25lC;\b\u001b[?25h"]
[610.433546, "o", "\u001b[?25lO;\b\u001b[?25h"]
[610.601574, "o", "\u001b[?25lL;\b\u001b[?25h"]
[610.79344, "o", "\u001b[?25lO;\b\u001b[?25h"]
[610.865305, "o", "\u001b[?25lN;\b\u001b[?25h"]
[611.107025, "o", "\u001b[48;1H\u001b[K\u001b[16;32H"]
[611.39303, "o", "\u001b[?25l"]
[611.393579, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[611.537131, "o", "w"]
[611.617206, "o", "\r"]
[611.617536, "o", "\u001b[?25l\"src/lexer.c\""]
[611.63905, "o", " 77L, 1904B written"]
[611.639672, "o", "\u001b[24;13H\u001b[1m\u001b[7m    \u001b[16;32H\u001b[?25h"]
[611.945763, "o", "\u001b[m\u001b[24;1H\u001b[7msrc/lexer.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                    \u001b[m\u001b[1C\u001b[1m\u001b[7mMakefile                                                                                       \u001b[1;97H"]
[612.225925, "o", "\u001b[m\u001b[24;97H\u001b[7mMakefile\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                       \u001b[m\u001b[47;97H\u001b[1m\u001b[7msrc/lexer.h                                                                                    \u001b[44;110H"]
[612.98558, "o", "\u001b[?25l\u001b[m\u001b[45;97H    TOK_COMMA,\u001b[46;97H} Token;\u001b[47;109H\u001b[1m\u001b[7m[+]\u001b[45;101H\u001b[?25h"]
[613.353336, "o", "\u001b[9C"]
[613.753074, "o", "\b"]
[613.921392, "o", "\b"]
[614.193238, "o", "\b"]
[614.465396, "o", "\u001b[?25l\u001b[m,\u001b[45;108H\u001b[K\u001b[45;107H\u001b[?25h"]
[614.537326, "o", "\u001b[?25l\r\n\r\n\r\n\u001b[1m-- INSERT --\u001b[m\u001b[48;13H\u001b[K\u001b[45;107H\u001b[?25h"]
[614.841602, "o", "\u001b[?25lL,\b\u001b[?25h"]
[615.049462, "o", "\u001b[?25lO,\b\u001b[?25h"]
[615.161529, "o", "\u001b[?25lN,\b\u001b[?25h"]
[615.431702, "o", "\u001b[48;1H\u001b[K\u001b[45;109H"]
[615.689217, "o", "\u001b[?25l"]
[615.689613, "o", "\u001b[?25h\u001b[?25l\r\n\r\n\r\n:\u001b[?25h"]
[615.841239, "o", "w"]
[615.913139, "o", "\r"]
[615.91351, "o", "\u001b[?25l\"src/lexer.h\""]
[615.934993, "o", " 43L, 768B written"]
[615.935473, "o", "\u001b[47;109H\u001b[1m\u001b[7m    \u001b[45;109H\u001b[?25h"]
[616.394392, "o", "\r\n\r\nsrc/lexer_test.c                                                                                \u001b[m\u001b[7msrc/lexer.h\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                    \u001b[34;32H"]
[616.906078, "o", "\u001b[?25l\u001b[m\u001b[24;1H\u001b[1m\u001b[7msrc/lexer.c                                                                                    \u001b[m\u001b[47;1H\u001b[7msrc/lexer_test.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                \u001b[16;32H\u001b[?25h"]
[617.489872, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[48;13H\u001b[K\u001b[1;3H\u001b[93m6\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m        default:                                                                           \r\n\u001b[93m  2 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m  3 \u001b[m            return TOK_ERR;                                                                \r\n\u001b[93m  4 \u001b[m    }                                                                                      \r\n\u001b[93m  5 \u001b[m}                                                                                          \r\n\u001b[93m  6 \u001b[m                                                                                           \u001b[17;1H\u001b[93m  0 \u001b[m\u001b[24;13H\u001b[1m\u001b[7m[+]\u001b[17;17H\u001b[?25h"]
[617.777812, "o", "\u001b[?25l\b\u001b[?25h"]
[618.321833, "o", "\u001b[?25l\b\u001b[?25h"]
[618.473874, "o", "\u001b[?25l\b\u001b[?25h"]
[618.833983, "o", "\u001b[?25l\b\u001b[?25h"]
[619.473697, "o", "\u001b[?25l\u001b[mc\u001b[?25h"]
[619.705678, "o", "\u001b[?25la\u001b[?25h"]
[619.9136, "o", "\u001b[?25ls\u001b[?25h"]
[619.961682, "o", "\u001b[?25le\u001b[?25h"]
[620.153731, "o", "\u001b[?25l \u001b[?25h"]
[620.425842, "o", "\u001b[?25l'\u001b[?25h"]
[622.925818, "o", "\u001b[48;1H\u001b[K\u001b[17;18H"]
[623.145381, "o", "\u001b[?25l"]
[623.145766, "o", "\u001b[?25h"]
[623.289893, "o", "\u001b[?25l\r\u001b[93m  1 \u001b[m        default:                                                                           \r\n\u001b[93m  2 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m  3 \u001b[m            return TOK_ERR;                                                                \r\n\u001b[93m  4 \u001b[m    }                                                                                      \r\n\u001b[93m  5 \u001b[m}                                                                                          \r\n\u001b[93m  6 \u001b[m                                                                                           \r\n                                                                                               \u001b[17;3H\u001b[93m0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6 \u001b[mToken Lexer_NextToken(Lexer *lexer) {\u001b[17;13H\u001b[?25h"]
[623.570674, "o", "\u001b[?25l\u001b[1;13H    return TOK_COMMA;\u001b[2;13Hcase ':':           \u001b[3;25Holumn++; \u001b[4;17Hlexer->current++; \u001b[5;13H    return TOK_COLON;\u001b[6;13Hdefault:            \u001b[7;24Herror = LEX_EUNKNOWN;\u001b[8;28HERR;     \u001b[9;9H}            \u001b[10;5H}\u001b[11C                \u001b[11;17H                 \u001b[12;5HToken Lexer_NextToken(Lexer *lexer) {\u001b[13;9Hchar c = Lexer_GetChar(lexer, 0);\u001b[14;9Hswitch (c) {            \u001b[15;13Hcase '\\0':           \u001b[16;28HEOF;  \u001b[17;13Hcase ';': case '{': case '(': case '[':\u001b[18;13Hcase '}': case ')': case ']': case ',':\u001b[19;24HLexer_NextOp(lexer);\u001b[20;9H    default:\u001b[21;5H \u001b[11Clexer->error = LEX_EUNKNOWN;\u001b[22;17Hreturn TOK_ERR;\u001b[23;5H    }                                \u001b[17;13H\u001b[?25h"]
[624.089559, "o", "\u001b[?25l\u001b[1;3H\u001b[93m7\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\u001b[18;13H\u001b[?25h"]
[625.137876, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[1;3H\u001b[93m8\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m            return Lexer_NextOp(lexer);                                                    \r\n\u001b[93m  2 \u001b[m        default:                                                                           \r\n\u001b[93m  3 \u001b[m            lexer->error = LEX_EUNKNOWN;                                                   \r\n\u001b[93m  4 \u001b[m            return TOK_ERR;                                                                \u001b[19;1H\u001b[93m  0 \u001b[8C\u001b[?25h"]
[625.569853, "o", "\u001b[?25l\u001b[mc\u001b[?25h"]
[625.737834, "o", "\u001b[?25la\u001b[?25h"]
[625.800934, "o", "\u001b[?25ls\u001b[?25h"]
[625.865663, "o", "\u001b[?25le\u001b[?25h"]
[625.97773, "o", "\u001b[?25l \u001b[?25h"]
[626.121892, "o", "\u001b[?25l'\u001b[?25h"]
[626.529765, "o", "\u001b[?25l:\u001b[?25h"]
[627.785757, "o", "\u001b[?25l'\u001b[?25h"]
[628.105118, "o", "\u001b[?25l:\u001b[?25h"]
[628.29751, "o", "\u001b[?25l \u001b[?25h"]
[628.74369, "o", "\u001b[48;1H\u001b[K\u001b[19;22H"]
[629.16149, "o", "\u001b[?25l"]
[629.162236, "o", "\u001b[?25h\u001b[?25l\b\u001b[?25h"]
[629.441616, "o", "\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[629.593358, "o", "w"]
[629.705612, "o", "\r"]
[629.705989, "o", "\u001b[?25l\"src/lexer.c\""]
[629.730531, "o", " 78L, 1922B written"]
[629.731128, "o", "\u001b[24;13H\u001b[1m\u001b[7m    \u001b[19;21H\u001b[?25h"]
[630.490332, "o", "\u001b[m\u001b[24;1H\u001b[7msrc/lexer.c\u001b[m\u001b[1m\u001b[7m \u001b[m\b\u001b[7m                                                                                    \u001b[m\u001b[47;1H\u001b[1m\u001b[7msrc/lexer_test.c                                                                                \u001b[34;32H"]
[630.985321, "o", "\u001b[m "]
[631.201692, "o", "\""]
[631.505822, "o", ";"]
[632.073768, "o", "\b"]
[632.488468, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[48;13H\u001b[K\u001b[34;34H\u001b[?25h"]
[633.562799, "o", "\u001b[?25l\u001b[46m(\u001b[m;\"\u001b[46m)\u001b[m;\u001b[47;18H\u001b[1m\u001b[7m[+]\u001b[34;35H\u001b[?25h"]
[633.618578, "o", "\u001b[?25l\u001b[m\u001b[46m)\u001b[m;\");\b\b\b\b\u001b[?25h"]
[634.494732, "o", "\u001b[48;1H\u001b[K\u001b[34;35H"]
[634.777465, "o", "\u001b[?25l"]
[634.779126, "o", "\u001b[?25h\u001b[?25l\b()\u001b[35;35H\u001b[?25h"]
[635.490273, "o", "\u001b[?25l\u001b[34;34H\u001b[46m()\b\u001b[?25h"]
[635.649969, "o", "\u001b[?25l\u001b[m\r\n                                                                                               \r\n        assert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);                                       \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // reach the end                            \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing                           \r\n    }                                                                                          \r\n                                                                                               \r\n    printf(\"all test passed\");                                                                 \r\n    return 0;                                                                                  \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                     "]
[635.650189, "o", "                                                         \r\n~                                                                                              \u001b[m\u001b[34;34H()\u001b[35;9Hassert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);\u001b[35;9H\u001b[?25h"]
[635.954013, "o", "\u001b[?25l\r\n                                                                                               \r\n        assert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);                                       \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // reach the end                            \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing                           \r\n    }                                                                                          \r\n                                                                                               \r\n    printf(\"all test passed\");                                                                 \r\n    return 0;                                                                                  \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \r\n~                                        "]
[635.954233, "o", "                                                      \u001b[m\u001b[36;9Hassert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);\u001b[36;9H\u001b[?25h"]
[636.321786, "o", "\u001b[35;9H"]
[637.257887, "o", "\u001b[37C"]
[637.802795, "o", "\u001b[?25l\u001b[35;15H\u001b[46m(\u001b[30C)\u001b[m;         \u001b[35;46H\u001b[?25h"]
[637.919566, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[35;46H\u001b[?25h"]
[638.250835, "o", "\u001b[?25l\u001b[mL\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[638.706895, "o", "\u001b[?25lP\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[638.802657, "o", "\u001b[?25lA\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[639.018908, "o", "\u001b[?25lR\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[639.10692, "o", "\u001b[?25lE\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[639.218908, "o", "\u001b[?25lN\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[639.550487, "o", "\u001b[48;1H\u001b[K\u001b[35;51H"]
[639.585527, "o", "\u001b[?25l"]
[639.586152, "o", "\u001b[35;15H(\u001b[36C)\b\b\u001b[?25h\u001b[36;51H"]
[639.785726, "o", "\b"]
[639.945963, "o", "\b"]
[640.113967, "o", "\b"]
[640.297851, "o", "\b"]
[640.481692, "o", "\b"]
[640.690911, "o", "\u001b[?25l\u001b[36;15H\u001b[46m(\u001b[30C)\u001b[m;         \u001b[36;46H\u001b[?25h"]
[640.794444, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[36;46H\u001b[?25h"]
[641.194872, "o", "\u001b[?25l\u001b[mR\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[641.442937, "o", "\u001b[?25lP\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[641.538908, "o", "\u001b[?25lA\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[641.730952, "o", "\u001b[?25lR\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[641.818588, "o", "\u001b[?25lE\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[641.914731, "o", "\u001b[?25lN\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[642.212752, "o", "\u001b[48;1H\u001b[K\u001b[36;51H"]
[642.482316, "o", "\u001b[?25l"]
[642.483092, "o", "\u001b[36;15H(\u001b[36C)\b\b\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[642.641729, "o", "w"]
[642.714029, "o", "\r"]
[642.71438, "o", "\u001b[?25l\"src/lexer_test.c\""]
[642.732823, "o", " 20L, 551B written"]
[642.733291, "o", "\u001b[47;18H\u001b[1m\u001b[7m    \u001b[36;51H\u001b[?25h"]
[642.993679, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[643.265952, "o", "!"]
[643.76194, "o", "\u001b[?25lmake test\u001b[?25h"]
[643.905985, "o", "\r"]
[643.906049, "o", "\u001b[?25l\u001b[11C\u001b[?1004l\u001b[?2004l\u001b[?1l\u001b>\u001b[?25h\u001b[>4;m\u001b[?1049l\r\n"]
[643.933117, "o", "clang    -c -o src/lexer_test.o src/lexer_test.c\r\n"]
[644.022172, "o", "clang    -c -o src/lexer.o src/lexer.c\r\n"]
[644.102181, "o", "clang   src/lexer_test.o src/lexer.o   -o src/lexer_test\r\n"]
[644.18108, "o", "./src/lexer_test\r\n"]
[644.184175, "o", "all test passed"]
[644.196862, "o", "\r\nPress ENTER or type command to continue"]
[644.882133, "o", "\u001b[?1049h\u001b[>4;2m\u001b[?1h\u001b=\u001b[?2004h\u001b[?1004h"]
[644.882703, "o", "\u001b[27m\u001b[29m\u001b[m\u001b[H\u001b[2J\u001b[?25l\u001b[1;1H\u001b[93m 18 \u001b[m\u001b[12Creturn TOK_COMMA;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 17 \u001b[m\u001b[8Ccase ':':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m 16 \u001b[m\u001b[12Clexer->column++;\u001b[63C\u001b[7m|\u001b[m\r\n\u001b[93m 15 \u001b[m\u001b[12Clexer->current++;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 14 \u001b[m\u001b[12Creturn TOK_COLON;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 13 \u001b[m\u001b[8Cdefault:\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m 12 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m 11 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m 10 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  9 \u001b[m}\u001b[90C\u001b[7m|\u001b[m\r\n\u001b[93m  8 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[mToken Lexer_NextToken(Lexer *lexer) {\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m    char c = Lexer_GetChar(lexer, 0);\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m    switch (c) {\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[8Ccase '\\0':\u001b[73C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[12Creturn TOK_EOF;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8Ccase ';': case '{': case '(': case '[':\u001b[44C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[8Ccase '}': case ')': case ']': case ',':\u001b[44C\u001b[7m|\u001b[m\r\n\u001b[93m  0 \u001b[m\u001b[8Ccase ':':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[12Creturn Lexer_NextOp(lexer);\u001b[52C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8Cdefault:\u001b["]
[644.882912, "o", "75C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\r\nsrc/lexer.c                                                                                    |\u001b[m\r\n#include <stdio.h>\u001b[77C\u001b[7m|\u001b[m\r\n#include <assert.h>\u001b[76C\u001b[7m|\u001b[m\r\n#include \"lexer.h\"\u001b[77C\u001b[7m|\u001b[28;96H|\u001b[m\r\nint main(int argc, char** argv) {\u001b[62C\u001b[7m|\u001b[30;96H|\u001b[m\r\n    {\u001b[90C\u001b[7m|\u001b[m\u001b[32;9HLexer lexer = {0};\u001b[69C\u001b[7m|\u001b[m\u001b[33;9HLexer_Init(&lexer);\u001b[68C\u001b[7m|\u001b[m\u001b[34;9HLexer_SetSource(&lexer, \"();\");\u001b[56C\u001b[7m|\u001b[m\u001b[35;9Hassert(Lexer_NextToken(&lexer)== TOK_LPAREN);\u001b[42C\u001b[7m|\u001b[m\u001b[36;9Hassert(Lexer_NextToken(&lexer)== TOK_RPAREN);\u001b[42C\u001b[7m|\u001b[m\u001b[37;9Hassert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);\u001b[39C\u001b[7m|\u001b[m\u001b[38;9Hassert(Lexer_NextToken(&lexer)== TOK_EOF); // reach the end\u001b[28C\u001b[7m|\u001b[m\u001b[39;9Hassert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing\u001b[27C\u001b[7m|\u001b[m\r\n    }\u001b[90C\u001b[7m|\u001b[41;96H|\u001b[m\r\n    printf(\"all test passed\");"]
[644.883094, "o", "\u001b[65C\u001b[7m|\u001b[m\r\n    return 0;\u001b[82C\u001b[7m|\u001b[m\r\n}\u001b[94C\u001b[7m|\u001b[45;96H|\u001b[46;96H|\u001b[m\u001b[45;1H\u001b[94m~                                                                                              \r\n~                                                                                              \u001b[m\r\n\u001b[1m\u001b[7msrc/lexer_test.c                                                                                \u001b[m\u001b[1;97HCC=clang\u001b[3;97Hsrc/lexer_test: src/lexer.o src/lexer_test.o\u001b[5;97Htest: src/lexer_test\u001b[6;101H./src/lexer_test\u001b[7;97H\u001b[94m~                                                                                              \u001b[8;97H~                                                                                              \u001b[9;97H~                                                                                              \u001b[10;97H~                                                                                              \u001b[11;97H~                                                                                             "]
[644.883289, "o", " \u001b[12;97H~                                                                                              \u001b[13;97H~                                                                                              \u001b[14;97H~                                                                                              \u001b[15;97H~                                                                                              \u001b[16;97H~                                                                                              \u001b[17;97H~                                                                                              \u001b[18;97H~                                                                                              \u001b[19;97H~                                                                                              \u001b[20;97H~                                                                                              \u001b[21;97H~                                                                                      "]
[644.883465, "o", "        \u001b[22;97H~                                                                                              \u001b[23;97H~                                                                                              \u001b[m\u001b[24;97H\u001b[7mMakefile                                                                                       \u001b[m\u001b[25;97H#define LEXER_H\u001b[27;97H#include <stdlib.h>\u001b[29;97Htypedef enum LexerError {\u001b[30;101HLEX_EOK,\u001b[31;101HLEX_EUNKNOWN,\u001b[32;97H} LexerError;\u001b[34;97Htypedef enum Token {\u001b[35;101HTOK_ERR,\u001b[36;101HTOK_EOF,\u001b[37;101HTOK_SEMICOLON,\u001b[38;101HTOK_LBRACE,\u001b[39;101HTOK_LPAREN,\u001b[40;101HTOK_LBRACKET,\u001b[41;101HTOK_RBRACE,\u001b[42;101HTOK_RPAREN,\u001b[43;101HTOK_RBRACKET,\u001b[44;101HTOK_COMMA,\u001b[45;101HTOK_COLON,\u001b[46;97H} Token;\u001b[47;97H\u001b[7msrc/lexer.h                                                                                    \u001b[36;51H\u001b[?25h"]
[648.050231, "o", "\u001b[37;51H"]
[649.266227, "o", "\u001b[36;51H"]
[649.76751, "o", "\u001b[35;51H"]
[649.850765, "o", "\u001b[34;39H"]
[649.934411, "o", "\u001b[33;27H"]
[650.017707, "o", "\u001b[32;26H"]
[650.15474, "o", "\u001b[?25l\u001b[m\u001b[31;5H\u001b[46m{\u001b[40;5H}\u001b[31;5H\u001b[?25h"]
[656.250417, "o", "\u001b[?25l\u001b[m{\u001b[40;5H}\u001b[32;26H\u001b[?25h"]
[656.75043, "o", "\u001b[33;27H"]
[656.834359, "o", "\u001b[34;39H"]
[657.114289, "o", "\u001b[35;51H"]
[657.818483, "o", "\u001b[34;39H"]
[658.018345, "o", "\u001b[33;27H"]
[658.218262, "o", "\u001b[32;26H"]
[658.386763, "o", "\u001b[?25l\u001b[31;5H\u001b[46m{\u001b[40;5H}\u001b[31;5H\u001b[?25h"]
[658.586317, "o", "\u001b[?25l\u001b[m{\u001b[40;5H}\u001b[30;1H\u001b[?25h"]
[658.754913, "o", "\u001b[?25l\u001b[29;33H\u001b[46m{\u001b[44;1H}\u001b[29;33H\u001b[?25h"]
[658.938249, "o", "\u001b[?25l\u001b[m{\u001b[44;1H}\u001b[28;1H\u001b[?25h"]
[659.297311, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[29;1H                                                                                               \r\nint main(int argc, char** argv) {                                                              \r\n                                                                                               \r\n    {                                                                                          \r\n        Lexer lexer = {0};                                                                     \r\n        Lexer_Init(&lexer);                                                                    \r\n        Lexer_SetSource(&lexer, \"();\");                                                        \r\n        assert(Lexer_NextToken(&lexer)== TOK_LPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_RPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);                                       \r\n        assert("]
[659.297494, "o", "Lexer_NextToken(&lexer)== TOK_EOF); // reach the end                            \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing                           \r\n    }                                                                                          \r\n                                                                                               \r\n    printf(\"all test passed\");                                                                 \r\n    return 0;                                                                                  \r\n}                                                                                              \r\n\u001b[94m~                                                                                              \u001b[m\u001b[47;18H\u001b[1m\u001b[7m[+]\u001b[29;1H\u001b[?25h"]
[659.625613, "o", "\u001b[?25l\u001b[m#\u001b[?25h"]
[660.38519, "o", "\u001b[?25ld\u001b[?25h"]
[660.601145, "o", "\u001b[?25le\u001b[?25h"]
[660.841105, "o", "\u001b[?25lf\u001b[?25h"]
[660.952945, "o", "\u001b[?25li\u001b[?25h"]
[661.017011, "o", "\u001b[?25ln\u001b[?25h"]
[661.088959, "o", "\u001b[?25le\u001b[?25h"]
[661.232892, "o", "\u001b[?25l \u001b[?25h"]
[661.585182, "o", "\u001b[?25lS\u001b[?25h"]
[661.689069, "o", "\u001b[?25lE\u001b[?25h"]
[661.832845, "o", "\u001b[?25lT\u001b[?25h"]
[663.249209, "o", "\u001b[?25lU\u001b[?25h"]
[663.361345, "o", "\u001b[?25lP\u001b[?25h"]
[664.450507, "o", "\u001b[?25l(\u001b[?25h"]
[664.545805, "o", "\u001b[?25l\b\u001b[46m()\u001b[?25h"]
[664.950101, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[29;15H"]
[665.024596, "o", "\u001b[?25l"]
[665.025836, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[29;15H\u001b[?25h"]
[665.217882, "o", "\u001b[?25l\u001b[ms\u001b[46m)\b\u001b[?25h"]
[665.868018, "o", "\u001b[?25l\u001b[m\u001b[38;5;81m^L\u001b[m\u001b[46m)\b\u001b[?25h"]
[666.619635, "o", "\u001b[?25l\b\b)\u001b[m   \b\b\b\b\u001b[?25h"]
[666.816675, "o", "\u001b[48;1H\u001b[K\u001b[29;15H"]
[667.018109, "o", "\u001b[?25l"]
[667.019188, "o", "\b(s)\b\b\u001b[?25h\u001b[?25l\b\u001b[46m(\u001b[ms\u001b[46m)\b\u001b[?25h"]
[668.553926, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[29;17H\u001b[?25h"]
[669.546463, "o", "\u001b[?25l\u001b[m\b\b\b(s) \u001b[?25h"]
[670.128855, "o", "\u001b[48;1H\u001b[K\u001b[29;17H"]
[670.147536, "o", "\u001b[?25l"]
[670.148118, "o", "\u001b[?25h\u001b[30;17H"]
[670.330652, "o", "\r\n"]
[670.498959, "o", "\u001b[?25l\r\n    \u001b[46m{\u001b[41;5H}\u001b[32;5H\u001b[?25h"]
[670.66668, "o", "\u001b[?25l\u001b[m{\u001b[41;5H}\u001b[33;17H\u001b[?25h"]
[671.43384, "o", "\u001b[?25l\u001b[48;1H3 lines yanked\u001b[33;17H\u001b[?25h"]
[671.619203, "o", "\u001b[?25l\u001b[32;5H\u001b[46m{\u001b[41;5H}\u001b[32;5H\u001b[?25h"]
[671.778767, "o", "\u001b[?25l\u001b[m{\u001b[41;5H}\u001b[31;1H\u001b[?25h"]
[671.9625, "o", "\u001b[30;17H"]
[672.1306, "o", "\u001b[29;17H"]
[673.666624, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[48;13H\u001b[K\u001b[29;18H\u001b[?25h"]
[673.802476, "o", "\u001b[?25l\\\u001b[?25h"]
[674.458665, "o", "\u001b[?25l\r\n                                                                                               \r\nint main(int argc, char** argv) {                                                              \r\n                                                                                               \r\n    {                                                                                          \r\n        Lexer lexer = {0};                                                                     \r\n        Lexer_Init(&lexer);                                                                    \r\n        Lexer_SetSource(&lexer, \"();\");                                                        \r\n        assert(Lexer_NextToken(&lexer)== TOK_LPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_RPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);                                       \r\n        assert(Lexer_NextToken(&lexer)== TOK_E"]
[674.458724, "o", "OF); // reach the end                            \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing                           \r\n    }                                                                                          \r\n                                                                                               \r\n    printf(\"all test passed\");                                                                 \r\n    return 0;                                                                                  \r\n}                                                                                              \u001b[30;1H\u001b[?25h"]
[674.831158, "o", "\u001b[48;1H\u001b[K\u001b[30;1H"]
[674.938369, "o", "\u001b[?25l"]
[674.938648, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H3 more lines"]
[674.939206, "o", "\u001b[31;1H                                                                                               \r\n                                                                                               \r\n                                                                                               \r\nint main(int argc, char** argv) {                                                              \r\n                                                                                               \r\n    {                                                                                          \r\n        Lexer lexer = {0};                                                                     \r\n        Lexer_Init(&lexer);                                                                    \r\n        Lexer_SetSource(&lexer, \"();\");                                                        \r\n        assert(Lexer_NextToken(&lexer)== TOK_LPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_RP"]
[674.939387, "o", "AREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);                                       \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // reach the end                            \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing                           \r\n    }                                                                                          \r\n                                                                                               \u001b[31;9HLexer lexer = {0};\u001b[32;9HLexer_Init(&lexer);\u001b[33;9HLexer_SetSource(&lexer, \"();\");\u001b[48;1H\u001b[K\u001b[48;1H3 more lines\u001b[31;9H\u001b[?25h"]
[675.522705, "o", "\u001b[30;1H"]
[675.931249, "o", "\u001b[?25l        Lexer lexer = {0};                                                                     \r\n        Lexer_Init(&lexer);                                                                    \r\n        Lexer_SetSource(&lexer, \"();\");                                                        \r\nint main(int argc, char** argv) {                                                              \r\n                                                                                               \r\n    {                                                                                          \r\n        Lexer lexer = {0};                                                                     \r\n        Lexer_Init(&lexer);                                                                    \r\n        Lexer_SetSource(&lexer, \"();\");                                                        \r\n        assert(Lexer_NextToken(&lexer)== TOK_LPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_RPA"]
[675.931468, "o", "REN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);                                       \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // reach the end                            \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing                           \r\n    }                                                                                          \r\n                                                                                               \r\n                                                                                               \r    printf(\"all test passed\");\u001b[48;1H\u001b[K\u001b[30;9H\u001b[?25h"]
[676.330669, "o", "\u001b[17C"]
[676.546875, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[30;27H\u001b[?25h"]
[676.610801, "o", "\u001b[?25l\u001b[m \u001b[?25h"]
[676.698867, "o", "\u001b[?25l\\\u001b[?25h"]
[676.91922, "o", "\u001b[48;1H\u001b[K\u001b[30;28H"]
[677.050282, "o", "\u001b[?25l"]
[677.050913, "o", "\u001b[?25h\u001b[31;27H"]
[677.226659, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[31;28H\u001b[?25h"]
[677.362799, "o", "\u001b[?25l\u001b[m \u001b[?25h"]
[677.474861, "o", "\u001b[?25l\\\u001b[?25h"]
[677.652885, "o", "\u001b[48;1H\u001b[K\u001b[31;29H"]
[677.826374, "o", "\u001b[?25l"]
[677.826967, "o", "\u001b[?25h\u001b[32;29H"]
[677.994757, "o", "\u001b[10C"]
[678.250787, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[32;40H\u001b[?25h"]
[678.331, "o", "\u001b[?25l\u001b[m \u001b[?25h"]
[678.490625, "o", "\u001b[?25l\\\u001b[?25h"]
[678.629725, "o", "\u001b[48;1H\u001b[K\u001b[32;41H"]
[678.810158, "o", "\u001b[?25l"]
[678.810733, "o", "\u001b[?25h\u001b[32;33H"]
[678.898597, "o", "\b"]
[678.986644, "o", "\b"]
[679.242694, "o", ","]
[679.426737, "o", " "]
[679.667617, "o", "\u001b[?25l\u001b[46m()\u001b[m;\"); \\ \u001b[32;33H\u001b[?25h"]
[679.70711, "o", "\u001b[?25l\u001b[1C\u001b[?25h"]
[679.874719, "o", "\u001b[?25l\b()\u001b[?25h"]
[680.170956, "o", "\u001b[?25l\"); \\ \b\b\b\b\b\b\u001b[?25h"]
[680.323853, "o", "\u001b[?25l\u001b[32;24H\u001b[46m(\u001b[10C)\u001b[m; \\ \b\b\b\b\b\u001b[?25h"]
[680.435118, "o", "\u001b[?25l\u001b[32;24H(\u001b[8C\u001b[46m()\u001b[m)\b\b\u001b[?25h"]
[680.659077, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[32;34H\u001b[?25h"]
[680.723717, "o", "\u001b[?25l\u001b[ms\u001b[46m)\u001b[m); \\\b\b\b\b\b\u001b[?25h"]
[681.069883, "o", "\u001b[48;1H\u001b[K\u001b[32;34H"]
[681.754887, "o", "\u001b[?25l"]
[681.755368, "o", "\b(s)\b\b\u001b[?25h"]
[681.978746, "o", "\u0007"]
[682.984037, "o", "\u0007"]
[683.235334, "o", "s)); "]
[683.54696, "o", "\u001b[?25l \b\b\u001b[?25h"]
[683.699133, "o", "\u001b[?25l\b\u001b[?25h"]
[684.459143, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[33;1H                                                                                               \r\nint main(int argc, char** argv) {                                                              \r\n                                                                                               \r\n    {                                                                                          \r\n        Lexer lexer = {0};                                                                     \r\n        Lexer_Init(&lexer);                                                                    \r\n        Lexer_SetSource(&lexer, \"();\");                                                        \r\n        assert(Lexer_NextToken(&lexer)== TOK_LPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_RPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);                                       \r\n        assert("]
[684.459384, "o", "Lexer_NextToken(&lexer)== TOK_EOF); // reach the end                            \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing                           \r\n    }                                                                                          \r\n                                                                                               \u001b[33;9H\u001b[?25h"]
[685.936958, "o", "\u001b[48;1H\u001b[K\u001b[33;1H"]
[685.986631, "o", "\u001b[?25l"]
[685.987802, "o", "\u001b[?25h\u001b[?25l\u001b[34;9H\u001b[46m(\u001b[21C)\u001b[34;9H\u001b[?25h"]
[686.171142, "o", "\u001b[?25l\u001b[m(\u001b[21C)\r\n\u001b[?25h"]
[686.339546, "o", "\u001b[?25l\r\n    \u001b[46m{\u001b[45;5H}\u001b[36;5H\u001b[?25h"]
[686.683285, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[36;5H{\u001b[37;9H                  \u001b[38;14H lexer = {0}; \u001b[39;15HInit(&lexer);            \u001b[40;9HLexer_SetSource(&lexer, \"();\");              \u001b[41;46HL\u001b[42;46HRPAREN);   \u001b[43;46HSEMICOLON);           \u001b[44;55Hreach the end \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing\r\n    }\u001b[37;5H\u001b[?25h"]
[687.027261, "o", "\u001b[?25l    \u001b[?25h"]
[687.491155, "o", "\u001b[?25lS\u001b[?25h"]
[687.715314, "o", "\u001b[?25lE\u001b[?25h"]
[687.827102, "o", "\u001b[?25lT\u001b[?25h"]
[688.227124, "o", "\u001b[?25lU\u001b[?25h"]
[688.291055, "o", "\u001b[?25lP\u001b[?25h"]
[688.525284, "o", "\u001b[?25l(\u001b[?25h"]
[688.611781, "o", "\u001b[?25l\b\u001b[46m()\u001b[?25h"]
[689.654882, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[37;15H"]
[689.834783, "o", "\u001b[?25l"]
[689.835901, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[37;15H\u001b[?25h"]
[689.963882, "o", "\u001b[?25l\u001b[ms\u001b[46m)\b\u001b[?25h"]
[690.32106, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[37;15H"]
[690.402854, "o", "\u001b[?25l"]
[690.403486, "o", "\b(s)\b\b\u001b[?25h\u001b[38;15H"]
[690.691216, "o", "\u001b[?25l\r        Lexer_SetSource(&lexer, \"();\");                                                        \r\n        assert(Lexer_NextToken(&lexer)== TOK_LPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_RPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);                                       \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // reach the end                            \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing                           \r\n    }                                                                                          \r\n                                                                                               \r\n                                                                                               \r    printf(\"all test passed\");\u001b[38;9H\u001b[?25h"]
[691.85095, "o", "\u001b[37;9H"]
[692.1632, "o", "\u001b[?25lSETUP\u001b[46m(\u001b[ms\u001b[46m)\b\b\b\u001b[?25h"]
[692.27509, "o", "\u001b[?25l\u001b[m(s)\b\b\u001b[?25h"]
[692.675948, "o", "\u001b[?25l\b\u001b[46m()\u001b[m \b\b\u001b[?25h"]
[692.747353, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[37;15H\u001b[?25h"]
[693.035989, "o", "\u001b[?25l\u001b[m\"\u001b[46m)\b\u001b[?25h"]
[693.171958, "o", "\u001b[?25l\u001b[m\"\u001b[46m)\b\u001b[?25h"]
[693.479576, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[37;16H"]
[693.546842, "o", "\u001b[?25l"]
[693.547386, "o", "\b\b(\"\")\b\b\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[37;16H\u001b[?25h"]
[693.931957, "o", "\u001b[?25l\u001b[m\u001b[46m(\u001b[m\"\u001b[46m)\b\b\u001b[?25h"]
[693.962514, "o", "\u001b[?25l)\u001b[m\")\b\b\u001b[?25h"]
[694.427221, "o", "\u001b[?25l\b\b();\")\b\b\u001b[?25h"]
[694.599993, "o", "\u001b[48;1H\u001b[K\u001b[37;18H"]
[694.682884, "o", "\u001b[?25l"]
[694.683458, "o", "\u001b[?25h\u001b[38;18H"]
[695.035349, "o", "\u001b[?25l\r        assert(Lexer_NextToken(&lexer)== TOK_LPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_RPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);                                       \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // reach the end                            \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing                           \r\n    }                                                                                          \r\n                                                                                               \r\n    printf(\"all test passed\");                                                                 \r\n                                                                                               \r    return 0;\u001b[38;9H\u001b[?25h"]
[695.386559, "o", "\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[695.587072, "o", "w"]
[695.642865, "o", "\r"]
[695.643284, "o", "\u001b[?25l\"src/lexer_test.c\""]
[695.667184, "o", " 23L, 594B written"]
[695.667813, "o", "\u001b[47;18H\u001b[1m\u001b[7m    \u001b[38;9H\u001b[?25h"]
[696.874528, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[697.210745, "o", "!"]
[697.611247, "o", "\u001b[?25lmake test\u001b[?25h"]
[697.747031, "o", "\r"]
[697.74711, "o", "\u001b[?25l\u001b[11C\u001b[?1004l\u001b[?2004l\u001b[?1l\u001b>\u001b[?25h\u001b[>4;m\u001b[?1049l\r\n"]
[697.774253, "o", "clang    -c -o src/lexer_test.o src/lexer_test.c\r\n"]
[697.855387, "o", "clang   src/lexer_test.o src/lexer.o   -o src/lexer_test\r\n"]
[697.941399, "o", "./src/lexer_test\r\n"]
[697.944576, "o", "all test passed"]
[697.948337, "o", "\r\nPress ENTER or type command to continue"]
[698.611105, "o", "\u001b[?1049h\u001b[>4;2m\u001b[?1h\u001b=\u001b[?2004h\u001b[?1004h"]
[698.611713, "o", "\u001b[27m\u001b[29m\u001b[m\u001b[H\u001b[2J\u001b[?25l\u001b[1;1H\u001b[93m 18 \u001b[m\u001b[12Creturn TOK_COMMA;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 17 \u001b[m\u001b[8Ccase ':':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m 16 \u001b[m\u001b[12Clexer->column++;\u001b[63C\u001b[7m|\u001b[m\r\n\u001b[93m 15 \u001b[m\u001b[12Clexer->current++;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 14 \u001b[m\u001b[12Creturn TOK_COLON;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 13 \u001b[m\u001b[8Cdefault:\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m 12 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m 11 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m 10 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  9 \u001b[m}\u001b[90C\u001b[7m|\u001b[m\r\n\u001b[93m  8 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[mToken Lexer_NextToken(Lexer *lexer) {\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m    char c = Lexer_GetChar(lexer, 0);\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m    switch (c) {\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[8Ccase '\\0':\u001b[73C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[12Creturn TOK_EOF;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8Ccase ';': case '{': case '(': case '[':\u001b[44C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[8Ccase '}': case ')': case ']': case ',':\u001b[44C\u001b[7m|\u001b[m\r\n\u001b[93m  0 \u001b[m\u001b[8Ccase ':':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[12Creturn Lexer_NextOp(lexer);\u001b[52C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8Cdefault:\u001b["]
[698.611898, "o", "75C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\r\nsrc/lexer.c                                                                                    |\u001b[m\r\n#include <stdio.h>\u001b[77C\u001b[7m|\u001b[m\r\n#include <assert.h>\u001b[76C\u001b[7m|\u001b[m\r\n#include \"lexer.h\"\u001b[77C\u001b[7m|\u001b[28;96H|\u001b[m\r\n#define SETUP(s) \\\u001b[77C\u001b[7m|\u001b[m\u001b[30;9HLexer lexer = {0}; \\\u001b[67C\u001b[7m|\u001b[m\u001b[31;9HLexer_Init(&lexer); \\\u001b[66C\u001b[7m|\u001b[m\u001b[32;9HLexer_SetSource(&lexer, (s));\u001b[58C\u001b[7m|\u001b[33;96H|\u001b[m\r\nint main(int argc, char** argv) {\u001b[62C\u001b[7m|\u001b[35;96H|\u001b[m\r\n    {\u001b[90C\u001b[7m|\u001b[m\u001b[37;9HSETUP(\"();\")\u001b[75C\u001b[7m|\u001b[m\u001b[38;9Hassert(Lexer_NextToken(&lexer)== TOK_LPAREN);\u001b[42C\u001b[7m|\u001b[m\u001b[39;9Hassert(Lexer_NextToken(&lexer)== TOK_RPAREN);\u001b[42C\u001b[7m|\u001b[m\u001b[40;9Hassert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);\u001b[39C\u001b[7m|\u001b[m\u001b[41;9Hassert(Lexer_NextToken(&lexer)== TOK_EOF); // reach the end\u001b[28C\u001b[7m|\u001b[m\u001b[42;9Hassert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing"]
[698.612033, "o", "\u001b[27C\u001b[7m|\u001b[m\r\n    }\u001b[90C\u001b[7m|\u001b[44;96H|\u001b[m\r\n    printf(\"all test passed\");\u001b[65C\u001b[7m|\u001b[m\r\n    return 0;\u001b[82C\u001b[7m|\u001b[m\r\n\u001b[1m\u001b[7msrc/lexer_test.c                                                                                \u001b[m\u001b[1;97HCC=clang\u001b[3;97Hsrc/lexer_test: src/lexer.o src/lexer_test.o\u001b[5;97Htest: src/lexer_test\u001b[6;101H./src/lexer_test\u001b[7;97H\u001b[94m~                                                                                              \u001b[8;97H~                                                                                              \u001b[9;97H~                                                                                              \u001b[10;97H~                                                                                              \u001b[11;97H~                                                                                              \u001b[12;97H~                                                                                              \u001b[13;97H~                                                      "]
[698.612191, "o", "                                        \u001b[14;97H~                                                                                              \u001b[15;97H~                                                                                              \u001b[16;97H~                                                                                              \u001b[17;97H~                                                                                              \u001b[18;97H~                                                                                              \u001b[19;97H~                                                                                              \u001b[20;97H~                                                                                              \u001b[21;97H~                                                                                              \u001b[22;97H~                                                                                              "]
[698.612405, "o", "\u001b[23;97H~                                                                                              \u001b[m\u001b[24;97H\u001b[7mMakefile                                                                                       \u001b[m\u001b[25;97H#define LEXER_H\u001b[27;97H#include <stdlib.h>\u001b[29;97Htypedef enum LexerError {\u001b[30;101HLEX_EOK,\u001b[31;101HLEX_EUNKNOWN,\u001b[32;97H} LexerError;\u001b[34;97Htypedef enum Token {\u001b[35;101HTOK_ERR,\u001b[36;101HTOK_EOF,\u001b[37;101HTOK_SEMICOLON,\u001b[38;101HTOK_LBRACE,\u001b[39;101HTOK_LPAREN,\u001b[40;101HTOK_LBRACKET,\u001b[41;101HTOK_RBRACE,\u001b[42;101HTOK_RPAREN,\u001b[43;101HTOK_RBRACKET,\u001b[44;101HTOK_COMMA,\u001b[45;101HTOK_COLON,\u001b[46;97H} Token;\u001b[47;97H\u001b[7msrc/lexer.h                                                                                    \u001b[38;9H\u001b[?25h"]
[698.987283, "o", "\u001b[37;9H"]
[699.163619, "o", "\u001b[?25l\u001b[m\u001b[36;5H\u001b[46m{\u001b[43;5H}\u001b[36;5H\u001b[?25h"]
[699.347173, "o", "\u001b[?25l\u001b[m{\u001b[43;5H}\u001b[35;1H\u001b[?25h"]
[699.499572, "o", "\u001b[?25l\u001b[34;9H\u001b[46m(\u001b[21C)\u001b[34;9H\u001b[?25h"]
[699.683188, "o", "\u001b[?25l\u001b[m(\u001b[21C)\u001b[33;1H\u001b[?25h"]
[700.043824, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[34;1H                                                                                               \r\nint main(int argc, char** argv) {                                                              \r\n                                                                                               \r\n    {                                                                                          \r\n        SETUP(\"();\")                                                                           \r\n        assert(Lexer_NextToken(&lexer)== TOK_LPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_RPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);                                       \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // reach the end                            \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing                           \r\n    }          "]
[700.043926, "o", "                                                                                \r\n                                                                                               \r\n    printf(\"all test passed\");                                                                 \u001b[47;18H\u001b[1m\u001b[7m[+]\u001b[34;1H\u001b[?25h"]
[700.891343, "o", "\u001b[?25l\u001b[m#\u001b[?25h"]
[701.179397, "o", "\u001b[?25ld\u001b[?25h"]
[701.379035, "o", "\u001b[?25le\u001b[?25h"]
[701.547174, "o", "\u001b[?25lf\u001b[?25h"]
[701.667409, "o", "\u001b[?25li\u001b[?25h"]
[701.739504, "o", "\u001b[?25ln\u001b[?25h"]
[701.77914, "o", "\u001b[?25le\u001b[?25h"]
[701.947301, "o", "\u001b[?25l \u001b[?25h"]
[703.171261, "o", "\u001b[?25lT\u001b[?25h"]
[703.235393, "o", "\u001b[?25lE\u001b[?25h"]
[703.491505, "o", "\u001b[?25lS\u001b[?25h"]
[703.635467, "o", "\u001b[?25lT\u001b[?25h"]
[704.155416, "o", "\u001b[?25lN\u001b[?25h"]
[704.763324, "o", "\u001b[?25lE\u001b[?25h"]
[705.051597, "o", "\u001b[?25lX\u001b[?25h"]
[705.539409, "o", "\u001b[?25lT\u001b[?25h"]
[705.949126, "o", "\u001b[?25l(\u001b[?25h"]
[705.988058, "o", "\u001b[?25l\b\u001b[46m()\u001b[?25h"]
[706.374623, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[34;18H"]
[707.259001, "o", "\u001b[?25l"]
[707.260433, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[34;18H\u001b[?25h"]
[709.452097, "o", "\u001b[?25l\u001b[mt\u001b[46m)\b\u001b[?25h"]
[710.358615, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[34;18H"]
[710.458941, "o", "\u001b[?25l"]
[710.459982, "o", "\b(t)\b\b\u001b[?25h\u001b[?25l\b\u001b[46m(\u001b[mt\u001b[46m)\b\u001b[?25h"]
[710.755585, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[34;20H\u001b[?25h"]
[710.963599, "o", "\u001b[?25l\u001b[m\b\b\b(t) \u001b[?25h"]
[711.099585, "o", "\u001b[?25l\\\u001b[?25h"]
[711.935892, "o", "\u001b[48;1H\u001b[K\u001b[34;21H"]
[711.938938, "o", "\u001b[?25l"]
[711.939757, "o", "\u001b[?25h\u001b[35;21H"]
[712.440719, "o", "\r\n"]
[712.524861, "o", "\u001b[?25l\r\n    \u001b[46m{\u001b[44;5H}\u001b[37;5H\u001b[?25h"]
[712.608922, "o", "\u001b[?25l\u001b[m{\u001b[38;14H\u001b[46m(\u001b[m\"();\"\u001b[46m)\u001b[m\u001b[44;5H}\u001b[38;20H\u001b[?25h"]
[712.69264, "o", "\u001b[?25l\b\b\b\b\b\b(\"();\")\u001b[39;21H\u001b[?25h"]
[713.571925, "o", "\u001b[?25l\u001b[38;14H\u001b[46m(\u001b[m\"();\"\u001b[46m)\b\u001b[?25h"]
[713.716021, "o", "\u001b[?25l\u001b[37;5H{\u001b[m\u001b[38;14H(\"();\")\u001b[44;5H\u001b[46m}\u001b[37;5H\u001b[?25h"]
[713.883549, "o", "\u001b[?25l\u001b[m{\u001b[44;5H}\u001b[36;1H\u001b[?25h"]
[714.051622, "o", "\u001b[35;21H"]
[714.235533, "o", "\u001b[34;21H"]
[714.619799, "o", "\u001b[?25l\r\n                                                                                               \r\nint main(int argc, char** argv) {                                                              \r\n                                                                                               \r\n    {                                                                                          \r\n        SETUP(\"();\")                                                                           \r\n        assert(Lexer_NextToken(&lexer)== TOK_LPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_RPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);                                       \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // reach the end                            \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing                           \r\n    }                                         "]
[714.62002, "o", "                                                 \r\n                                                                                               \u001b[35;9Hassert(Lexer_NextToken(&lexer)== TOK_LPAREN);\u001b[35;9H\u001b[?25h"]
[715.595466, "o", "\u001b[44C"]
[715.883973, "o", "\u001b[?25l\u001b[35;15H\u001b[46m(\u001b[36C)\b\u001b[?25h"]
[716.219296, "o", "\u001b[?25l\u001b[m\u001b[35;15H(\u001b[36C)\u001b[35;42H\u001b[?25h"]
[716.580449, "o", "\u001b[?25l\u001b[35;15H\u001b[46m(\u001b[26C)\u001b[m;          \u001b[35;42H\u001b[?25h"]
[716.667924, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[35;42H\u001b[?25h"]
[716.980358, "o", "\u001b[?25l\u001b[m\u001b[35;15H(\u001b[26C\u001b[46m()\u001b[m;\b\b\u001b[?25h"]
[717.044675, "o", "\u001b[?25l\u001b[35;15H\u001b[46m(\u001b[m\u001b[26C()\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[717.359979, "o", "\u001b[48;1H\u001b[K\u001b[35;43H"]
[717.626804, "o", "\u001b[?25l"]
[717.628402, "o", "\u001b[35;15H(\u001b[26C\u001b[46m()\u001b[m)\b\b\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[35;43H\u001b[?25h"]
[717.716775, "o", "\u001b[?25l\u001b[mt\u001b[46m)\u001b[m);\b\b\b\u001b[?25h"]
[718.080792, "o", "\u001b[48;1H\u001b[K\u001b[35;43H"]
[718.211291, "o", "\u001b[?25l"]
[718.212259, "o", "\b(t)\b\b\u001b[?25h\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[36;1H                                                                                               \r\nint main(int argc, char** argv) {                                                              \r\n                                                                                               \r\n    {                                                                                          \r\n        SETUP(\"();\")                                                                           \r\n        assert(Lexer_NextToken(&lexer)== TOK_LPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_RPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);                                       \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // reach the end                            \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing                           \r\n   "]
[718.212456, "o", " }                                                                                          \u001b[36;9H\u001b[?25h"]
[718.376745, "o", "\u001b[48;1H\u001b[K\u001b[36;1H"]
[718.595351, "o", "\u001b[?25l"]
[718.595941, "o", "\u001b[?25h\u001b[35;9H"]
[719.019546, "o", "\u001b[37C"]
[719.98757, "o", "\r\n"]
[720.180067, "o", "\u001b[37;33H"]
[720.411817, "o", "\r\n"]
[720.70009, "o", "\u001b[?25l\r\n    \u001b[46m{\u001b[46;5H}\u001b[39;5H\u001b[?25h"]
[720.980156, "o", "\u001b[?25l\u001b[m{\u001b[40;14H\u001b[46m(\u001b[m\"();\"\u001b[46m)\u001b[m\u001b[46;5H}\u001b[40;20H\u001b[?25h"]
[722.299952, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[41;1H                                                                                               \r\n        assert(Lexer_NextToken(&lexer)== TOK_LPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_RPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);                                       \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // reach the end                            \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing                           \u001b[40;14H(\"();\")\u001b[41;9H\u001b[?25h"]
[722.667846, "o", "\u001b[?25lT\u001b[?25h"]
[722.755927, "o", "\u001b[?25lE\u001b[?25h"]
[722.995867, "o", "\u001b[?25lS\u001b[?25h"]
[723.139898, "o", "\u001b[?25lT\u001b[?25h"]
[723.299865, "o", "\u001b[?25lN\u001b[?25h"]
[723.371897, "o", "\u001b[?25lE\u001b[?25h"]
[723.65981, "o", "\u001b[?25lX\u001b[?25h"]
[724.05996, "o", "\u001b[?25lT\u001b[?25h"]
[724.52527, "o", "\u001b[?25l(\u001b[?25h"]
[724.60456, "o", "\u001b[?25l\b\u001b[46m()\u001b[?25h"]
[724.971612, "o", "\u001b[?25l\u001b[m\b\b();\u001b[?25h"]
[725.189104, "o", "\u001b[48;1H\u001b[K\u001b[41;19H"]
[726.191738, "o", "\u001b[?25l"]
[726.192258, "o", "\u001b[?25h"]
[726.363861, "o", "\u001b[?25l\u001b[25;1H        Lexer_Init(&lexer); \\\r\n        Lexer_SetSource(&lexer, (s));\r\n                  \r\n#define TESTNEXT(t) \\\r\n        assert(Lexer_NextToken(&lexer)== (t));\u001b[30;9H                    \r\nint main(int argc, char** argv) {\u001b[32;9H                             \r\n    {\r\n        SETUP(\"();\") \u001b[35;9HTESTNEXT();                           \u001b[36;9Hassert(Lexer_NextToken(&lexer)== TOK_LPAREN);\r\n        assert(Lexer_NextToken(&lexer)== TOK_RPAREN);\u001b[38;9Hassert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);\r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // reach the end\u001b[40;9Hassert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing\r\n    }              \u001b[42;9H                                             \r\n    printf(\"all test passed\");                       \r\n    return 0;                                           \r\n}\u001b[7C                                                           \r\n\u001b[94m~                                                                                              \u001b[35;19H\u001b[?25h"]
[726.900019, "o", "\u001b[?25l\u001b[m\r        assert(Lexer_NextToken(&lexer)== TOK_LPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_RPAREN);                                          \r\n        assert(Lexer_NextToken(&lexer)== TOK_SEMICOLON);                                       \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // reach the end                            \r\n        assert(Lexer_NextToken(&lexer)== TOK_EOF); // no more lexing                           \r\n    }                                                                                          \r\n                                                                                               \r\n    printf(\"all test passed\");                                                                 \r\n    return 0;                                                                                  \r\n}                                                                                              \r\n\u001b[94m~                                      "]
[726.900251, "o", "                                                        \u001b[m\r\n                                                                                               \r\u001b[94m~                                                                                              \u001b[35;9H\u001b[?25h"]
[729.251713, "o", "\r"]
[730.939443, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1mrecording @a\u001b[35;1H\u001b[?25h"]
[733.155949, "o", "\u001b[8C"]
[733.587658, "o", "\u001b[?25l\u001b[48;1H--c\b VISUAL --\u001b[m \b\u001b[1mrecording @a\u001b[35;9H\u001b[?25h"]
[735.164034, "o", "\u001b[?25l\u001b[m\u001b[48;5;242massert(Lexer_NextToken(&lexer)\u001b[?25h"]
[735.563921, "o", "\u001b[?25l=\u001b[?25h"]
[735.74809, "o", "\u001b[?25l=\u001b[?25h"]
[736.588168, "o", "\u001b[?25l\u001b[m\u001b[35;9HTOK_LPAREN);                                 \u001b[48;1H\u001b[1mrecording @ar\u001b[m\u001b[48;13H\u001b[K\u001b[35;9H\u001b[?25h"]
[738.939839, "o", "\u001b[?25l\u001b[48;1H\u001b[1m--c\b INSERT --\u001b[m \b\u001b[1mrecording @a\u001b[35;9H\u001b[?25h"]
[739.436241, "o", "\u001b[?25l\u001b[mTTOK_LPAREN);\u001b[35;10H\u001b[?25h"]
[739.548018, "o", "\u001b[?25lETOK_LPAREN);\u001b[35;11H\u001b[?25h"]
[739.771989, "o", "\u001b[?25lSTOK_LPAREN);\u001b[35;12H\u001b[?25h"]
[739.916271, "o", "\u001b[?25lTTOK_LPAREN);\u001b[35;13H\u001b[?25h"]
[740.380038, "o", "\u001b[?25lNTOK_LPAREN);\u001b[35;14H\u001b[?25h"]
[740.444326, "o", "\u001b[?25lETOK_LPAREN);\u001b[35;15H\u001b[?25h"]
[740.732183, "o", "\u001b[?25lXTOK_LPAREN);\u001b[35;16H\u001b[?25h"]
[741.10032, "o", "\u001b[?25lTTOK_LPAREN);\u001b[35;17H\u001b[?25h"]
[741.204965, "o", "\u001b[?25l\u001b[46m(\u001b[mTOK_LPAREN\u001b[46m)\u001b[m;\u001b[35;18H\u001b[?25h"]
[741.533705, "o", "\u001b[48;1H\u001b[1mrecording @ar\u001b[m\u001b[48;13H\u001b[K\u001b[35;17H"]
[742.540078, "o", "\u001b[?25l\u001b[?25h"]
[743.779884, "o", "\u001b[?25l(\u001b[10C)\u001b[36;17H\u001b[?25h"]
[744.284096, "o", "\r"]
[744.715518, "o", "\u001b[?25l\u001b[48;1H\u001b[K"]
[744.715747, "o", "\u001b[36;1H\u001b[?25h"]
[747.958238, "o", "\u001b[8C\u001b[?25l\u001b[?25h\u001b[?25l\u001b[48;5;242massert(Lexer_NextToken(&lexer)\u001b[?25h\u001b[?25l=\u001b[?25h\u001b[?25l=\u001b[?25h\u001b[?25l\u001b[m\u001b[36;9HTOK_RPAREN);                                 \u001b[36;9H\u001b[?25h\u001b[?25lTESTNEXT\u001b[46m(\u001b[mTOK_RPAREN\u001b[46m)\u001b[m;\u001b[36;17H\u001b[?25h\u001b[?25l(\u001b[10C)\u001b[37;17H\u001b[?25h\r\u001b[8C\u001b[?25l\u001b[?25h\u001b[?25l\u001b[48;5;242massert(Lexer_NextToken(&lexer)\u001b[?25h\u001b[?25l=\u001b[?25h\u001b[?25l=\u001b[?25h\u001b[?25l\u001b[m\u001b[37;9HTOK_SEMICOLON);                                 \u001b[37;9H\u001b[?25h\u001b[?25lTESTNEXT\u001b[46m(\u001b[mTOK_SEMICOLON\u001b[46m)\u001b[m;\u001b[37;17H\u001b[?25h\u001b[?25l(\u001b[13C)\u001b[38;17H\u001b[?25h\r\u001b[8C\u001b[?25l\u001b[?25h\u001b[?25l\u001b[48;5;242massert(Lexer_NextToken(&lexer)\u001b[?25h\u001b[?25l=\u001b[?25h\u001b[?25l=\u001b[?25h\u001b[?25l\u001b[m\u001b[38;9HTOK_EOF); // reach the end                                 \u001b[38;9H\u001b[?25h\u001b[?25lTESTNEXT\u001b[46m(\u001b[mTOK_EOF\u001b[46m)\u001b[m; // reach the end\u001b[38;17H\u001b[?25h\u001b[?25l(\u001b[7C)\u001b[39;17H\u001b[?25h\r\u001b[8C\u001b[?25l\u001b[?25h\u001b[?25l\u001b[48;5;242massert(Lexer_NextToken(&lexer)\u001b[?25h\u001b[?25l=\u001b[?25h\u001b[?25l=\u001b[?25h\u001b[?25l\u001b[m\u001b[39;9HTOK_EOF); // no more lexing                                 \u001b[39;9H\u001b[?25h\u001b[?25lTESTNEXT\u001b[46m(\u001b[mTOK_EOF\u001b[46m)\u001b[m; // n"]
[747.958448, "o", "o more lexing\u001b[39;17H\u001b[?25h\u001b[?25l\u001b[33;5H\u001b[46m{\u001b[m\u001b[39;17H(\u001b[7C)\r\n    \u001b[46m}\b\u001b[?25h\u001b[?25l\u001b[m\u001b[33;5H{\u001b[40;5H}\r\u001b[?25h"]
[749.076263, "o", "\u001b[39;1H"]
[749.571974, "o", "\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[749.763994, "o", "w"]
[749.852162, "o", "\r"]
[749.852542, "o", "\u001b[?25l\"src/lexer_test.c\""]
[749.872534, "o", " 26L, 544B written"]
[749.873054, "o", "\u001b[47;18H\u001b[1m\u001b[7m    \u001b[39;1H\u001b[?25h"]
[750.148091, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[750.371719, "o", "!"]
[750.788363, "o", "\u001b[?25lmake test\u001b[?25h"]
[750.908234, "o", "\r\u001b[?25l\u001b[11C\u001b[?1004l\u001b[?2004l\u001b[?1l\u001b>\u001b[?25h\u001b[>4;m\u001b[?1049l\r\n"]
[750.936258, "o", "clang    -c -o src/lexer_test.o src/lexer_test.c\r\n"]
[751.020194, "o", "clang   src/lexer_test.o src/lexer.o   -o src/lexer_test\r\n"]
[751.102196, "o", "./src/lexer_test\r\n"]
[751.105876, "o", "all test passed"]
[751.111076, "o", "\r\nPress ENTER or type command to continue"]
[751.756434, "o", "\u001b[?1049h\u001b[>4;2m\u001b[?1h\u001b=\u001b[?2004h\u001b[?1004h"]
[751.757056, "o", "\u001b[27m\u001b[29m\u001b[m\u001b[H\u001b[2J\u001b[?25l\u001b[1;1H\u001b[93m 18 \u001b[m\u001b[12Creturn TOK_COMMA;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 17 \u001b[m\u001b[8Ccase ':':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m 16 \u001b[m\u001b[12Clexer->column++;\u001b[63C\u001b[7m|\u001b[m\r\n\u001b[93m 15 \u001b[m\u001b[12Clexer->current++;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 14 \u001b[m\u001b[12Creturn TOK_COLON;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 13 \u001b[m\u001b[8Cdefault:\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m 12 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m 11 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m 10 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  9 \u001b[m}\u001b[90C\u001b[7m|\u001b[m\r\n\u001b[93m  8 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[mToken Lexer_NextToken(Lexer *lexer) {\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m    char c = Lexer_GetChar(lexer, 0);\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m    switch (c) {\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[8Ccase '\\0':\u001b[73C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[12Creturn TOK_EOF;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8Ccase ';': case '{': case '(': case '[':\u001b[44C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[8Ccase '}': case ')': case ']': case ',':\u001b[44C\u001b[7m|\u001b[m\r\n\u001b[93m  0 \u001b[m\u001b[8Ccase ':':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[12Creturn Lexer_NextOp(lexer);\u001b[52C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8Cdefault:\u001b["]
[751.75715, "o", "75C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\r\nsrc/lexer.c                                                                                    |\u001b[m\u001b[25;9HLexer_Init(&lexer); \\\u001b[66C\u001b[7m|\u001b[m\u001b[26;9HLexer_SetSource(&lexer, (s));\u001b[58C\u001b[7m|\u001b[27;96H|\u001b[m\r\n#define TESTNEXT(t) \\\u001b[74C\u001b[7m|\u001b[m\u001b[29;9Hassert(Lexer_NextToken(&lexer)== (t));\u001b[49C\u001b[7m|\u001b[30;96H|\u001b[m\r\nint main(int argc, char** argv) {\u001b[62C\u001b[7m|\u001b[32;96H|\u001b[m\r\n    {\u001b[90C\u001b[7m|\u001b[m\u001b[34;9HSETUP(\"();\")\u001b[75C\u001b[7m|\u001b[m\u001b[35;9HTESTNEXT(TOK_LPAREN);\u001b[66C\u001b[7m|\u001b[m\u001b[36;9HTESTNEXT(TOK_RPAREN);\u001b[66C\u001b[7m|\u001b[m\u001b[37;9HTESTNEXT(TOK_SEMICOLON);\u001b[63C\u001b[7m|\u001b[m\u001b[38;9HTESTNEXT(TOK_EOF); // reach the end\u001b[52C\u001b[7m|\u001b[m\u001b[39;9HTESTNEXT(TOK_EOF); // no more lexing\u001b[51C\u001b[7m|\u001b[m\r\n    }\u001b[90C\u001b[7m|\u001b[41;96H|\u001b[m\r\n    printf(\"all test passed\");\u001b[65C\u001b[7m|\u001b[m\r\n    return 0;\u001b[82C\u001b[7m|\u001b[m\r\n}\u001b[94C\u001b[7m|\u001b[45;96H|\u001b[46;96H|\u001b[m\u001b[45;1H\u001b[94m~                                                                                              \r\n~             "]
[751.757387, "o", "                                                                                 \u001b[m\r\n\u001b[1m\u001b[7msrc/lexer_test.c                                                                                \u001b[m\u001b[1;97HCC=clang\u001b[3;97Hsrc/lexer_test: src/lexer.o src/lexer_test.o\u001b[5;97Htest: src/lexer_test\u001b[6;101H./src/lexer_test\u001b[7;97H\u001b[94m~                                                                                              \u001b[8;97H~                                                                                              \u001b[9;97H~                                                                                              \u001b[10;97H~                                                                                              \u001b[11;97H~                                                                                              \u001b[12;97H~                                                                                              \u001b[13;97H~                                                                                     "]
[751.757592, "o", "         \u001b[14;97H~                                                                                              \u001b[15;97H~                                                                                              \u001b[16;97H~                                                                                              \u001b[17;97H~                                                                                              \u001b[18;97H~                                                                                              \u001b[19;97H~                                                                                              \u001b[20;97H~                                                                                              \u001b[21;97H~                                                                                              \u001b[22;97H~                                                                                              \u001b[23;97H~                                                                              "]
[751.757809, "o", "                \u001b[m\u001b[24;97H\u001b[7mMakefile                                                                                       \u001b[m\u001b[25;97H#define LEXER_H\u001b[27;97H#include <stdlib.h>\u001b[29;97Htypedef enum LexerError {\u001b[30;101HLEX_EOK,\u001b[31;101HLEX_EUNKNOWN,\u001b[32;97H} LexerError;\u001b[34;97Htypedef enum Token {\u001b[35;101HTOK_ERR,\u001b[36;101HTOK_EOF,\u001b[37;101HTOK_SEMICOLON,\u001b[38;101HTOK_LBRACE,\u001b[39;101HTOK_LPAREN,\u001b[40;101HTOK_LBRACKET,\u001b[41;101HTOK_RBRACE,\u001b[42;101HTOK_RPAREN,\u001b[43;101HTOK_RBRACKET,\u001b[44;101HTOK_COMMA,\u001b[45;101HTOK_COLON,\u001b[46;97H} Token;\u001b[47;97H\u001b[7msrc/lexer.h                                                                                    \u001b[39;1H\u001b[?25h"]
[752.668417, "o", "\u001b[8C"]
[753.676252, "o", "\u001b[38;9H"]
[753.852404, "o", "\u001b[37;9H"]
[754.020337, "o", "\u001b[36;9H"]
[754.188265, "o", "\u001b[35;9H"]
[754.356295, "o", "\u001b[34;9H"]
[754.524845, "o", "\u001b[?25l\u001b[m\u001b[33;5H\u001b[46m{\u001b[40;5H}\u001b[33;5H\u001b[?25h"]
[755.652145, "o", "\u001b[?25l\u001b[48;1H\u001b[m:\u001b[?25h"]
[755.860153, "o", "s"]
[755.948141, "o", "e"]
[756.036196, "o", "t"]
[756.10015, "o", " "]
[756.236189, "o", "r"]
[756.284172, "o", "n"]
[756.516231, "o", "u"]
[756.668386, "o", "\r"]
[756.66873, "o", "\u001b[?25l\u001b[25;1H\u001b[93m  8 \u001b[m        Lexer_Init(&lexer); \\\r\n\u001b[93m  7 \u001b[m        Lexer_SetSource(&lexer, (s));\r\n\u001b[93m  6 \r\n  5 \u001b[m#define TESTNEXT(t) \\\r\n\u001b[93m  4 \u001b[m        assert(Lexer_NextToken(&lexer)== (t));\r\n\u001b[93m  3 \r\n  2 \u001b[mint main(int argc, char** argv) {\r\n\u001b[93m  1 \r\n  0 \u001b[m    \u001b[46m{\u001b[m\r\n\u001b[93m  1 \u001b[m        SETUP(\"();\")\r\n\u001b[93m  2 \u001b[m        TESTNEXT(TOK_LPAREN);\r\n\u001b[93m  3 \u001b[m        TESTNEXT(TOK_RPAREN);\r\n\u001b[93m  4 \u001b[m        TESTNEXT(TOK_SEMICOLON);\r\n\u001b[93m  5 \u001b[m        TESTNEXT(TOK_EOF); // reach the end\r\n\u001b[93m  6 \u001b[m        TESTNEXT(TOK_EOF); // no more lexing\r\n\u001b[93m  7 \u001b[m    \u001b[46m}\u001b[m\r\n\u001b[93m  8 \r\n  9 \u001b[m    printf(\"all test passed\");\r\n\u001b[93m 10 \u001b[m    return 0;\r\n\u001b[93m 11 \u001b[m}\u001b[33;9H\u001b[?25h"]
[757.811982, "o", "\u001b[?25l\u001b[48;1H8 lines yanked\u001b[33;9H\u001b[?25h"]
[758.501103, "o", "\u001b[?25l\u001b[25;2H\u001b[93m15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\u001b[40;9H\u001b[?25h"]
[759.444302, "o", "\u001b[?25l\u001b[25;3H4\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\u001b[m\u001b[5C{\u001b[34;3H\u001b[93m5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\u001b[m\u001b[5C}\u001b[41;3H\u001b[93m2\r\n  3\r\n  4\r\n  5\u001b[39;9H\u001b[?25h"]
[759.94894, "o", "\u001b[?25l\u001b[25;3H5\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\u001b[m\u001b[5C\u001b[46m{\u001b[m\u001b[34;3H\u001b[93m6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[5C\u001b[46m}\u001b[m\u001b[41;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\u001b[40;9H\u001b[?25h"]
[760.445097, "o", "\u001b[?25l\u001b[25;3H0\u001b[m\u001b[9C                     \u001b[26;2H\u001b[93m 9\u001b[m\u001b[1Cint main(int argc, char** argv) {    \u001b[27;2H\u001b[93m 8\r\n  7\u001b[m\u001b[1C    \u001b[46m{\u001b[m                \u001b[29;2H\u001b[93m 6\u001b[m\u001b[9CSETUP(\"();\")                          \u001b[30;2H\u001b[93m 5\u001b[m\u001b[9CTESTNEXT(TOK_LPAREN);\u001b[31;3H\u001b[93m4\u001b[m\u001b[1C        TESTNEXT(TOK_RPAREN);    \u001b[32;3H\u001b[93m3\u001b[m\u001b[9CTESTNEXT(TOK_SEMICOLON);\u001b[33;3H\u001b[93m2\u001b[m\u001b[5C    TESTNEXT(TOK_EOF); // reach the end\u001b[34;3H\u001b[93m1\u001b[m\u001b[9CTESTNEXT(TOK_EOF); // no more lexing\u001b[35;3H\u001b[93m0\u001b[m\u001b[5C\u001b[46m}\u001b[m                        \u001b[36;3H\u001b[93m1\u001b[m\u001b[9C                     \u001b[37;3H\u001b[93m2\u001b[m\u001b[5Cprintf(\"all test passed\");  \u001b[38;3H\u001b[93m3\u001b[m\u001b[5Creturn 0;                              \u001b[39;3H\u001b[93m4\u001b[m\u001b[1C}\u001b[7C                                    \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                                                                            "]
[760.44533, "o", "  \r\n~                                                                                              \r\n~                                                                                              \u001b[m\u001b[48;1H\u001b[K\u001b[35;9H\u001b[?25h"]
[760.652993, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[25;3H\u001b[93m1\r\n 10\r\n  9\u001b[m\u001b[36;1H                                                                                               \r\n\u001b[93m  1 \u001b[m                                                                                           \r\n\u001b[93m  2 \u001b[m    printf(\"all test passed\");                                                             \r\n\u001b[93m  3 \u001b[m    return 0;                                                                              \r\n\u001b[93m  4 \u001b[m}                                                                                          \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \r\n~                                                "]
[760.653219, "o", "                                              \r\n~                                                                                              \u001b[m\u001b[28;3H\u001b[93m8\u001b[m\u001b[5C{\u001b[29;3H\u001b[93m7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[5C}\r\n\u001b[93m  0 \u001b[m\u001b[47;18H\u001b[1m\u001b[7m[+]\u001b[36;9H\u001b[?25h"]
[760.866496, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[36;5H"]
[760.932253, "o", "\u001b[?25l"]
[760.932695, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H8 more lines"]
[760.934077, "o", "\u001b[25;3H\u001b[93m2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[5C\u001b[46m{\u001b[m\u001b[38;3H\u001b[93m1\u001b[m\u001b[5C    SETUP(\"();\")          \u001b[39;3H\u001b[93m2\u001b[m\u001b[5C    TESTNEXT(TOK_LPAREN);\u001b[40;3H\u001b[93m3\u001b[m\u001b[1C \u001b[7CTESTNEXT(TOK_RPAREN);\r\n\u001b[93m  4 \u001b[m        TESTNEXT(TOK_SEMICOLON);                                                           \r\n\u001b[93m  5 \u001b[m        TESTNEXT(TOK_EOF); // reach the end                                                \r\n\u001b[93m  6 \u001b[m        TESTNEXT(TOK_EOF); // no more lexing                                               \r\n\u001b[93m  7 \u001b[m    \u001b[46m}\u001b[m                                                                                      \r\n\u001b[93m  8 \u001b[m                                                                                           \r\n\u001b[93m  9 \u001b[m    printf(\"all test passed\");                                                             \u001b[37;9H\u001b[?25h"]
[761.388614, "o", "\u001b[?25l\u001b[25;3H\u001b[93m3\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[5C{\u001b[38;3H\u001b[93m0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\u001b[m\u001b[5C}\u001b[45;3H\u001b[93m7\r\n  8\u001b[38;9H\u001b[?25h"]
[761.524479, "o", "\u001b[m    "]
[761.6928, "o", "\u001b[?25lSETUP\u001b[46m(\u001b[m\"();\"\u001b[46m)\u001b[38;18H\u001b[?25h"]
[761.820653, "o", "\u001b[?25l\u001b[m(\"();\")\b\b\b\b\b\b\u001b[?25h"]
[762.100971, "o", "\u001b[?25l\"\u001b[46m()\b\b\u001b[?25h"]
[762.397312, "o", "\u001b[?25l\b\b(\u001b[m\"\u001b[46m)\u001b[m;\") \b\b\b\b\b\u001b[?25h"]
[762.556504, "o", "\u001b[?25l\b\b(\";\") \b\b\b\b\u001b[?25h"]
[762.644609, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[38;20H\u001b[?25h"]
[762.94162, "o", "\u001b[?25l\u001b[m\u001b[46m{\u001b[m;\")\u001b[44;9H\u001b[46m}\u001b[38;21H\u001b[?25h"]
[763.141541, "o", "\u001b[?25l}\u001b[m;\")\u001b[44;9H}\u001b[38;22H\u001b[?25h"]
[764.461561, "o", "\u001b[48;1H\u001b[K\u001b[38;21H"]
[764.564306, "o", "\u001b[?25l"]
[764.565978, "o", "\u001b[?25h\u001b[?25l\u001b[25;3H\u001b[93m4\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[16C{}\u001b[39;3H\u001b[93m0\u001b[m\u001b[17C\u001b[46m(\u001b[10C)\u001b[m\u001b[40;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[39;21H\u001b[?25h"]
[764.852596, "o", "\u001b[?25l\u001b[m(\u001b[10C)\u001b[39;22H\u001b[?25h"]
[765.204512, "o", "T"]
[765.388269, "o", "O"]
[765.556919, "o", "K"]
[765.716605, "o", "_"]
[765.900228, "o", "L"]
[766.237487, "o", "\u001b[?25l\b\b\b\b\b\b\u001b[46m(\u001b[mTOK_L\u001b[46m)\u001b[m;     \u001b[39;27H\u001b[?25h"]
[766.276201, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[39;27H\u001b[?25h"]
[767.554364, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[39;26H"]
[767.588497, "o", "\u001b[?25l"]
[767.589495, "o", "\b\b\b\b\b(TOK_L)\b\b\u001b[?25h\u001b[?25l\u001b[25;3H\u001b[93m3\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[14C\u001b[46m(\u001b[m\"{};\"\u001b[46m)\u001b[m\u001b[39;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\u001b[38;24H\u001b[?25h"]
[768.116725, "o", "\u001b[?25l\u001b[m\b\b\b\b\b\b(\"{};\")\b\b\u001b[?25h"]
[768.2846, "o", "\b"]
[768.485111, "o", "\u001b[?25l\b\b\u001b[46m{}\b\u001b[?25h"]
[769.052545, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[38;21H\u001b[?25h"]
[773.910313, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[38;20H"]
[774.044525, "o", "\u001b[?25l"]
[774.04517, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H1 change; before #69  8 seconds ago"]
[774.045711, "o", "\u001b[25;3H\u001b[93m4\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[16C{}\u001b[39;3H\u001b[93m0\u001b[m\u001b[23CPAREN);\u001b[40;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[39;27H\u001b[?25h"]
[775.693266, "o", "\u001b[?25l\u001b[25;3H3\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[14C\u001b[46m(\u001b[m\"{};\"\u001b[46m)\u001b[m\u001b[39;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\u001b[38;24H\u001b[?25h"]
[775.948868, "o", "\u001b[?25l\u001b[m\b\b\b\b\b\b(\"{};\")\b\b\u001b[?25h"]
[776.444904, "o", "\u001b[?25l\u001b[25;3H\u001b[93m4\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[39;23H\u001b[?25h"]
[776.556689, "o", "\u001b[mO"]
[776.773018, "o", "K"]
[776.988712, "o", "_"]
[777.260535, "o", "L"]
[777.66958, "o", "\u001b[?25l\b\b\b\b\b\b\u001b[46m(\u001b[mTOK_L\u001b[46m)\u001b[m;     \u001b[39;27H\u001b[?25h"]
[777.733423, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[48;13H\u001b[K\u001b[39;27H\u001b[?25h"]
[778.181866, "o", "\u001b[?25lB\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[778.453853, "o", "\u001b[?25lR\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[778.613716, "o", "\u001b[?25lA\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[779.413896, "o", "\u001b[?25lC\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[779.749759, "o", "\u001b[?25lE\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[780.44657, "o", "\u001b[48;1H\u001b[K\u001b[39;31H"]
[780.54876, "o", "\u001b[?25l"]
[780.549461, "o", "\u001b[39;21H(\u001b[10C)\b\b\u001b[?25h\u001b[?25l\u001b[25;3H\u001b[93m5\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\u001b[40;31H\u001b[?25h"]
[780.892703, "o", "\b"]
[781.060982, "o", "\b"]
[781.236956, "o", "\b"]
[781.437037, "o", "\b"]
[781.613807, "o", "\u001b[?25l\u001b[m\b\b\b\b\b\b\u001b[46m(\u001b[mTOK_R\u001b[46m)\u001b[m;     \u001b[40;27H\u001b[?25h"]
[781.717191, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[40;27H\u001b[?25h"]
[781.941736, "o", "\u001b[?25l\u001b[mB\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[782.149889, "o", "\u001b[?25lR\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[782.206074, "o", "\u001b[?25lA\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[782.437953, "o", "\u001b[?25lC\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[782.621926, "o", "\u001b[?25lE\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[783.763197, "o", "\u001b[48;1H\u001b[K\u001b[40;31H"]
[784.108483, "o", "\u001b[?25l"]
[784.10899, "o", "\u001b[40;21H(\u001b[10C)\b\b\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[784.356813, "o", "w"]
[784.460928, "o", "\r"]
[784.46137, "o", "\u001b[?25l\"src/lexer_test.c\""]
[784.479187, "o", " 35L, 760B written"]
[784.479635, "o", "\u001b[47;18H\u001b[1m\u001b[7m    \u001b[40;31H\u001b[?25h"]
[785.460683, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[785.956738, "o", "!"]
[786.541223, "o", "\u001b[?25lmake test\u001b[?25h"]
[786.763656, "o", "\r"]
[786.763837, "o", "\u001b[?25l\u001b[11C\u001b[?1004l\u001b[?2004l\u001b[?1l\u001b>\u001b[?25h\u001b[>4;m\u001b[?1049l\r\n"]
[786.789144, "o", "clang    -c -o src/lexer_test.o src/lexer_test.c\r\n"]
[786.871243, "o", "clang   src/lexer_test.o src/lexer.o   -o src/lexer_test\r\n"]
[786.950111, "o", "./src/lexer_test\r\n"]
[786.953339, "o", "all test passed"]
[786.956024, "o", "\r\nPress ENTER or type command to continue"]
[787.629272, "o", "\u001b[?1049h\u001b[>4;2m\u001b[?1h\u001b=\u001b[?2004h\u001b[?1004h"]
[787.630066, "o", "\u001b[27m\u001b[29m\u001b[m\u001b[H\u001b[2J\u001b[?25l\u001b[1;1H\u001b[93m 18 \u001b[m\u001b[12Creturn TOK_COMMA;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 17 \u001b[m\u001b[8Ccase ':':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m 16 \u001b[m\u001b[12Clexer->column++;\u001b[63C\u001b[7m|\u001b[m\r\n\u001b[93m 15 \u001b[m\u001b[12Clexer->current++;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 14 \u001b[m\u001b[12Creturn TOK_COLON;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 13 \u001b[m\u001b[8Cdefault:\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m 12 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m 11 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m 10 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  9 \u001b[m}\u001b[90C\u001b[7m|\u001b[m\r\n\u001b[93m  8 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[mToken Lexer_NextToken(Lexer *lexer) {\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m    char c = Lexer_GetChar(lexer, 0);\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m    switch (c) {\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[8Ccase '\\0':\u001b[73C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[12Creturn TOK_EOF;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8Ccase ';': case '{': case '(': case '[':\u001b[44C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[8Ccase '}': case ')': case ']': case ',':\u001b[44C\u001b[7m|\u001b[m\r\n\u001b[93m  0 \u001b[m\u001b[8Ccase ':':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[12Creturn Lexer_NextOp(lexer);\u001b[52C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8Cdefault:\u001b["]
[787.63026, "o", "75C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\r\nsrc/lexer.c                                                                                    |\u001b[m\r\n\u001b[93m 15 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m 14 \u001b[mint main(int argc, char** argv) {\u001b[58C\u001b[7m|\u001b[m\r\n\u001b[93m 13 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m 12 \u001b[m    {\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m 11 \u001b[m\u001b[8CSETUP(\"();\")\u001b[71C\u001b[7m|\u001b[m\r\n\u001b[93m 10 \u001b[m\u001b[8CTESTNEXT(TOK_LPAREN);\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m  9 \u001b[m\u001b[8CTESTNEXT(TOK_RPAREN);\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m  8 \u001b[m\u001b[8CTESTNEXT(TOK_SEMICOLON);\u001b[59C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[m\u001b[8CTESTNEXT(TOK_EOF); // reach the end\u001b[48C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m\u001b[8CTESTNEXT(TOK_EOF); // no more lexing\u001b[47C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m    {\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8CSETUP(\"{};\")\u001b[71C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[8CTESTNEXT(TOK_LBRACE);\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m  0 \u001b[m\u001b[8CTESTNEXT(TOK_RBRACE);\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m  1 "]
[787.63042, "o", "\u001b[m\u001b[8CTESTNEXT(TOK_SEMICOLON);\u001b[59C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8CTESTNEXT(TOK_EOF); // reach the end\u001b[48C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[8CTESTNEXT(TOK_EOF); // no more lexing\u001b[47C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m    printf(\"all test passed\");\u001b[61C\u001b[7m|\u001b[m\r\n\u001b[1m\u001b[7msrc/lexer_test.c                                                                                \u001b[m\u001b[1;97HCC=clang\u001b[3;97Hsrc/lexer_test: src/lexer.o src/lexer_test.o\u001b[5;97Htest: src/lexer_test\u001b[6;101H./src/lexer_test\u001b[7;97H\u001b[94m~                                                                                              \u001b[8;97H~                                                                                              \u001b[9;97H~                                                                                              \u001b[10;97H~                                                                                              \u001b[11;97H~                                                                                  "]
[787.630584, "o", "            \u001b[12;97H~                                                                                              \u001b[13;97H~                                                                                              \u001b[14;97H~                                                                                              \u001b[15;97H~                                                                                              \u001b[16;97H~                                                                                              \u001b[17;97H~                                                                                              \u001b[18;97H~                                                                                              \u001b[19;97H~                                                                                              \u001b[20;97H~                                                                                              \u001b[21;97H~                                                                           "]
[787.630805, "o", "                   \u001b[22;97H~                                                                                              \u001b[23;97H~                                                                                              \u001b[m\u001b[24;97H\u001b[7mMakefile                                                                                       \u001b[m\u001b[25;97H#define LEXER_H\u001b[27;97H#include <stdlib.h>\u001b[29;97Htypedef enum LexerError {\u001b[30;101HLEX_EOK,\u001b[31;101HLEX_EUNKNOWN,\u001b[32;97H} LexerError;\u001b[34;97Htypedef enum Token {\u001b[35;101HTOK_ERR,\u001b[36;101HTOK_EOF,\u001b[37;101HTOK_SEMICOLON,\u001b[38;101HTOK_LBRACE,\u001b[39;101HTOK_LPAREN,\u001b[40;101HTOK_LBRACKET,\u001b[41;101HTOK_RBRACE,\u001b[42;101HTOK_RPAREN,\u001b[43;101HTOK_RBRACKET,\u001b[44;101HTOK_COMMA,\u001b[45;101HTOK_COLON,\u001b[46;97H} Token;\u001b[47;97H\u001b[7msrc/lexer.h                                                                                    \u001b[40;31H\u001b[?25h"]
[788.149411, "o", "\u001b[?25l\u001b[m\u001b[25;3H\u001b[93m0\u001b[m\u001b[9CTESTNEXT(TOK_LPAREN);\u001b[26;2H\u001b[93m 9\u001b[m\u001b[1C        TESTNEXT(TOK_RPAREN);    \u001b[27;2H\u001b[93m 8\u001b[m\u001b[9CTESTNEXT(TOK_SEMICOLON);\u001b[28;2H\u001b[93m 7\u001b[m\u001b[5C    TESTNEXT(TOK_EOF); // reach the end\u001b[29;2H\u001b[93m 6\u001b[m\u001b[9CTESTNEXT(TOK_EOF); // no more lexing\u001b[30;2H\u001b[93m 5\u001b[m\u001b[5C}                        \u001b[31;3H\u001b[93m4\u001b[m\u001b[9C                     \u001b[32;3H\u001b[93m3\u001b[m\u001b[5C{                           \u001b[33;3H\u001b[93m2\u001b[m\u001b[9CSETUP(\"{};\")                       \u001b[34;3H\u001b[93m1\u001b[m\u001b[22CLBRACE);               \u001b[35;3H\u001b[93m0\u001b[m\u001b[5C    TESTNEXT(TOK_RBRACE);\u001b[36;3H\u001b[93m1\u001b[m\u001b[9CTESTNEXT(TOK_SEMICOLON);\u001b[37;3H\u001b[93m2\u001b[m\u001b[5C    TESTNEXT(TOK_EOF); // reach the end\u001b[38;3H\u001b[93m3\u001b[m\u001b[9CTESTNEXT(TOK_EOF); // no more lexing\u001b[39;3H\u001b[93m4\u001b[m\u001b[5C}                        \u001b[40;3H\u001b[93m5\u001b[m\u001b[9C                     \u001b[41;3H\u001b[93m6\u001b[m\u001b[5Cprintf(\"all test passed\");  \u001b[42;3H\u001b[93m7\u001b[m\u001b[5Creturn 0;                              \u001b[43;3H\u001b[93m8\u001b[m\u001b[1C}\u001b[7C                                    \r\n\u001b[94m~                                                          "]
[788.149621, "o", "                                    \r\n~                                                                                              \r\n~                                                                                              \u001b[35;31H\u001b[?25h"]
[788.373075, "o", "\u001b[?25l\u001b[m\u001b[25;2H\u001b[93m 9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\u001b[34;31H\u001b[?25h"]
[788.541485, "o", "\u001b[?25l\u001b[25;3H8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[14C\u001b[46m(\u001b[m\"{};\"\u001b[46m)\u001b[m\u001b[34;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\u001b[33;24H\u001b[?25h"]
[788.708318, "o", "\u001b[?25l\u001b[25;3H7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[5C\u001b[46m{\u001b[m\u001b[33;3H\u001b[93m1\u001b[m\u001b[14C(\"{};\")\u001b[34;3H\u001b[93m2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[m\u001b[5C\u001b[46m}\u001b[m\u001b[40;3H\u001b[93m8\r\n  9\r\n 10\r\n 11\u001b[32;9H\u001b[?25h"]
[789.683489, "o", "\u001b[?25l\u001b[m\u001b[48;1H8 lines yanked"]
[789.683577, "o", "\u001b[32;9H\u001b[?25h"]
[789.940115, "o", "\u001b[?25l\u001b[25;2H\u001b[93m18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\u001b[m\u001b[5C{\u001b[33;2H\u001b[93m10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\u001b[m\u001b[5C}\u001b[40;3H\u001b[93m3\r\n  2\r\n  1\r\n  0 \u001b[?25h"]
[789.987449, "o", "\u001b[?25l\u001b[25;3H7\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\u001b[42;5H\u001b[?25h"]
[790.155895, "o", "\u001b[?25l\u001b[25;3H6\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\u001b[41;5H\u001b[?25h"]
[790.355874, "o", "\u001b[?25l\u001b[25;3H5\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\u001b[40;5H\u001b[?25h"]
[790.571618, "o", "\u001b[?25l\u001b[25;3H4\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\u001b[39;5H\u001b[?25h"]
[790.883972, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[48;13H\u001b[K\u001b[25;3H\u001b[93m5\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m                                                                                           \r\n\u001b[93m  2 \u001b[m    printf(\"all test passed\");                                                             \r\n\u001b[93m  3 \u001b[m    return 0;                                                                              \r\n\u001b[93m  4 \u001b[m}                                                                                          \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \u001b[m\u001b[40;1H\u001b[93m  0 \u001b[m\u001b[47;18H\u001b[1m\u001b[7m[+]\u001b[40;9H\u001b[?25h"]
[791.060614, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[40;5H"]
[791.123239, "o", "\u001b[?25l"]
[791.123744, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H8 more lines"]
[791.124973, "o", "\u001b[25;3H\u001b[93m6\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[5C{\u001b[42;3H\u001b[93m1\u001b[m\u001b[5C    SETUP(\"{};\")          \u001b[43;3H\u001b[93m2\u001b[m\u001b[5C    TESTNEXT(TOK_LBRACE);\u001b[44;3H\u001b[93m3\u001b[m\u001b[1C \u001b[7CTESTNEXT(TOK_RBRACE);\r\n\u001b[93m  4 \u001b[m        TESTNEXT(TOK_SEMICOLON);                                                           \r\n\u001b[93m  5 \u001b[m        TESTNEXT(TOK_EOF); // reach the end                                                "]
[791.125132, "o", "\u001b[41;9H\u001b[?25h"]
[791.547932, "o", "\u001b[?25l\u001b[25;3H\u001b[93m7\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\u001b[42;13H\u001b[?25h"]
[791.667563, "o", "\u001b[?25l\u001b[25;3H8\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\u001b[43;13H\u001b[?25h"]
[791.908017, "o", "\u001b[?25l\u001b[m\u001b[8C\u001b[46m(\u001b[10C)\u001b[43;21H\u001b[?25h"]
[792.18818, "o", "\u001b[?25l\u001b[m\u001b[25;3H\u001b[93m7\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[16C\u001b[46m{}\u001b[m\u001b[43;3H\u001b[93m1\u001b[m\u001b[17C(\u001b[10C)\u001b[44;3H\u001b[93m2\r\n  3\r\n  4\u001b[42;21H\u001b[?25h"]
[792.596144, "o", "\u001b[?25l\b\u001b[?25h"]
[792.796203, "o", "\u001b[?25l\u001b[m\u001b[41;9H\u001b[46m{\u001b[42;20H}\u001b[m;\") \b\b\b\b\b\u001b[?25h"]
[792.963966, "o", "\u001b[?25l\u001b[41;9H{\u001b[42;20H;\") \b\b\b\b\u001b[?25h"]
[793.003741, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[42;20H\u001b[?25h"]
[793.204387, "o", "\u001b[?25l\u001b[m[;\")\b\b\b\u001b[?25h"]
[793.404391, "o", "\u001b[?25l\b\u001b[46m[]\u001b[m;\")\b\b\b\u001b[?25h"]
[793.51815, "o", "\u001b[48;1H\u001b[K\u001b[42;21H"]
[793.787514, "o", "\u001b[?25l"]
[793.788739, "o", "\u001b[?25h"]
[793.972128, "o", "\u001b[?25l\u001b[25;3H\u001b[93m0\u001b[m\u001b[5C{                        \u001b[26;2H\u001b[93m 9\u001b[m\u001b[9CSETUP(\"{};\")         \u001b[27;2H\u001b[93m 8\u001b[m\u001b[22CLBRACE);   \u001b[28;2H\u001b[93m 7\u001b[m\u001b[22CRBRACE);              \u001b[29;2H\u001b[93m 6\u001b[m\u001b[22CSEMICOLON);            \u001b[30;2H\u001b[93m 5\u001b[m\u001b[5C    TESTNEXT(TOK_EOF); // reach the end\u001b[31;2H\u001b[93m 4\u001b[m\u001b[9CTESTNEXT(TOK_EOF); // no more lexing\u001b[32;2H\u001b[93m 3\u001b[m\u001b[5C}\u001b[33;3H\u001b[93m2\u001b[m\u001b[9C            \u001b[34;3H\u001b[93m1\u001b[m\u001b[5C{                        \u001b[35;3H\u001b[93m0\u001b[m\u001b[9CSETUP(\"\u001b[46m[]\u001b[m;\")         \u001b[36;3H\u001b[93m1\u001b[m\u001b[22CLBRACE);   \u001b[37;3H\u001b[93m2\u001b[m\u001b[22CRBRACE);              \u001b[38;3H\u001b[93m3\u001b[m\u001b[22CSEMICOLON);            \u001b[39;3H\u001b[93m4\u001b[m\u001b[5C    TESTNEXT(TOK_EOF); // reach the end\u001b[40;3H\u001b[93m5\u001b[m\u001b[9CTESTNEXT(TOK_EOF); // no more lexing\u001b[41;3H\u001b[93m6\u001b[m\u001b[5C}\u001b[42;3H\u001b[93m7\u001b[m\u001b[9C            \u001b[43;3H\u001b[93m8\u001b[m\u001b[5Cprintf(\"all test passed\");\u001b[44;3H\u001b[93m9\u001b[m\u001b[5Creturn 0;                \u001b[45;2H\u001b[93m10\u001b[m\u001b[1C}\u001b[7C                        \r\n\u001b[94m~                                                                                              \u001b[35;21H\u001b[?25h"]
[794.500153, "o", "\u001b[?25l\u001b[m\u001b[25;3H\u001b[93m1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[16C[]\u001b[36;3H\u001b[93m0\u001b[m\u001b[17C\u001b[46m(\u001b[10C)\u001b[m\u001b[37;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\u001b[36;21H\u001b[?25h"]
[794.667657, "o", "\u001b[?25l\u001b[m(\u001b[10C)\u001b[36;22H\u001b[?25h"]
[794.899741, "o", "T"]
[795.400851, "o", "O"]
[795.483158, "o", "K"]
[795.566369, "o", "_"]
[795.649346, "o", "L"]
[795.835828, "o", "B"]
[796.267798, "o", "\b"]
[796.548275, "o", "\u001b[?25l\b\b\b\b\b\b\u001b[46m(\u001b[mTOK_L\u001b[46m)\u001b[m;     \u001b[36;27H\u001b[?25h"]
[796.628083, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[36;27H\u001b[?25h"]
[796.956287, "o", "\u001b[?25l\u001b[mB\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[797.164414, "o", "\u001b[?25lR\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[797.212647, "o", "\u001b[?25lA\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[797.660428, "o", "\u001b[?25lC\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[797.732436, "o", "\u001b[?25lK\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[797.900176, "o", "\u001b[?25lE\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[797.996553, "o", "\u001b[?25lT\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[798.271295, "o", "\u001b[48;1H\u001b[K\u001b[36;33H"]
[798.339642, "o", "\u001b[?25l"]
[798.340324, "o", "\u001b[36;21H(\u001b[12C)\b\b\u001b[?25h\u001b[?25l\u001b[25;3H\u001b[93m2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\u001b[37;33H\u001b[?25h"]
[798.51621, "o", "\u001b[?25l\u001b[m\u001b[37;21H\u001b[46m(\u001b[10C)\b\u001b[?25h"]
[798.691925, "o", "\u001b[?25l\u001b[m\u001b[37;21H(\u001b[10C)\b\b\u001b[?25h"]
[798.916536, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[37;21H\u001b[46m(\u001b[9C)\u001b[m; \b\b\b\u001b[?25h"]
[799.188632, "o", "\u001b[?25lK\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[799.30054, "o", "\u001b[?25lE\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[799.396524, "o", "\u001b[?25lT\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[799.733127, "o", "\u001b[48;1H\u001b[K\u001b[37;33H"]
[800.003604, "o", "\u001b[?25l"]
[800.004077, "o", "\u001b[37;21H(\u001b[12C)\b\b\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[800.195685, "o", "w"]
[800.267831, "o", "\r"]
[800.268145, "o", "\u001b[?25l\"src/lexer_test.c\""]
[800.286049, "o", " 44L, 980B written"]
[800.286539, "o", "\u001b[47;18H\u001b[1m\u001b[7m    \u001b[37;33H\u001b[?25h"]
[800.5316, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[800.803558, "o", "!"]
[801.204054, "o", "\u001b[?25lmake test\u001b[?25h"]
[801.355801, "o", "\r"]
[801.356004, "o", "\u001b[?25l\u001b[11C\u001b[?1004l\u001b[?2004l\u001b[?1l\u001b>\u001b[?25h\u001b[>4;m\u001b[?1049l\r\n"]
[801.384205, "o", "clang    -c -o src/lexer_test.o src/lexer_test.c\r\n"]
[801.467138, "o", "clang   src/lexer_test.o src/lexer.o   -o src/lexer_test\r\n"]
[801.546957, "o", "./src/lexer_test\r\n"]
[801.550044, "o", "all test passed"]
[801.556642, "o", "\r\nPress ENTER or type command to continue"]
[802.260121, "o", "\u001b[?1049h\u001b[>4;2m\u001b[?1h\u001b=\u001b[?2004h\u001b[?1004h"]
[802.26074, "o", "\u001b[27m\u001b[29m\u001b[m\u001b[H\u001b[2J\u001b[?25l\u001b[1;1H\u001b[93m 18 \u001b[m\u001b[12Creturn TOK_COMMA;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 17 \u001b[m\u001b[8Ccase ':':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m 16 \u001b[m\u001b[12Clexer->column++;\u001b[63C\u001b[7m|\u001b[m\r\n\u001b[93m 15 \u001b[m\u001b[12Clexer->current++;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 14 \u001b[m\u001b[12Creturn TOK_COLON;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 13 \u001b[m\u001b[8Cdefault:\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m 12 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m 11 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m 10 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  9 \u001b[m}\u001b[90C\u001b[7m|\u001b[m\r\n\u001b[93m  8 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[mToken Lexer_NextToken(Lexer *lexer) {\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m    char c = Lexer_GetChar(lexer, 0);\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m    switch (c) {\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[8Ccase '\\0':\u001b[73C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[12Creturn TOK_EOF;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8Ccase ';': case '{': case '(': case '[':\u001b[44C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[8Ccase '}': case ')': case ']': case ',':\u001b[44C\u001b[7m|\u001b[m\r\n\u001b[93m  0 \u001b[m\u001b[8Ccase ':':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[12Creturn Lexer_NextOp(lexer);\u001b[52C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8Cdefault:\u001b["]
[802.260897, "o", "75C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\r\nsrc/lexer.c                                                                                    |\u001b[m\r\n\u001b[93m 12 \u001b[m    {\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m 11 \u001b[m\u001b[8CSETUP(\"{};\")\u001b[71C\u001b[7m|\u001b[m\r\n\u001b[93m 10 \u001b[m\u001b[8CTESTNEXT(TOK_LBRACE);\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m  9 \u001b[m\u001b[8CTESTNEXT(TOK_RBRACE);\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m  8 \u001b[m\u001b[8CTESTNEXT(TOK_SEMICOLON);\u001b[59C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[m\u001b[8CTESTNEXT(TOK_EOF); // reach the end\u001b[48C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m\u001b[8CTESTNEXT(TOK_EOF); // no more lexing\u001b[47C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m    {\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8CSETUP(\"[];\")\u001b[71C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[8CTESTNEXT(TOK_LBRACKET);\u001b[60C\u001b[7m|\u001b[m\r\n\u001b[93m  0 \u001b[m\u001b[8CTESTNEXT(TOK_RBRACKET);\u001b[60C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[8CTESTNEXT(TOK_SEMICOLON);\u001b[59C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8CTESTNEXT(TOK_EOF); // reach the end\u001b[48C\u001b[7m|\u001b[m\r\n"]
[802.261024, "o", "\u001b[93m  3 \u001b[m\u001b[8CTESTNEXT(TOK_EOF); // no more lexing\u001b[47C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m    printf(\"all test passed\");\u001b[61C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[m    return 0;\u001b[78C\u001b[7m|\u001b[m\r\n\u001b[93m  8 \u001b[m}\u001b[90C\u001b[7m|\u001b[46;96H|\u001b[m\r\u001b[94m~                                                                                              \u001b[m\r\n\u001b[1m\u001b[7msrc/lexer_test.c                                                                                \u001b[m\u001b[1;97HCC=clang\u001b[3;97Hsrc/lexer_test: src/lexer.o src/lexer_test.o\u001b[5;97Htest: src/lexer_test\u001b[6;101H./src/lexer_test\u001b[7;97H\u001b[94m~                                                                                              \u001b[8;97H~                                                                                              \u001b[9;97H~                                                                                              \u001b[10;97H~                                                                                              \u001b[11;97H~             "]
[802.26119, "o", "                                                                                 \u001b[12;97H~                                                                                              \u001b[13;97H~                                                                                              \u001b[14;97H~                                                                                              \u001b[15;97H~                                                                                              \u001b[16;97H~                                                                                              \u001b[17;97H~                                                                                              \u001b[18;97H~                                                                                              \u001b[19;97H~                                                                                              \u001b[20;97H~                                                                                              "]
[802.261332, "o", "\u001b[21;97H~                                                                                              \u001b[22;97H~                                                                                              \u001b[23;97H~                                                                                              \u001b[m\u001b[24;97H\u001b[7mMakefile                                                                                       \u001b[m\u001b[25;97H#define LEXER_H\u001b[27;97H#include <stdlib.h>\u001b[29;97Htypedef enum LexerError {\u001b[30;101HLEX_EOK,\u001b[31;101HLEX_EUNKNOWN,\u001b[32;97H} LexerError;\u001b[34;97Htypedef enum Token {\u001b[35;101HTOK_ERR,\u001b[36;101HTOK_EOF,\u001b[37;101HTOK_SEMICOLON,\u001b[38;101HTOK_LBRACE,\u001b[39;101HTOK_LPAREN,\u001b[40;101HTOK_LBRACKET,\u001b[41;101HTOK_RBRACE,\u001b[42;101HTOK_RPAREN,\u001b[43;101HTOK_RBRACKET,\u001b[44;101HTOK_COMMA,\u001b[45;101HTOK_COLON,\u001b[46;97H} Token;\u001b[47;97H\u001b[7msrc/lexer.h                                                                                    \u001b[37;33H\u001b[?25h"]
[802.70815, "o", "\u001b[?25l\u001b[m\u001b[25;3H\u001b[93m1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\u001b[36;33H\u001b[?25h"]
[802.876194, "o", "\u001b[?25l\u001b[25;3H0\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[14C\u001b[46m(\u001b[m\"[];\"\u001b[46m)\u001b[m\u001b[36;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\u001b[35;24H\u001b[?25h"]
[803.028199, "o", "\u001b[?25l\u001b[25;2H 9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[5C\u001b[46m{\u001b[m\u001b[35;3H\u001b[93m1\u001b[m\u001b[14C(\"[];\")\u001b[36;3H\u001b[93m2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[m\u001b[5C\u001b[46m}\u001b[m\u001b[42;3H\u001b[93m8\r\n  9\r\n 10\r\n 11\u001b[34;9H\u001b[?25h"]
[803.227903, "o", "\u001b[?25l\u001b[25;3H8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\u001b[m\u001b[5C{\u001b[35;3H\u001b[93m2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\u001b[m\u001b[5C}\u001b[42;3H\u001b[93m9\r\n 10\r\n 11\r\n 12\u001b[33;5H\u001b[?25h"]
[803.684762, "o", "\u001b[?25l\u001b[25;3H9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[5C\u001b[46m{\u001b[m\u001b[35;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[m\u001b[5C\u001b[46m}\u001b[m\u001b[42;3H\u001b[93m8\r\n  9\r\n 10\r\n 11\u001b[34;9H\u001b[?25h"]
[804.524026, "o", "\u001b[?25l\u001b[m\u001b[48;1H8 lines yanked"]
[804.524198, "o", "\u001b[34;9H\u001b[?25h"]
[804.844914, "o", "\u001b[?25l\u001b[25;2H\u001b[93m20\r\n 19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\u001b[m\u001b[5C{\u001b[35;2H\u001b[93m10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\u001b[m\u001b[5C}\u001b[42;3H\u001b[93m3\r\n  2\r\n  1\r\n  0 \u001b[?25h"]
[804.900061, "o", "\u001b[?25l\u001b[25;2H19\r\n 18\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\u001b[44;5H\u001b[?25h"]
[805.069211, "o", "\u001b[?25l\u001b[25;3H8\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\u001b[43;5H\u001b[?25h"]
[805.268226, "o", "\u001b[?25l\u001b[25;3H7\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\u001b[42;5H\u001b[?25h"]
[805.468352, "o", "\u001b[?25l\u001b[25;3H6\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\u001b[41;5H\u001b[?25h"]
[805.804926, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[48;13H\u001b[K\u001b[25;3H\u001b[93m7\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\r\n                                                                                               \r\n\u001b[93m  1 \u001b[m                                                                                           \r\n\u001b[93m  2 \u001b[m    printf(\"all test passed\");                                                             \r\n\u001b[93m  3 \u001b[m    return 0;                                                                              \r\n\u001b[93m  4 \u001b[m}                                                                                          \u001b[42;1H\u001b[93m  0 \u001b[m\u001b[47;18H\u001b[1m\u001b[7m[+]\u001b[42;9H\u001b[?25h"]
[805.983575, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[42;5H"]
[806.045247, "o", "\u001b[?25l"]
[806.04569, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H8 more lines"]
[806.047067, "o", "\u001b[25;3H\u001b[93m8\r\n 17\r\n 16\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[5C{\u001b[44;3H\u001b[93m1\u001b[m\u001b[5C    SETUP(\"[];\")          \u001b[45;3H\u001b[93m2\u001b[m\u001b[5C    TESTNEXT(TOK_LBRACKET);\u001b[46;3H\u001b[93m3\u001b[m\u001b[1C \u001b[7CTESTNEXT(TOK_RBRACKET);\u001b[43;9H\u001b[?25h"]
[806.526133, "o", "\u001b[?25l\u001b[25;3H\u001b[93m0\u001b[m\u001b[5C \u001b[26;2H\u001b[93m 9\u001b[m\u001b[5C{               \u001b[27;2H\u001b[93m 8\u001b[m\u001b[9CSETUP(\"[];\")         \u001b[28;2H\u001b[93m 7\u001b[m\u001b[22CLBRACKET);\u001b[29;2H\u001b[93m 6\u001b[m\u001b[22CRBRACKET); \u001b[30;2H\u001b[93m 5\u001b[m\u001b[22CSEMICOLON);           \u001b[31;2H\u001b[93m 4\u001b[m\u001b[31Creach the end \u001b[32;2H\u001b[93m 3\u001b[m\u001b[5C    TESTNEXT(TOK_EOF); // no more lexing\u001b[33;2H\u001b[93m 2\u001b[m\u001b[5C}\u001b[34;3H\u001b[93m1\u001b[m\u001b[5C \u001b[35;3H\u001b[93m0\u001b[m\u001b[5C\u001b[46m{\u001b[m               \u001b[36;3H\u001b[93m1\u001b[m\u001b[9CSETUP(\"[];\")           \u001b[37;3H\u001b[93m2\u001b[m\u001b[22CL\u001b[38;3H\u001b[93m3\u001b[m\u001b[22CRBRACKET); \u001b[39;26HSEMICOLON);           \u001b[40;3H\u001b[93m5\u001b[m\u001b[31Creach the end \u001b[41;3H\u001b[93m6\u001b[m\u001b[5C    TESTNEXT(TOK_EOF); // no more lexing\u001b[42;3H\u001b[93m7\u001b[m\u001b[5C\u001b[46m}\u001b[m\u001b[43;3H\u001b[93m8\u001b[m\u001b[5C \u001b[44;3H\u001b[93m9\u001b[m\u001b[5Cprintf(\"all test passed\");\u001b[45;2H\u001b[93m10\u001b[m\u001b[5Creturn 0;                  \u001b[46;2H\u001b[93m11\u001b[m\u001b[1C}\u001b[7C                       \u001b[48;1H\u001b[K\u001b[35;9H\u001b[?25h"]
[807.037579, "o", "\u001b[?25l\u001b[25;3H\u001b[93m1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[5C{\u001b[36;3H\u001b[93m0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\u001b[m\u001b[5C}\u001b[43;3H\u001b[93m7\r\n  8\r\n  9\r\n 10\u001b[36;13H\u001b[?25h"]
[807.133479, "o", "\u001b[mS"]
[807.197608, "o", "\u001b[?25l\u001b[25;3H\u001b[93m2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\u001b[37;14H\u001b[?25h"]
[807.373399, "o", "\u001b[?25l\u001b[m\u001b[7C\u001b[46m(\u001b[12C)\u001b[37;21H\u001b[?25h"]
[807.581941, "o", "\u001b[?25l\u001b[m\u001b[25;3H\u001b[93m1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[16C\u001b[46m[]\u001b[m\u001b[37;3H\u001b[93m1\u001b[m\u001b[17C(\u001b[12C)\u001b[38;3H\u001b[93m2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\r\n 10\u001b[36;21H\u001b[?25h"]
[808.053946, "o", "\u001b[?25l\b\u001b[?25h"]
[808.422631, "o", "\u001b[?25l\u001b[m];\") \b\b\b\b\b\u001b[?25h"]
[808.61382, "o", "\u001b[?25l;\") \b\b\b\b\u001b[?25h"]
[808.789795, "o", "\u001b[?25l\") \b\b\b\u001b[?25h"]
[808.861613, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[36;20H\u001b[?25h"]
[810.757823, "o", "\u001b[?25l\u001b[m:\")\b\b\u001b[?25h"]
[811.58324, "o", "\u001b[48;1H\u001b[K\u001b[36;20H"]
[811.709312, "o", "\u001b[?25l"]
[811.709942, "o", "\u001b[?25h\u001b[?25l\u001b[25;3H\u001b[93m2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\r\n  9\u001b[37;20H\u001b[?25h"]
[812.750101, "o", "\u001b[?25l\u001b[mT\u001b[46m(\u001b[12C)\u001b[37;21H\u001b[?25h"]
[812.981309, "o", "\u001b[?25l\u001b[m(\u001b[12C)\u001b[37;22H\u001b[?25h"]
[813.481771, "o", "T"]
[813.565924, "o", "O"]
[813.650139, "o", "K"]
[814.101597, "o", "_"]
[814.422468, "o", "\u001b[?25l\b\b\b\b\b\u001b[46m(\u001b[mTOK_\u001b[46m)\u001b[m;        \u001b[37;26H\u001b[?25h"]
[814.493912, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[37;26H\u001b[?25h"]
[814.902436, "o", "\u001b[?25l\u001b[mC\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[815.006509, "o", "\u001b[?25lO\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[815.17452, "o", "\u001b[?25lL\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[815.462314, "o", "\u001b[?25lO\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[815.645719, "o", "\u001b[?25lN\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[818.064212, "o", "\u001b[48;1H\u001b[K\u001b[37;30H"]
[819.064677, "o", "\u001b[?25l"]
[819.065286, "o", "\u001b[37;21H(\u001b[9C)\b\b\u001b[?25h"]
[820.300604, "o", "\u001b[?25l\u001b[25;3H\u001b[93m3\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\r\n  8\u001b[38;30H\u001b[?25h"]
[820.891328, "o", "\u001b[?25l\u001b[m\r\u001b[93m  1 \u001b[m        TESTNEXT(TOK_SEMICOLON);                                                           \r\n\u001b[93m  2 \u001b[m        TESTNEXT(TOK_EOF); // reach the end                                                \r\n\u001b[93m  3 \u001b[m        TESTNEXT(TOK_EOF); // no more lexing                                               \r\n\u001b[93m  4 \u001b[m    }                                                                                      \r\n\u001b[93m  5 \u001b[m                                                                                           \r\n\u001b[93m  6 \u001b[m    printf(\"all test passed\");                                                             \r\n\u001b[93m  7 \u001b[m    return 0;                                                                              \r\n\u001b[93m  8 \u001b[m}                                                                                          \r\n                                                                                               \u001b[38;3H\u001b[93m0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[m\r\n\u001b[94m~                    "]
[820.891574, "o", "                                                                          \u001b[38;13H\u001b[?25h"]
[821.394235, "o", "\u001b[?25l\u001b[m\r\u001b[93m  1 \u001b[m        TESTNEXT(TOK_EOF); // reach the end                                                \r\n\u001b[93m  2 \u001b[m        TESTNEXT(TOK_EOF); // no more lexing                                               \r\n\u001b[93m  3 \u001b[m    }                                                                                      \r\n\u001b[93m  4 \u001b[m                                                                                           \r\n\u001b[93m  5 \u001b[m    printf(\"all test passed\");                                                             \r\n\u001b[93m  6 \u001b[m    return 0;                                                                              \r\n\u001b[93m  7 \u001b[m}                                                                                          \r\n\u001b[94m~                                                                                              \u001b[m\r\n                                                                                               \u001b[38;3H\u001b[93m0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\u001b[m\r\n\r\n\u001b[94m~                       "]
[821.394495, "o", "                                                                       \u001b[38;13H\u001b[?25h"]
[822.280341, "o", "\u001b[?25l\u001b[m\r\u001b[93m  1 \u001b[m        TESTNEXT(TOK_EOF); // no more lexing                                               \r\n\u001b[93m  2 \u001b[m    }                                                                                      \r\n\u001b[93m  3 \u001b[m                                                                                           \r\n\u001b[93m  4 \u001b[m    printf(\"all test passed\");                                                             \r\n\u001b[93m  5 \u001b[m    return 0;                                                                              \r\n\u001b[93m  6 \u001b[m}                                                                                          \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \u001b[m\r\n                                                                                               \u001b[38;3H\u001b[93m0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\u001b[m\r\n\r\n\r\n\u001b[94m~                                  "]
[822.280571, "o", "                                                            \u001b[38;13H\u001b[?25h"]
[822.583367, "o", "\u001b[?25l\u001b[48;1H\u001b[m:\u001b[?25h"]
[822.734692, "o", "w"]
[822.838901, "o", "\r"]
[822.839314, "o", "\u001b[?25l\"src/lexer_test.c\""]
[822.857498, "o", " 50L, 1086B written"]
[822.85811, "o", "\u001b[47;18H\u001b[1m\u001b[7m    "]
[822.858272, "o", "\u001b[38;13H\u001b[?25h"]
[823.381435, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[823.652957, "o", "!"]
[824.084773, "o", "\u001b[?25lmake test\u001b[?25h"]
[824.276162, "o", "\r"]
[824.276428, "o", "\u001b[?25l\u001b[11C\u001b[?1004l\u001b[?2004l\u001b[?1l\u001b>\u001b[?25h\u001b[>4;m\u001b[?1049l\r\n"]
[824.306138, "o", "clang    -c -o src/lexer_test.o src/lexer_test.c\r\n"]
[824.391837, "o", "clang   src/lexer_test.o src/lexer.o   -o src/lexer_test\r\n"]
[824.472931, "o", "./src/lexer_test\r\n"]
[824.475932, "o", "all test passed"]
[824.481031, "o", "\r\nPress ENTER or type command to continue"]
[825.402542, "o", "\u001b[?1049h\u001b[>4;2m\u001b[?1h\u001b=\u001b[?2004h\u001b[?1004h"]
[825.403216, "o", "\u001b[27m\u001b[29m\u001b[m\u001b[H\u001b[2J\u001b[?25l\u001b[1;1H\u001b[93m 18 \u001b[m\u001b[12Creturn TOK_COMMA;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 17 \u001b[m\u001b[8Ccase ':':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m 16 \u001b[m\u001b[12Clexer->column++;\u001b[63C\u001b[7m|\u001b[m\r\n\u001b[93m 15 \u001b[m\u001b[12Clexer->current++;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 14 \u001b[m\u001b[12Creturn TOK_COLON;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 13 \u001b[m\u001b[8Cdefault:\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m 12 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m 11 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m 10 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  9 \u001b[m}\u001b[90C\u001b[7m|\u001b[m\r\n\u001b[93m  8 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[mToken Lexer_NextToken(Lexer *lexer) {\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m    char c = Lexer_GetChar(lexer, 0);\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m    switch (c) {\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[8Ccase '\\0':\u001b[73C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[12Creturn TOK_EOF;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8Ccase ';': case '{': case '(': case '[':\u001b[44C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[8Ccase '}': case ')': case ']': case ',':\u001b[44C\u001b[7m|\u001b[m\r\n\u001b[93m  0 \u001b[m\u001b[8Ccase ':':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[12Creturn Lexer_NextOp(lexer);\u001b[52C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8Cdefault:\u001b["]
[825.403419, "o", "75C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\r\nsrc/lexer.c                                                                                    |\u001b[m\r\n\u001b[93m 13 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m 12 \u001b[m    {\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m 11 \u001b[m\u001b[8CSETUP(\"[];\")\u001b[71C\u001b[7m|\u001b[m\r\n\u001b[93m 10 \u001b[m\u001b[8CTESTNEXT(TOK_LBRACKET);\u001b[60C\u001b[7m|\u001b[m\r\n\u001b[93m  9 \u001b[m\u001b[8CTESTNEXT(TOK_RBRACKET);\u001b[60C\u001b[7m|\u001b[m\r\n\u001b[93m  8 \u001b[m\u001b[8CTESTNEXT(TOK_SEMICOLON);\u001b[59C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[m\u001b[8CTESTNEXT(TOK_EOF); // reach the end\u001b[48C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m\u001b[8CTESTNEXT(TOK_EOF); // no more lexing\u001b[47C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m    {\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8CSETUP(\":\")\u001b[73C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[8CTESTNEXT(TOK_COLON);\u001b[63C\u001b[7m|\u001b[m\r\n\u001b[93m  0 \u001b[m\u001b[8CTESTNEXT(TOK_EOF); // no more lexing\u001b[47C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m    printf(\"all test passed\");"]
[825.403623, "o", "\u001b[61C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m    return 0;\u001b[78C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m}\u001b[90C\u001b[7m|\u001b[44;96H|\u001b[45;96H|\u001b[46;96H|\u001b[m\u001b[44;1H\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \u001b[m\r\n\u001b[1m\u001b[7msrc/lexer_test.c                                                                                \u001b[m\u001b[1;97HCC=clang\u001b[3;97Hsrc/lexer_test: src/lexer.o src/lexer_test.o\u001b[5;97Htest: src/lexer_test\u001b[6;101H./src/lexer_test\u001b[7;97H\u001b[94m~                                                                                              \u001b[8;97H~                                                                                              \u001b[9;97H~                                                                                              \u001b[10;97H~                                                                  "]
[825.403731, "o", "                            \u001b[11;97H~                                                                                              \u001b[12;97H~                                                                                              \u001b[13;97H~                                                                                              \u001b[14;97H~                                                                                              \u001b[15;97H~                                                                                              \u001b[16;97H~                                                                                              \u001b[17;97H~                                                                                              \u001b[18;97H~                                                                                              \u001b[19;97H~                                                                                              "]
[825.404042, "o", "\u001b[20;97H~                                                                                              \u001b[21;97H~                                                                                              \u001b[22;97H~                                                                                              \u001b[23;97H~                                                                                              \u001b[m\u001b[24;97H\u001b[7mMakefile                                                                                       \u001b[m\u001b[25;97H#define LEXER_H\u001b[27;97H#include <stdlib.h>\u001b[29;97Htypedef enum LexerError {\u001b[30;101HLEX_EOK,\u001b[31;101HLEX_EUNKNOWN,\u001b[32;97H} LexerError;\u001b[34;97Htypedef enum Token {\u001b[35;101HTOK_ERR,\u001b[36;101HTOK_EOF,\u001b[37;101HTOK_SEMICOLON,\u001b[38;101HTOK_LBRACE,\u001b[39;101HTOK_LPAREN,\u001b[40;101HTOK_LBRACKET,\u001b[41;101HTOK_RBRACE,\u001b[42;101HTOK_RPAREN,\u001b[43;101HTOK_RBRACKET,\u001b[44;101HTOK_COMMA,\u001b[45;101HTOK_COLON,\u001b[46;97H} Token;\u001b[47;97H\u001b[7msrc/lexer.h                                                                      "]
[825.404161, "o", "              \u001b[38;13H\u001b[?25h"]
[826.129267, "o", "\u001b[?25l\u001b[m\u001b[25;3H\u001b[93m2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\u001b[37;13H\u001b[?25h"]
[826.280582, "o", "\u001b[?25l\u001b[25;3H1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[36;13H\u001b[?25h"]
[826.449048, "o", "\u001b[?25l\u001b[25;3H0\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[5C\u001b[46m{\u001b[m\u001b[36;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\u001b[m\u001b[5C\u001b[46m}\u001b[m\u001b[40;3H\u001b[93m5\r\n  6\r\n  7\r\n  8\u001b[35;9H\u001b[?25h"]
[826.800217, "o", "\u001b[?25l\u001b[25;3H1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[5C{\u001b[36;3H\u001b[93m0\r\n  1\r\n  2\r\n  3\u001b[m\u001b[5C}\u001b[40;3H\u001b[93m4\r\n  5\r\n  6\r\n  7\u001b[36;13H\u001b[?25h"]
[826.98393, "o", "\u001b[?25l\u001b[25;3H2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\u001b[37;13H\u001b[?25h"]
[827.151649, "o", "\u001b[?25l\u001b[25;3H3\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\u001b[38;13H\u001b[?25h"]
[827.526989, "o", "\u001b[19C"]
[828.014031, "o", "\b"]
[828.405866, "o", "\u001b[?25l\u001b[m                  \u001b[47;18H\u001b[1m\u001b[7m[+]\u001b[38;30H\u001b[?25h"]
[828.533225, "o", "\u001b[?25l\u001b[48;1H\u001b[m:\u001b[?25h"]
[828.741063, "o", "w"]
[828.829098, "o", "\r"]
[828.829465, "o", "\u001b[?25l\"src/lexer_test.c\""]
[828.850652, "o", " 50L, 1068B written"]
[828.851094, "o", "\u001b[47;18H\u001b[1m\u001b[7m    \u001b[38;30H\u001b[?25h"]
[829.116573, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[829.915491, "o", "\u001b[?25l\u001b[48;1H\u001b[K"]
[829.916045, "o", "\u001b[38;30H\u001b[?25h\u001b[?25l\u001b[25;3H\u001b[93m2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\u001b[37;30H\u001b[?25h"]
[830.091919, "o", "\u001b[?25l\u001b[25;3H1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[14C\u001b[46m(\u001b[m\":\"\u001b[46m)\u001b[m\u001b[37;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[36;22H\u001b[?25h"]
[830.251819, "o", "\u001b[?25l\u001b[25;3H0\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[5C\u001b[46m{\u001b[m\u001b[36;3H\u001b[93m1\u001b[m\u001b[14C(\":\")\u001b[37;3H\u001b[93m2\r\n  3\r\n  4\u001b[m\u001b[5C\u001b[46m}\u001b[m\u001b[40;3H\u001b[93m5\r\n  6\r\n  7\r\n  8\u001b[35;9H\u001b[?25h"]
[831.40156, "o", "\u001b[?25l\u001b[m\u001b[48;1H5 lines yanked\u001b[35;9H\u001b[?25h"]
[831.569979, "o", "\u001b[?25l\u001b[25;3H\u001b[93m1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[5C{\u001b[36;3H\u001b[93m0\r\n  1\r\n  2\r\n  3\u001b[m\u001b[5C}\u001b[40;3H\u001b[93m4\r\n  5\r\n  6\r\n  7\u001b[36;9H\u001b[?25h"]
[831.729734, "o", "\u001b[?25l\u001b[25;3H2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\u001b[37;9H\u001b[?25h"]
[831.913353, "o", "\u001b[?25l\u001b[25;3H3\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\u001b[38;9H\u001b[?25h"]
[832.097775, "o", "\u001b[?25l\u001b[25;3H4\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\u001b[m\u001b[5C\u001b[46m{\u001b[m\u001b[36;3H\u001b[93m3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[5C\u001b[46m}\u001b[m\u001b[40;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\u001b[39;9H\u001b[?25h"]
[832.545256, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[48;13H\u001b[K\u001b[25;3H\u001b[93m5\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\u001b[m\u001b[40;1H                                                                                               \r\n\u001b[93m  1 \u001b[m                                                                                           \r\n\u001b[93m  2 \u001b[m    printf(\"all test passed\");                                                             \r\n\u001b[93m  3 \u001b[m    return 0;                                                                              \r\n\u001b[93m  4 \u001b[m}                                                                                          \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \u001b[m\u001b[35;3H\u001b[93m5\u001b[m\u001b[5C{\u001b[36;3H\u001b[93m4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[5C}\r\n\u001b[93m  0 \u001b[m\u001b[47;18H\u001b[1m\u001b[7m[+]\u001b[40;9H\u001b[?25h"]
[832.676919, "o", "\u001b[m\u001b[48;1H\u001b[K\u001b[40;5H"]
[832.760321, "o", "\u001b[?25l"]
[832.760759, "o", "\u001b[?25h\u001b[?25l\u001b[48;1H5 more lines"]
[832.761979, "o", "\u001b[25;3H\u001b[93m6\r\n 15\r\n 14\r\n 13\r\n 12\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[5C\u001b[46m{\u001b[m\u001b[42;3H\u001b[93m1\u001b[m\u001b[5C    SETUP(\":\")            \u001b[43;3H\u001b[93m2\u001b[m\u001b[5C    TESTNEXT(TOK_COLON);\u001b[44;3H\u001b[93m3\u001b[m\u001b[1C \u001b[7CTESTNEXT(TOK_EOF);\r\n\u001b[93m  4 \u001b[m    \u001b[46m}\u001b[m                                                                                      \r\n\u001b[93m  5 \u001b[m                                                                                           \u001b[41;9H\u001b[?25h"]
[833.664197, "o", "\u001b[?25l\u001b[25;3H\u001b[93m0\u001b[m\u001b[9CTESTNEXT(TOK_EOF); // reach the end\u001b[26;2H\u001b[93m 9\u001b[m\u001b[5C    TESTNEXT(TOK_EOF); // no more lexing\u001b[27;2H\u001b[93m 8\u001b[m\u001b[5C}               \u001b[28;2H\u001b[93m 7\u001b[m\u001b[9C                       \u001b[29;2H\u001b[93m 6\u001b[m\u001b[5C{                          \u001b[30;2H\u001b[93m 5\u001b[m\u001b[9CSETUP(\":\")              \u001b[31;2H\u001b[93m 4\u001b[m\u001b[22CCOLON);               \u001b[32;3H\u001b[93m3\u001b[m\u001b[28C                 \u001b[33;3H\u001b[93m2\r\n  1\r\n  0\u001b[m\u001b[5C\u001b[46m{\u001b[m\u001b[36;3H\u001b[93m1\r\n  2\r\n\r\n  4\u001b[m\u001b[5C\u001b[46m}\u001b[m\u001b[40;3H\u001b[93m5\r\n  6\u001b[m\u001b[5Cprintf(\"all test passed\");\u001b[42;3H\u001b[93m7\u001b[m\u001b[5Creturn 0;     \u001b[43;3H\u001b[93m8\u001b[m\u001b[1C}\u001b[7C                    \r\n\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \u001b[m\u001b[48;1H\u001b[K\u001b[35;9H\u001b[?25h"]
[834.055326, "o", "\u001b[?25l\u001b[25;3H\u001b[93m1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[5C{\u001b[36;3H\u001b[93m0\r\n  1\r\n  2\r\n  3\u001b[m\u001b[5C}\u001b[40;3H\u001b[93m4\r\n  5\r\n  6\r\n  7\u001b[36;9H\u001b[?25h"]
[834.20703, "o", "\u001b[m "]
[834.230756, "o", "   "]
[834.742735, "o", "\u001b[?25l\u001b[25;3H\u001b[93m0\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\u001b[m\u001b[5C\u001b[46m{\u001b[m\u001b[36;3H\u001b[93m1\r\n  2\r\n  3\r\n  4\u001b[m\u001b[5C\u001b[46m}\u001b[m\u001b[40;3H\u001b[93m5\r\n  6\r\n  7\r\n  8\u001b[35;9H\u001b[?25h"]
[835.214296, "o", "\u001b[?25l\u001b[25;3H1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[5C{\u001b[36;3H\u001b[93m0\r\n  1\r\n  2\r\n  3\u001b[m\u001b[5C}\u001b[40;3H\u001b[93m4\r\n  5\r\n  6\r\n  7\u001b[36;13H\u001b[?25h"]
[835.614197, "o", "\u001b[?25l\u001b[mSETUP\u001b[46m(\u001b[m\":\"\u001b[46m)\b\b\b\b\b\u001b[?25h"]
[835.829759, "o", "\u001b[?25l\u001b[m\u001b[25;3H\u001b[93m2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\u001b[m\u001b[14C(\":\")\u001b[37;3H\u001b[93m0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\u001b[37;13H\u001b[?25h"]
[836.365237, "o", "\u001b[?25l\u001b[25;3H1\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\r\n  7\u001b[36;13H\u001b[?25h"]
[837.140633, "o", "\u001b[7C"]
[837.492553, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[1m-- INSERT --\u001b[m\u001b[36;20H\") \b\b\b\u001b[?25h"]
[837.796287, "o", "\u001b[?25l,\")\b\b\u001b[?25h"]
[837.914019, "o", "\u001b[48;1H\u001b[K\u001b[36;20H"]
[838.035699, "o", "\u001b[?25l"]
[838.036341, "o", "\u001b[?25h\u001b[?25l\u001b[25;3H\u001b[93m2\r\n 11\r\n 10\r\n  9\r\n  8\r\n  7\r\n  6\r\n  5\r\n  4\r\n  3\r\n  2\r\n  1\r\n  0\r\n  1\r\n  2\r\n  3\r\n  4\r\n  5\r\n  6\u001b[37;20H\u001b[?25h"]
[838.163634, "o", "\u001b[?25l\u001b[mT\u001b[46m(\u001b[9C)\u001b[37;21H\u001b[?25h"]
[838.664437, "o", "\u001b[?25l\u001b[m(\u001b[9C)\u001b[37;22H\u001b[?25h"]
[838.748548, "o", "T"]
[838.832763, "o", "O"]
[838.915669, "o", "K"]
[838.999419, "o", "_"]
[839.499722, "o", "\u001b[?25l\b\b\b\b\b\u001b[46m(\u001b[mTOK_\u001b[46m)\u001b[m;     \u001b[37;26H\u001b[?25h"]
[839.531127, "o", "\u001b[?25l\u001b[48;1H\u001b[1m-- INSERT --\u001b[37;26H\u001b[?25h"]
[841.658502, "o", "\u001b[?25l\u001b[mC\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[841.730455, "o", "\u001b[?25lO\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[841.930398, "o", "\u001b[?25lM\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[842.082143, "o", "\u001b[?25lM\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[842.121812, "o", "\u001b[?25lA\u001b[46m)\u001b[m;\b\b\u001b[?25h"]
[842.479102, "o", "\u001b[48;1H\u001b[K\u001b[37;30H"]
[842.752668, "o", "\u001b[?25l"]
[842.753121, "o", "\u001b[37;21H(\u001b[9C)\b\b\u001b[?25h\u001b[?25l\u001b[48;1H:\u001b[?25h"]
[842.920641, "o", "w"]
[843.008419, "o", "\r"]
[843.008801, "o", "\u001b[?25l\"src/lexer_test.c\""]
[843.030991, "o", " 56L, 1156B written"]
[843.031539, "o", "\u001b[47;18H\u001b[1m\u001b[7m    \u001b[37;30H\u001b[?25h"]
[843.304042, "o", "\u001b[?25l\u001b[m\u001b[48;1H\u001b[K\u001b[48;1H:\u001b[?25h"]
[843.57587, "o", "!"]
[844.096373, "o", "\u001b[?25lmake test\u001b[?25h"]
[844.264067, "o", "\r"]
[844.26413, "o", "\u001b[?25l\u001b[11C\u001b[?1004l\u001b[?2004l\u001b[?1l\u001b>\u001b[?25h\u001b[>4;m\u001b[?1049l\r\n"]
[844.292937, "o", "clang    -c -o src/lexer_test.o src/lexer_test.c\r\n"]
[844.378228, "o", "clang   src/lexer_test.o src/lexer.o   -o src/lexer_test\r\n"]
[844.457989, "o", "./src/lexer_test\r\n"]
[844.461112, "o", "all test passed"]
[844.464731, "o", "\r\nPress ENTER or type command to continue"]
[846.351248, "o", "\u001b[?1049h\u001b[>4;2m\u001b[?1h\u001b=\u001b[?2004h\u001b[?1004h"]
[846.351935, "o", "\u001b[27m\u001b[29m\u001b[m\u001b[H\u001b[2J\u001b[?25l\u001b[1;1H\u001b[93m 18 \u001b[m\u001b[12Creturn TOK_COMMA;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 17 \u001b[m\u001b[8Ccase ':':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m 16 \u001b[m\u001b[12Clexer->column++;\u001b[63C\u001b[7m|\u001b[m\r\n\u001b[93m 15 \u001b[m\u001b[12Clexer->current++;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 14 \u001b[m\u001b[12Creturn TOK_COLON;\u001b[62C\u001b[7m|\u001b[m\r\n\u001b[93m 13 \u001b[m\u001b[8Cdefault:\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m 12 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m 11 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m 10 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  9 \u001b[m}\u001b[90C\u001b[7m|\u001b[m\r\n\u001b[93m  8 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[mToken Lexer_NextToken(Lexer *lexer) {\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m    char c = Lexer_GetChar(lexer, 0);\u001b[54C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m    switch (c) {\u001b[75C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[8Ccase '\\0':\u001b[73C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[12Creturn TOK_EOF;\u001b[64C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8Ccase ';': case '{': case '(': case '[':\u001b[44C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[8Ccase '}': case ')': case ']': case ',':\u001b[44C\u001b[7m|\u001b[m\r\n\u001b[93m  0 \u001b[m\u001b[8Ccase ':':\u001b[74C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[12Creturn Lexer_NextOp(lexer);\u001b[52C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m\u001b[8Cdefault:\u001b["]
[846.352141, "o", "75C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[12Clexer->error = LEX_EUNKNOWN;\u001b[51C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m\u001b[12Creturn TOK_ERR;\u001b[64C\u001b[7m|\r\nsrc/lexer.c                                                                                    |\u001b[m\r\n\u001b[93m 12 \u001b[m\u001b[8CTESTNEXT(TOK_EOF); // reach the end\u001b[48C\u001b[7m|\u001b[m\r\n\u001b[93m 11 \u001b[m\u001b[8CTESTNEXT(TOK_EOF); // no more lexing\u001b[47C\u001b[7m|\u001b[m\r\n\u001b[93m 10 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  9 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  8 \u001b[m    {\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  7 \u001b[m\u001b[8CSETUP(\":\")\u001b[73C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m\u001b[8CTESTNEXT(TOK_COLON);\u001b[63C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m\u001b[8CTESTNEXT(TOK_EOF);\u001b[65C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m    {\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[8CSETUP(\",\")\u001b[73C\u001b[7m|\u001b[m\r\n\u001b[93m  0 \u001b[m\u001b[8CTESTNEXT(TOK_COMMA);\u001b[63C\u001b[7m|\u001b[m\r\n\u001b[93m  1 \u001b[m\u001b[8CTESTNEXT(TOK_EOF);\u001b[65C\u001b[7m|\u001b[m\r\n\u001b[93m  2 \u001b[m    }\u001b[86C\u001b[7m|\u001b[m\r\n\u001b[93m  3 \u001b[m\u001b[91C\u001b[7m|\u001b[m\r\n\u001b[93m  4 \u001b[m    printf(\"all test passed\");\u001b[61C\u001b[7m|\u001b[m\r\n\u001b[93m  5 \u001b[m    return 0;"]
[846.35229, "o", "\u001b[78C\u001b[7m|\u001b[m\r\n\u001b[93m  6 \u001b[m}\u001b[90C\u001b[7m|\u001b[44;96H|\u001b[45;96H|\u001b[46;96H|\u001b[m\u001b[44;1H\u001b[94m~                                                                                              \r\n~                                                                                              \r\n~                                                                                              \u001b[m\r\n\u001b[1m\u001b[7msrc/lexer_test.c                                                                                \u001b[m\u001b[1;97HCC=clang\u001b[3;97Hsrc/lexer_test: src/lexer.o src/lexer_test.o\u001b[5;97Htest: src/lexer_test\u001b[6;101H./src/lexer_test\u001b[7;97H\u001b[94m~                                                                                              \u001b[8;97H~                                                                                              \u001b[9;97H~                                                                                              \u001b[10;97H~                                                                                              \u001b[11;97H~   "]
[846.352518, "o", "                                                                                           \u001b[12;97H~                                                                                              \u001b[13;97H~                                                                                              \u001b[14;97H~                                                                                              \u001b[15;97H~                                                                                              \u001b[16;97H~                                                                                              \u001b[17;97H~                                                                                              \u001b[18;97H~                                                                                              \u001b[19;97H~                                                                                              \u001b[20;97H~                                                                                              "]
[846.352679, "o", "\u001b[21;97H~                                                                                              \u001b[22;97H~                                                                                              \u001b[23;97H~                                                                                              \u001b[m\u001b[24;97H\u001b[7mMakefile                                                                                       \u001b[m\u001b[25;97H#define LEXER_H\u001b[27;97H#include <stdlib.h>\u001b[29;97Htypedef enum LexerError {\u001b[30;101HLEX_EOK,\u001b[31;101HLEX_EUNKNOWN,\u001b[32;97H} LexerError;\u001b[34;97Htypedef enum Token {\u001b[35;101HTOK_ERR,\u001b[36;101HTOK_EOF,\u001b[37;101HTOK_SEMICOLON,\u001b[38;101HTOK_LBRACE,\u001b[39;101HTOK_LPAREN,\u001b[40;101HTOK_LBRACKET,\u001b[41;101HTOK_RBRACE,\u001b[42;101HTOK_RPAREN,\u001b[43;101HTOK_RBRACKET,\u001b[44;101HTOK_COMMA,\u001b[45;101HTOK_COLON,\u001b[46;97H} Token;\u001b[47;97H\u001b[7msrc/lexer.h                                                                                    \u001b[37;30H\u001b[?25h"]
[849.909839, "o", "\u001b[?25l\u001b[48;1H\u001b[m:\u001b[?25h"]
[853.324563, "o", "q"]
[854.299914, "o", "a"]
[855.220321, "o", "\r"]
[855.224731, "o", "\u001b[?25l\u001b[?2004l\u001b[>4;m\u001b[23;2t\u001b[23;1t\u001b[?1004l\u001b[?2004l\u001b[?1l\u001b>\u001b[?25h\u001b[>4;m\u001b[?1049l\r\r\n"]
[855.227672, "o", "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                                                                                                                                              \r \r"]
[855.227966, "o", "\r\u001b[0m\u001b[27m\u001b[24m\u001b[Jsoasme@soasme-macbook 2023-02-19-lexer % \u001b[K\u001b[?2004h"]
[856.435709, "o", "e"]
[856.667763, "o", "\bex"]
[856.74772, "o", "i"]
[856.867704, "o", "t"]
[857.42773, "o", "\b \b"]
[857.587844, "o", "\b \b"]
[857.739841, "o", "\b\be \b"]
[857.923805, "o", "\b \b"]
[858.611287, "o", "e"]
[858.803278, "o", "\bex"]
[858.891259, "o", "i"]
[858.99518, "o", "t"]
[859.059535, "o", "\u001b[?2004l\r\r\n"]
